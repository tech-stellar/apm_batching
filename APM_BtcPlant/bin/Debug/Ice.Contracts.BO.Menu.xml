<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ice.Contracts.BO.Menu</name>
    </assembly>
    <members>
        <member name="T:Ice.BO.MenuDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Ice.BO.MenuDataSet.MenuDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Ice.BO.MenuDataSet.MenuRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Ice.BO.MenuDataSet.MenuRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Ice.BO.MenuListDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Ice.BO.MenuListDataSet.MenuListDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Ice.BO.MenuListDataSet.MenuListRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Ice.BO.MenuListDataSet.MenuListRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Ice.BO.UpdExtMenuDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Ice.BO.UpdExtMenuDataSet.MenuDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Ice.BO.UpdExtMenuDataSet.MenuRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Ice.BO.UpdExtMenuDataSet.MenuRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Ice.Contracts.MenuSvcContract">
            <summary>
            Identifies the menu items that are displayed on the main menu.
            </summary>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.GetRowsTranslated(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Gets translation for each existing Row
            </summary>
            <param name="whereClauseMenu">whereClauseSetupGrp">Where condition without the where word</param>
            <returns>The Menu data set</returns>
            <param name="pageSize"># of records returned. 0 means all</param>
            <param name="absolutePage"></param>
            <param name="morePages">Are there more pages ? Yes/No</param>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.GetRowsWebAccess(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Gets Rows that that are accessible from the WEB
            </summary>
            <param name="whereClauseMenu">whereClauseSetupGrp">Where condition without the where word</param>
            <returns>The Menu data set</returns>
            <param name="pageSize"># of records returned. 0 means all</param>
            <param name="absolutePage"></param>
            <param name="morePages">Are there more pages ? Yes/No</param>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.GetMenuID(System.String)">
            <summary>
            Returns a DataSet given the primary key.
            </summary>
            <returns>The DataSet.</returns>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.GetRowsWebAccessTranslated(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Gets Rows that that are accessible from the WEB
            </summary>
            <param name="whereClauseMenu">whereClauseSetupGrp">Where condition without the where word</param>
            <returns>The Menu data set</returns>
            <param name="pageSize"># of records returned. 0 means all</param>
            <param name="absolutePage"></param>
            <param name="morePages">Are there more pages ? Yes/No</param>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.GetRowsCRM(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Gets Rows that that are accessible from the WEB
            </summary>
            <param name="whereClauseMenu">whereClauseSetupGrp">Where condition without the where word</param>
            <returns>The Menu data set</returns>
            <param name="pageSize"># of records returned. 0 means all</param>
            <param name="absolutePage"></param>
            <param name="morePages">Are there more pages ? Yes/No</param>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.GetRowsCRMTranslated(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Gets Rows that that are accessible from the WEB
            </summary>
            <param name="whereClauseMenu">whereClauseSetupGrp">Where condition without the where word</param>
            <returns>The Menu data set</returns>
            <param name="pageSize"># of records returned. 0 means all</param>
            <param name="absolutePage"></param>
            <param name="morePages">Are there more pages ? Yes/No</param>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.CopyBeforeMenuItem(System.String,System.String,System.String@,System.Boolean@)">
            <summary>
            Move or Copy one menu item (source) before another (Target)
            </summary>
            <param name="sourceMenuID">Menu ID of the source</param>
            <param name="targetMenuID">Menu ID of the target</param>
            <param name="newMenuID">new menu ID if source is copied</param>
            <param name="bSuccess">true = successful</param>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.CopyMenuRow(Ice.Tablesets.MenuTableset@,System.String,System.String,System.String,System.String)">
            <summary>
            Copy an existing Menu to a new menu row
            </summary>
            <param name="ds">Menu dataset</param>
            <param name="sourceCompany">Existing Menu Company</param>
            <param name="sourceMenuID">Existing Menu ID of the source</param>
            <param name="targetCompany">new menu company</param>
            <param name="targetMenuID">new menu ID</param>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.CopyToParentMenu(System.String,System.String,System.String@,System.Boolean@)">
            <summary>
            Move or Copy one menu item to the last menu item of the parent
            </summary>
            <param name="sourceMenuID">Menu ID of the source</param>
            <param name="parentMenuID">Menu ID of the parent</param>
            <param name="newMenuID">new menu ID if source is copied</param>
            <param name="bSuccess">true = successful</param>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.GetMenuForLicenseType(System.String,System.Boolean)">
            <summary>
            Gets the type of the menu for the license type that the client is running under.
            </summary>
            <param name="licenseType">Type of the license. Values: 'Default','CRM','TimeExpense'</param>
            <param name="filterForWebAccess">if set to <c>true</c> filters the menu items not available in Web Access.</param>
            <returns></returns>
            <remarks>
            This method is intended to be used by all the clients that wish to display the menu.
            For REST calls, make sure that the current Language is set in the CallSettings header
            before this method is called.
            </remarks>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.GlobalRecordFound(System.String,System.String@,System.Int32@)">
             <summary>
            
             </summary>
             <param name="MenuID"></param>
             <param name="Company"></param>
             <param name="CompanyVisibility"></param>
             <returns></returns>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.GetNewMenu(Ice.Tablesets.MenuTableset@,System.String)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.DeleteByID(System.String,System.String)">
            <summary>
            Deletes a row given its ID.
            </summary>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.GetByID(System.String,System.String)">
            <summary>
            Returns a DataSet given the primary key.
            </summary>
            <returns>The DataSet.</returns>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.GetList(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Returns a list of rows that satisfy the where clause.
            </summary>
            <param name="whereClause">An expression used to filter the rows. Can be left blank for all rows.</param>
            <param name="pageSize">The maximum number of rows to return. Leave as zero for no maximum.</param>
            <param name="absolutePage">Page of rows to return.</param>
            <param name="morePages">Whether there are more pages of rows available.</param>
            <returns>The list DataSet.</returns>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.GetRows(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Returns a dataset containing all rows that satisfy the where clauses.
            </summary>
            <returns>The full DataSet.</returns>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.GetBySysRowID(System.Guid)">
            <summary>
            </summary>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.GetBySysRowIDs(System.Collections.Generic.List{System.Guid})">
            <summary>
            </summary>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.Update(Ice.Tablesets.MenuTableset@)">
            <summary>
            Commits the DataSet changes to the data store.
            </summary>
            <param name="ds">The full DataSet.</param>
        </member>
        <member name="M:Ice.Contracts.MenuSvcContract.UpdateExt(Ice.Tablesets.UpdExtMenuTableset@,System.Boolean,System.Boolean,System.Boolean@)">
            <summary>
            Apply input data to BO by calling GetByID/GetNew/Update methods.
            </summary>
            <returns>The dataset with list of errors occurred during update process.</returns>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.MenuID">
            <summary>
            MM=module, XX=MN,UP,LS,PC, and ZZZZ = number.
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.MenuDesc">
            <summary>
            Menu Description
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.ParentMenuID">
            <summary>
            Needs manual validation because you cannot do can-find validation on the same file in the database validation.
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.Sequence">
            <summary>
            Menu Sequence Number
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.OptionType">
             <summary>
             S = Sub Menu,
            I = Menu Item (Program),
            B = Report Builder Report Link
             </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.OptionSubType">
             <summary>
             F = Form
            T = Tracker
            M = Maintenance
            P = Process
            R = Report
            E = Entry
             </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.Program">
             <summary>
             Either the path/program or the ID of the Custom Report Link to run.
            
             </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.Enabled">
            <summary>
            Enabled flag
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.SecCode">
            <summary>
            Security ID for the Program/SubMenu.
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.DoNotDisplayInMenu">
            <summary>
            If this field is YES, this menu item should not display in the Main Menu.
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.Arguments">
            <summary>
            Arguments to be passed to the program that this menu item refers to (see field "Program").
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.Module">
            <summary>
            Contains the licensing module that this menu item belongs to.
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.MenuType">
            <summary>
            Indicates a menu group that menu item belongs to
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.CGCCode">
            <summary>
            Country Group Code / Country Code for CSF
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.DashboardID">
            <summary>
            The Dashboard ID
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.ExpressAvailable">
            <summary>
            Whether this menu item is available under the Express edition.
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.SystemCode">
            <summary>
            SystemCode
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.OldProgram">
            <summary>
            OldProgram
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.Comment">
            <summary>
            Comment
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.CRMMenu">
            <summary>
            CRMMenu
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.SystemFlag">
            <summary>
            SystemFlag
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.SaaSParam">
            <summary>
            SaaSParam
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.Dashboard">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.DeveloperMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.Extension">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.Options">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.ReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.Customization">
            <summary>
            Customization
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.AllCompanies">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.MenuID">
            <summary>
            MM=module, XX=MN,UP,LS,PC, and ZZZZ = number.
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.MenuDesc">
            <summary>
            Menu Description
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.ParentMenuID">
            <summary>
            Needs manual validation because you cannot do can-find validation on the same file in the database validation.
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.Sequence">
            <summary>
            Menu Sequence Number
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.OptionType">
             <summary>
             S = Sub Menu,
            I = Menu Item (Program),
            B = Report Builder Report Link
             </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.OptionSubType">
             <summary>
             F = Form
            T = Tracker
            M = Maintenance
            P = Process
            R = Report
            E = Entry
             </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.Program">
             <summary>
             Either the path/program or the ID of the Custom Report Link to run.
            
             </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.Enabled">
            <summary>
            Enabled flag
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.SecCode">
            <summary>
            Security ID for the Program/SubMenu.
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.DoNotDisplayInMenu">
            <summary>
            If this field is YES, this menu item should not display in the Main Menu.
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.Arguments">
            <summary>
            Arguments to be passed to the program that this menu item refers to (see field "Program").
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.Module">
            <summary>
            Contains the licensing module that this menu item belongs to.
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.MenuType">
            <summary>
            Indicates a menu group that menu item belongs to
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.CGCCode">
            <summary>
            Country Group Code / Country Code for CSF
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.DashboardID">
            <summary>
            The Dashboard ID
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.ExpressAvailable">
            <summary>
            Whether this menu item is available under the Express edition.
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.CRMMenu">
            <summary>
            CRMMenu
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.Customization">
            <summary>
            Customization
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.Extension">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.ReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.Options">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.DeveloperMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.Dashboard">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Ice.Tablesets.MenuListRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
    </members>
</doc>
