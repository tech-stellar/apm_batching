<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Erp.Contracts.BO.JobEntry</name>
    </assembly>
    <members>
        <member name="T:Erp.BO.JobEntryDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobHeadDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobHeadAttchDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAsmblDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAsmblAttchDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAsmblInspDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobMtlDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobMtlAttchDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobMtlInspDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobMtlRefDesDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobMtlRestrictionDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobMtlRestrictSubstDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOperDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOperAttchDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOperInspDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOperMachParamDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOpDtlDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobResourcesDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOperRestrictionDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOperRestrictSubstDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAsmblRestrictionDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAsmblRestrictSubstDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAsmRefDesDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAuditDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobPartDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobProdDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobHeadRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobHeadAttchRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAsmblRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAsmblAttchRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAsmblInspRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobMtlRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobMtlAttchRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobMtlInspRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobMtlRefDesRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobMtlRestrictionRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobMtlRestrictSubstRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOperRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOperAttchRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOperInspRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOperMachParamRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOpDtlRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobResourcesRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOperRestrictionRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOperRestrictSubstRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAsmblRestrictionRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAsmblRestrictSubstRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAsmRefDesRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAuditRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobPartRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobProdRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobHeadRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobHeadAttchRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAsmblRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAsmblAttchRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAsmblInspRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobMtlRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobMtlAttchRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobMtlInspRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobMtlRefDesRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobMtlRestrictionRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobMtlRestrictSubstRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOperRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOperAttchRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOperInspRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOperMachParamRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOpDtlRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobResourcesRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOperRestrictionRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobOperRestrictSubstRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAsmblRestrictionRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAsmblRestrictSubstRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAsmRefDesRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobAuditRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobPartRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobEntryDataSet.JobProdRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JbAppendDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Erp.BO.JbAppendDataSet.JbMtlAppDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JbAppendDataSet.JbOprAppDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JbAppendDataSet.JbMtlAppRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JbAppendDataSet.JbOprAppRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JbAppendDataSet.JbMtlAppRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JbAppendDataSet.JbOprAppRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JMtlStatDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Erp.BO.JMtlStatDataSet.JMtlStatDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JMtlStatDataSet.JMtlStatRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JMtlStatDataSet.JMtlStatRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JMtlStatFiltersDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Erp.BO.JMtlStatFiltersDataSet.JMtlStatFiltersDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JMtlStatFiltersDataSet.JMtlStatFiltersRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JMtlStatFiltersDataSet.JMtlStatFiltersRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobCostsDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Erp.BO.JobCostsDataSet.AssemblyCostDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobCostsDataSet.MaterialCostDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobCostsDataSet.AssemblyCostRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobCostsDataSet.MaterialCostRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobCostsDataSet.AssemblyCostRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobCostsDataSet.MaterialCostRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.JobHeadListDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Erp.BO.JobHeadListDataSet.JobHeadListDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobHeadListDataSet.JobHeadListRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.JobHeadListDataSet.JobHeadListRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobHeadDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobHeadAttchDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAsmblDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAsmblAttchDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAsmblInspDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobMtlDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobMtlAttchDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobMtlInspDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobMtlRefDesDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobMtlRestrictionDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobMtlRestrictSubstDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOperDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOperAttchDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOperInspDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOperMachParamDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOpDtlDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobResourcesDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOperRestrictionDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOperRestrictSubstDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAsmblRestrictionDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAsmblRestrictSubstDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAsmRefDesDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAuditDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobPartDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobProdDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobHeadRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobHeadAttchRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAsmblRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAsmblAttchRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAsmblInspRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobMtlRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobMtlAttchRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobMtlInspRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobMtlRefDesRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobMtlRestrictionRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobMtlRestrictSubstRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOperRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOperAttchRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOperInspRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOperMachParamRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOpDtlRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobResourcesRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOperRestrictionRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOperRestrictSubstRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAsmblRestrictionRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAsmblRestrictSubstRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAsmRefDesRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAuditRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobPartRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobProdRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobHeadRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobHeadAttchRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAsmblRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAsmblAttchRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAsmblInspRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobMtlRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobMtlAttchRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobMtlInspRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobMtlRefDesRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobMtlRestrictionRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobMtlRestrictSubstRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOperRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOperAttchRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOperInspRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOperMachParamRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOpDtlRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobResourcesRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOperRestrictionRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobOperRestrictSubstRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAsmblRestrictionRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAsmblRestrictSubstRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAsmRefDesRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobAuditRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobPartRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtJobEntryDataSet.JobProdRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.Contracts.JobEntrySvcContract">
            <summary>
            The Job Entry service.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.AddOperation(System.Guid,System.String,System.Int32,System.Boolean,System.Boolean@)">
            <summary>
            THIS METHOD NEEDS TO BE PUBLIC - CALLED FROM bo/Project/Project.p
            </summary>
            <param name="ipJobAsmblRowID"></param>
            <param name="ipOPCode"></param>
            <param name="ipNewOprSeq"></param>
            <param name="ipReturn"></param>
            <param name="opShowmsg"></param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.AddRefDesRange(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.String,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            Creates new JobMtlRefDes records based on the JobMtl dataset fields.
            </summary>
            <param name="ipJobNum">The Job Number</param>
            <param name="ipAsmSeq">The Job Assembly</param>
            <param name="ipMtlSeq">The Job Material Seq</param>
            <param name="ipPrefix">The Prefix to be used to create Reference Designators</param>
            <param name="ipStartNum">The Starting Number to create Reference Designators</param>
            <param name="ipEndNum">The Ending Number to create Reference Designators</param>
            <param name="ipSuffix">The Suffix to be used to create Reference Designators</param>
            <param name="ds" type="Epicor.Mfg.BO.JobEntryDataSet">The Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.AllowJobCosts">
            <summary>
            This method exists solely for the purpose of allowing security for
            unchecking the AllowJobCosts flag
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.AppendDetails(Erp.Tablesets.JbAppendTableset,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.String@)">
            <summary>
            This method takes the records built in BuildAppendDetails that are marked as append
            and writes them to the database.  It will return the updated dataset.
            </summary>
            <param name="ds">Temporary tables for Append details</param>
            <param name="targetJob"> Target Job Number</param>
            <param name="targetAsm"> Target Job AssemblySeq </param>
            <param name="sourceFile"> Indicates where the details are being appended from.  Either Quote,
            Job or Method</param>
            <param name="keyOne">Unique key field one for Quote or Method source </param>
            <param name="keyTwo">Unique key field two for Quote or Method source </param>
            <param name="keyThree">Unique key field three for Method source (is blank for quote source) </param>
            <param name="getCostsFromInv"></param>
            <param name="getCostsFromTemp"></param>
            <param name="errorList">Returns a message listing any parts in error</param>
            <returns>Job Entry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.BuildAppendDetails(System.String,System.String,System.String,System.String,System.String,System.Int32,System.DateTime)">
            <summary>
            This method returns the information that can be appened for approval
            </summary>
            <param name="sourceFile">Source of the append details, Quote, Job or Method </param>
            <param name="keyOne">First key field of source </param>
            <param name="keyTwo">Second key field of source </param>
            <param name="keyThree">Third key field of source </param>
            <param name="targetJob"> Target Job Num </param>
            <param name="targetAsm">Target Assembly </param>
            <param name="vDueDate">Due Date to calculate V_AsOfDate and grac correct revision on Append Details. </param>
            <returns>Temporary tables for Append details</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.BuildWhseLinkList(System.Guid,System.String@,Erp.Tablesets.JobEntryTableset)">
            <summary>
            This methods builds a list of linked warehouses for the jobprod records.
            </summary>
            <param name="ipJobProdRowid">The rowid of the JobProd record to build the warehouses for</param>
            <param name="opWhseList">The resulting warehouse list</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CopyValuesOrderJob(System.String)">
            <summary>
            If the job is linked to an order with a configuration, and the AllowReconfig is true
            for the JobHead target entity, copy the values from the order to the job if the user
            is reconfiguring.
            </summary>
            <param name="ipJobNum">The job number to create the jobprod for</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CalcJobMtlEstMtlBurUnitCost(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method updates the calculation for the Estimated Material Burden Unit Cost,
            (JobMtl.EstMtlBurUnitCost) field.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeEquipID(System.String,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method should be invoked when the Equip ID changes.
            Validates the EQUIPID and refreshes linked fields.
            </summary>
            <param name="equipID">Proposed equipment id</param>
            <param name="ds" type="Epicor.Mfg.BO.JobEntryDataSet">The Job Entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeIssueTopics(System.String,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method should be invoked when the IssueTopics changes.
            Validates and sets the individual IssueTopic fields.
            </summary>
            <param name="topics">Proposed topics string id</param>
            <param name="ds" type="Epicor.Mfg.BO.JobEntryDataSet">The Job Entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobAsmblDirect(Erp.Tablesets.JobEntryTableset)">
            <summary>
            This method is called when the user has changed the JobAsmbl.Direct field.
            This methods is currently not working.  This method needs to check for a remote
            warehouse, if errors then set the JobAsmbl.Direct flag to true and then set the warehouse.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobAsmblEstSplitCosts(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method calculates the Estimated Unit Cost and Material Burden Unit Cost.
            This method is called when the user has changed one of the Unit Cost Breakdown
            fields: JobAsmbl.EstMtlUnitCost/EstLbrUnitCost/EstBurUnitCost/EstSubUnitCost.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobAsmblEstUnitCost(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method calculates the Estimated Material Burden Unit Cost.
            This method is called when the user has changed the JobAsmbl.EstUnitCost field.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobAsmblMtlBurRate(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This methods updates the JobAsmbl Material Burden Rate.
            This method should run when the JobAsmbl.MtlBurRate changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobAsmblOpr(System.Int32,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This methods updates the JobAsmbl Related Operation Description.
            This method should run when the JobAsmbl.RelatedOperation field changes.
            </summary>
            <param name="iProposedRelatedOperation">The new proposed JobAsmbl.RelatedOperation value</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobAsmblOverRunQty(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This methods updates the JobAsmbl Required Quantity.
            This method should run when the JobAsmbl.OverRunQty field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobAsmblParent(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method validates the new Parent field and populates defaults assoicated witht the Parent.
            This method should run when the JobAsmbl.Parent field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ValidateLinkToContractData(System.Boolean,System.String,System.String,System.String)">
            <summary>
            Validate Parts allowed for Planning Contracts.
            </summary>
            <param name="bLinkToContract">Indicates if LinkToContract was selected</param>k
            <param name="partNum">Part Number to be validated</param>
            <param name="jobnum">Job Number to find the ContractID row.</param>
            <param name="tablename">Table where the error is generated.</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobAsmblPartNum(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method validates the JobAsmbl.PartNum and defaults fields associated with the partnum.
            This method should run when the JobAsmbl.PartNum field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobAsmblQtyPer(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This methods updates the JobAsmbl Required Quantity.
            This method should run when the JobAsmbl.QtyPer field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobAsmblReassignSNAsm(System.Boolean,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            Checks if there is any other JobMtl or JobAsmbl records with ReassignSNAsm flag before enabling
            this flag for a specific JobAsmbl.
            </summary>
            <param name="proposedReassignSNAsm">The new proposed JobAsmbl.ReassignSNAsm value</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobAsmblRevisionNum(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This methods updates the JobAsmbl Drawing Number and creates drawing records.
            This method should run when the JobAsmbl.OverRunQty field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobAsmblValRefDes(System.Boolean,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            Verify that there are no other JobMtlRefDes records in the assembly having
            the same RefDes value if the JobAsmbl.ValRefDes = true. This method should
            run before changing the JobAsmbl.ValRefDes.
            </summary>
            <param name="ipProposedValResDes">The new proposed JobAsmbl.ValRefDes value</param>
            <param name="ds" type="Epicor.Mfg.BO.JobEntryDataSet">The Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobAsmblWarehouseCode(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This methods updates the JobAsmbl Available Quantity.
            This method should run when the JobAsmbl.WarehouseCode field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobAsmReqRefDes(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This methods assigns JobAsmbl.RDEndNum field when JobAsmbl.ReqRefDes changes.
            This method should run when the JobAsmbl.ReqRefDes changes.
            </summary>
            <param name="ds" type="Epicor.Mfg.BO.JobEntryDataSet">Job Entry dataset</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobAsmRestriction(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This methods assigns associated fields when JobAsmblRestriction.RestrictionTypeID changes.
            </summary>
            <param name="ds" type="Epicor.Mfg.BO.JobEntryDataSet">JobEntry dataset</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobAsmRestrictManual(System.Boolean,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            Called when the user changes the Manual field at the Job Assembly Restriction.
            </summary>
            <param name="checkManual">Indicates if the Restriction is Manual Compliant</param>
            <param name="ds" type="Epicor.Mfg.BO.JobEntryDataSet">JobEntry dataset.</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobAsmSubstance(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This methods assigns associated fields when JobAsmblRestrictSubst.SubstanceID changes.
            </summary>
            <param name="ds" type="Epicor.Mfg.BO.JobEntryDataSet">JobEntry dataset</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckJobHeadContractID(System.String,System.String@)">
            <summary>
            This method should run on JobHead.ContractID changing.
            </summary>
            <param name="ipJobNum"></param>
            <param name="ipContractID"></param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobHeadJobReleased(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method potentially updates the JobHead.JobEngineered field and the ttJobHead.EnableJobFirm
            This method should run when the JobHead.JobReleased field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobHeadPartNum(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method validates the JobHead.PartNum and defaults fields associated with the partnum.
            This method should run when the JobHead.PartNum field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobHeadPersonID(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method should run when the JobHead.PersonID field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobHeadPhaseID(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method updates the JobHead Required Due Date field
            This method should run when the JobHead.PhaseID field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobHeadProdCode(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method should run when the JobHead.ProdCode field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobHeadProdTeamID(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method should run when the JobHead.ProdTeamID field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckJobHeadProjectID(Erp.Tablesets.JobEntryTableset@,System.String)">
            <summary>
            This method should run on changing the JobHead.ProjectID.
            </summary>
            <param name="ds"></param>
            <param name="projectID"></param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobHeadProjectID(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method should run after the JobHead.ProjectID field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobHeadRevisionNum(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method updates the JobHead Drawing number and creates drawing records.
            This method should run when the JobHead.RevisionNum field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlBackflush(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method updates  fields associated with the JobMtl.Backflush field
            This method should run when the JobMtl.Backflush field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlBillable(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method updates the JobMtl Unit Price.
            This method should run when the JobMtl.Billable field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlBurUnitCost(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method updates the JobMtl.MtlBurRate
            This method should run when the JobMtl.EstMtlBurUnitCost field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlBuyIt(Erp.Tablesets.JobEntryTableset@)">
             <summary>
             This method updates numerous fields associated with the JobMtl.BuyIt field
             This method should run when the JobMtl.BuyIt field changes.
             </summary>
             <param name="ds">Job Entry data set</param>
            
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlCurrencySwitch(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method changes the display unit prices based on the flipping of the JobMtl.CurrencySwitch field
            This method should run when the JobMtl.CurrencySwitch external field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlDirect(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method updates fields associated with the JobMtl direct flag.
            This method should run when the JobMtl.Direct field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlDisplayUnitPrice(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method calculates the db unit price fields when the external display unit price changes.
            This method should run when the JobMtl.DisplayUnitPrice field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlEstSalSplitCosts(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method calculates the Estimated Salvage Unit Credit and Salvage Material
            Burden Unit Credit.
            This method is called when the user has changed one of the Salvage Unit Credit
            Breakdown fields: JobMtl.SalvageEstMtlUnitCredit/SalvageEstLbrUnitCredit/
            SalvageEstBurUnitCredit/SalvageEstSubUnitCredit.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlEstScrap(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method updates the JobMtl Required Quantity and price breaks
            This method should run when the JobMtl.EstScrap field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlEstScrapType(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method updates the JobMtl Required Quantity and price breaks
            This method should run when the JobMtl.EstScrapType field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlEstSplitCosts(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method calculates the Estimated Unit Cost and Material Burden Unit Cost.
            This method is called when the user has changed one of the Unit Cost Breakdown
            fields: JobMtl.EstMtlUnitCost/EstLbrUnitCost/EstBurUnitCost/EstSubUnitCost.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlFixedQty(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method updates the JobMtl Required Quantity and price breaks
            and if FixedQty is true then JobMtl.EstScrap = 0
            This method should run when the JobMtl.FixedQty field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlIUM(System.String,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            procedure for changing JobMtl.IUM field
            </summary>
            <param name="ipProposedIUM">The proposed IUM.</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlMiscCharge(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method validates if transaction exists and updates fields based on value of Misc. Charge flag.
            This method should run when the JobMtl.MiscCharge field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlMtlBurRate(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method updates the JobMtl.EstMtlBurUnitCost
            This method should run when the JobMtl.MtlBurRate field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlPartNum(Erp.Tablesets.JobEntryTableset@,System.Boolean,System.String@,System.Guid,System.String,System.String,System.String@,System.Boolean@,System.String@,System.Boolean@,System.Boolean@,System.String@)">
            <summary>
            This method validates the JobMtl.PartNum and defaults fields associated with the partnum.
            This method should run when the JobMtl.PartNum field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
            <param name="ipValidatePart">Flag to indicate if the part validations are required (used only after multiple match resolved)</param>
            <param name="ipPartNum">The input-output part number to validate and it gets returned</param>
            <param name="SysRowID">SysRowID (used only after multiple match resolved)</param>
            <param name="xrefPartNum">XRef Part Number (used only after multiple match resolved)</param>
            <param name="xrefPartType">XRef Part Type (used only after multiple match resolved)</param>
            <param name="vMsgText">Potential message to return, will be blank</param>
            <param name="vSubAvail">Returned flag stating if substitutes exist for this part</param>
            <param name="vMsgType">Type of message returned.
            Values can be; "Question" (asking if they want to use the substitute part)
            "Warning" (Warns them that a part is onhold or runout).
            "Error"   (Part in Inactive, or Onhold/Runout parts are not accepted in this case) .
            "Question" is asking if they want to use the substitute part.  </param>
            <param name="multipleMatch">Multiple matches were found. </param>
            <param name="opPartChgCompleted">Flag to indicate the part change was fully processed.</param>
            <param name="opMtlIssuedAction">Indicates the action to take when Mtl Qty has been issued to the Job.</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlPlant(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method should run when the JobMtl.Plant field changes.
            This method determines the default JobMtl.WarehouseCode associated with the new JobMtl.Plant.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlPricePerCode(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method recalculates the JobMtl Display Extended Price
            This method should run when the JobMtl.PricePerCode field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlPurPoint(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method runs vendor price break logic and sets RcvInspectionReq when JobMtl.PurPoint changes
            This method should run when the JobMtl.PurPoint field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlQtyPer(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method calculates the JobMtl Required Quantity when the JobMtl Quantity Per changes.
            This method should run when the JobMtl.QtyPer field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlRcvInspectionReq(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method checks the vendor and partclass to see if inspection is required
            This method should run when the JobMtl.RcvInspectionReq field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlReassignSNAsm(System.Boolean,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            Checks if there is any other JobMtl or JobAsmbl records with ReassignSNAsm flag before enabling
            this flag for a specific JobMtl.
            </summary>
            <param name="proposedReassignSNAsm">The new proposed JobMtl.ReassignSNAsm value</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlRelatedOperation(System.Int32,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method validates the JobMtl Related Operation field, sets the Estimated Scrap,
            and calculates the Required Quantity.
            This method should run when the JobMtl.RelatedOperation field changes.
            </summary>
            <param name="iProposedRelatedOperation">The new proposed JobMtl.RelatedOperation value</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlLinkToContract(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method should run when the JobMtl.LinkToContract changes.
            </summary>
            <param name="ds"></param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobAsmblLinkToContract(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method should run when the JobAsmbl.LinkToContract changes.
            </summary>
            <param name="ds"></param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlReqRefDes(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This methods assigns JobMtl.RDEndNum field when JobMtl.ReqRefDes changes.
            This method should run when the JobMtl.ReqRefDes changes.
            </summary>
            <param name="ds" type="Epicor.Mfg.BO.JobEntryDataSet">Job Entry dataset</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlRestriction(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This methods assigns associated fields when JobMtlRestriction.RestrictionTypeID changes.
            </summary>
            <param name="ds" type="Epicor.Mfg.BO.JobEntryDataSet">JobEntry dataset</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlSalvageMtlBurRate(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This methods updates the JobMtl Salvage Est Material Burden Unit Credit.
            This method should run when the JobMtl.SalvageMtlBurRate changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlSalvagePartNum(System.String,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This methods assigns associated fields when JobMtl.SalvagePartNum changes.
            This method should run when the JobMtl.SalvagePartNum changes.
            </summary>
            <param name="ipProposedSalvagePartNum">The new proposed JobMtl.SalvagePartNum value </param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlSalvageUnitCredit(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method calculates the Salvage Estimated Material Burden Unit Credit.
            This method is called when the user has changed the JobMtl.SalvageUnitCredit field.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlSubstance(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This methods assigns associated fields when JobMtlRestrictSubst.SubstanceID changes.
            </summary>
            <param name="ds" type="Epicor.Mfg.BO.JobEntryDataSet">JobEntry dataset</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobMtlVendorNumVendorID(System.String,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method runs vendor price break logic and sets RcvInspectionReq when JobMtl.VendorNumVendorID changes
            and validates the jobmtl.vendornumvendorid and assigns the associated fields.
            This method should run when the JobMtl.VendorNumVendorID field changes.
            </summary>
            <param name="ipProposedVendorNumVendorID">The proposed supplier id.</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOpDtlCapability(System.String,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            Method to call when changing the Capability ID.  This method will update JobOpDtl
            to see if the labor and burden rates need to be reset.  Blank is a valid entry for
            Capability ID.
            </summary>
            <param name="ProposedCapID">The proposed Capability ID </param>
            <param name="ds">The JobEntry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOpDtlEstSetHoursPerMch(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method recalculates the Estimated Setup Hours when Estimated Setup Hours Per Machine changes.
            This method should run when the JobOpDtl.EstSetHoursPerMch field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOpDtlOpsPerPart(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method calculates Estimated Production Hours when the OpsPerPart field changes.
            This method should run when the JobOpDtl.OpsPerPart field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOpDtlOverrideRates(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            Method to call when changing the Override Rates Flag.  This method will update
            JobOpDtl with the default labor and burden rates from the appropriate resource
            or resource group if the JobOpDtl.OverrideRates is set to false.
            </summary>
            <param name="ds">The JobEntry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOpDtlProdStandard(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method recalculates the Estimated Production Hours when ProdStandard changes.
            This method should run when the JobOpDtl.ProdStandard field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOpDtlResourceGrpID(System.String,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            Method to call when changing the Resource Group ID.  This method will update JobOpDtl
            with the default labor and burden rates from the new resource group.  Blank is a valid
            entry for Resource Group ID.
            </summary>
            <param name="ProposedResGrpID">The proposed Resource Group ID </param>
            <param name="ds">The Job Entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOpDtlResourceID(System.String,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            Method to call when changing the Resource ID.  This method will update JobOpDtl
            with the default labor and burden rates from the new resource.  Blank is a valid
            entry for Resource ID.
            </summary>
            <param name="ProposedResourceID">The proposed Resource ID </param>
            <param name="ds">The JobEntry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOpDtlStdBasis(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method recalculates the Estimated Production Hours when StdBasis changes.
            This method should run when the JobOpDtl.StdBasis field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOpDtlStdFormat(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method recalculates the Estimated Production Hours when StdFormat changes.
            This method should run when the JobOpDtl.StdFormat field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperAutoReceive(System.Boolean,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            </summary>
            <param name="ipProposedAutoReceive">The new proposed JobOper.AutoReceive value</param>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperBillable(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method calculates the Labor Rate and Unit Price when the Billable flag changes.
            This method should run when the JobOper.Billable field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperCurrencySwitch(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method changes the display unit prices based on the flipping of the JobOPer.CurrencySwitch field
            This method should run when the JobOper.CurrencySwitch external field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperDisplayUnitPrice(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method runs logic to calculate the doc price fields and the display extended price.
            This method should run when the JobOper.UnitPrice field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperDocUnitPrice(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method calculates Unit Price and Billable Unit Price when Doc Unit Price changes.
            This method should run when the JobOper.DocUnitPrice field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperEstLabHours(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method updates the Estimated Production Hours, rate fields, and Production Standard along with others.
            This method should run when the JobOper.EstLabHours field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperEstScrap(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method calculates Production and Scrap Quantities and estimate producition hours.
            This method should run when the JobOper.EstScrap field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperEstScrapType(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method calculates Production and Scrap Quantities and estimate producition hours.
            This method should run when the JobOper.EstScrapType field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperEstSetHoursPerMch(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method calculates the estimated labor hours when Job Type = "SRV" and
            update the display fields for service amount and labor amount.
            This method should run when the JobOper.EstSetHoursPerMch field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperIUM(System.String,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            procedure for changing JobOper.IUM field
            </summary>
            <param name="ipProposedIUM">The proposed IUM.</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperLaborEntryMethod(System.String,Erp.Tablesets.JobEntryTableset@)">
            
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperMachines(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method updates the fields associated with the changing of the machines,
            EstLabHours should change.
            This method should run when the JobOper.Machines field changes.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperOpCode(System.String,System.String@,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method sets Labor Rates when the JobOper.OpCode changes.
            This method should run when the JobOper.OpCode field changes.
            </summary>
            <param name="ProposedOpCode">The proposed Operation Code </param>
            <param name="RefreshMessage">The refresh message text </param>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperOprSeq(Erp.Tablesets.JobEntryTableset@)">
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperOpsPerPart(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method calculates Estimated Production Hours when the OpsPerPart field changes.
            This method should run when the JobOper.OpsPerPart field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperOpStdID(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method defaults the new setup and production values when the Operation Standard ID changes.
            This method should run when the JobOper.OpStdID field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperPartNum(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method validates the JobOper.PartNum and defaults fields associated with the partnum.
            This method should run when the JobOper.PartNum field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperPricePerCode(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method recalculates the JobOper Display Extended Price when PricePerCode changes.
            This method should run when the JobOper.PricePerCode field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperPrimaryProdOpDtl(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method defaults/resets the production standards when selecting Primary
            Production Operation Detail.
            This method should run when the JobOper.PrimaryProdOpDtl field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperPrimarySetupOpDtl(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method defaults/resets the setup values when selecting Primary
            Setup Operation Detail.
            This method should run when the JobOper.PrimarySetupOpDtl field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperProdStandard(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method recalculates teh Estimated Production Hours when ProdStandard changes.
            This method should run when the JobOper.ProdStandard field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperPurPoint(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method determines price breaks and check if inspection is required.
            This method should run when the JobOper.PurPoint field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperQtyPer(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method calculates the production scrap, determines vendor price breaks, and
            updates the display extended price.
            This method should run when the JobOper.QtyPer field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperRcvInspection(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method runs logic to determine if inspection is required.
            This method should run when the JobOper.RcvInspection field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperSNRequired(System.Boolean,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            </summary>
            <param name="ipProposedSNRequired">The new proposed JobOper.SNRequiredOpr value</param>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperSNRequiredSubConShip(System.Boolean,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            </summary>
            <param name="ipProposedSNRequiredSubConShip">The new proposed JobOper.SNRequiredOprSubConShip value</param>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperStdBasis(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method runs logic to calculate the estimated production hours.
            This method should run when the JobOper.StdBasis field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperStdFormat(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method runs logic to calculate the estimated production hours.
            This method should run when the JobOper.StdFormat field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperUnitPrice(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method runs logic to calculate the doc price fields and the display extended price.
            This method should run when the JobOper.UnitPrice field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOperVendorNumVendorID(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method runs logic to set the purchase points, calculate the price breaks,
            and checks to see if inspection is required.
            This method should run when the JobOper.VendorNumVendorID field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOprRestriction(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This methods assigns associated fields when JobOperRestriction.RestrictionTypeID changes.
            </summary>
            <param name="ds" type="Epicor.Mfg.BO.JobEntryDataSet">JobEntry dataset</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobOprSubstance(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This methods assigns associated fields when JobOperRestrictSubst.SubstanceID changes.
            </summary>
            <param name="ds" type="Epicor.Mfg.BO.JobEntryDataSet">JobEntry dataset</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobPartPartNum(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method validates the JobPart.PartNum and defaults fields associated with the partnum.
            This method should run when the JobPart.PartNum field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobProdMakeToJobQty(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method runs public method CheckJobProdQtyJob to validate quantities.
            This method should run when the JobProd.MakeToJobQty field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobProdMakeToStockQty(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method runs logic to set the stock and order WIP quantities
            This method should run when the JobProd.MakeToStockQty field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobProdMakeToType(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method runs logic determine what fields can have value based on the MakeToType
            and runs logic to set the stock and order WIP quantities.
            This method should run when the JobProd.MakeToType field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobProdOrderLine(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method runs sets the OrderRelNum to zero when OrderLine changes.
            This method should run when the JobProd.OrderLine field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobProdOrderNum(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method runs logic to numerous associated fields to blank or zero based on a new OrderNum.
            This method should run when the JobProd.OrderNum field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobProdOrderRelNum(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method runs logic to validate if a link exists, update the Production Quantity,
            set stock and order WIP quantities, and validate if direct has been selected.
            This method should run when the JobProd.OrderRelNum field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobProdOurStockQty(System.String@,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method runs public method CheckJobProdProdQty to validate quantities.
            This method should run when the JobProd.OurStockQty field changes.
            </summary>
            <param name="oMessage">Checking message</param>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobProdProdQty(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method runs public method CheckJobProdProdQty to validate quantities and
            set stock and order WIP quantities.
            This method should run when the JobProd.ProdQty field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobProdTargetAssemblySeq(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method runs logic to clear detail sequence and populate the MakeToJobQty field.
            This method should run when the JobProd.TargetAssemblySeq field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobProdTargetJobNum(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method should run when the JobProd.TargetJobNum field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeJobProdTargetMtlSeq(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method runs validation for links, assign values, and populate MakeToJobQty field
            This method should run when the JobProd.TargetMtlSeq field changes.
            </summary>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChangeResTopics(System.String,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method should be invoked when the ResTopics changes.
            Validates and sets the individual ResTopic fields.
            </summary>
            <param name="topics">Proposed topics string id</param>
            <param name="ds" type="Epicor.Mfg.BO.JobEntryDataSet">The Job Entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckApprovedSupplier(System.String,System.Guid,System.Guid,System.String@)">
            <summary>
            This method runs logic to verify if supplier is approved.  This should be called
            after adding/updating a demand link or adding/updating a subcontract operation.
            This method always needs a jobnumber inputted.  However, ipJobOperRowid or ipJobProdRowid
            can either be blank.  If ipJobOperRowid has value then this method will ignore any value
            in ipJobProdRowid.   This method will output warning messages that may or may not
            exist.
            </summary>
            <param name="ipJobNum">The job number to check for approved suppliers.</param>
            <param name="ipJobOperRowid">The rowid of subcontract operation to check.</param>
            <param name="ipJobProdRowid">The rowid of the demand link to check.</param>
            <param name="opWarningMsg">The potential warning message.</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckChangeJobAsmblParent(System.Int32,Erp.Tablesets.JobEntryTableset)">
            <summary>
            This method validates validates the new Parent field
            </summary>
            <param name="ipNewParent">New Parent value to check against</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckChangeJobMtlMiscCharge(System.Boolean,Erp.Tablesets.JobEntryTableset)">
            <summary>
            This method validates if transaction exists
            </summary>
            <param name="ipMiscCharge">New Misc Charge</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckChangeJobOperPartNum(System.String,System.String,System.Int32)">
            <summary>
            This method validates the JobOper.PartNum
            This method should run when the JobOper.PartNum field changes.
            </summary>
            <param name="ipJobNum">The Job Number</param>
            <param name="ipPartNum">The New PartNum to validate against.</param>
            <param name="ipAssemblySeq">The inputted Assembly Sequence to validate</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckChangeJobProdOrderRelNum(System.Int32,Erp.Tablesets.JobEntryTableset)">
            <summary>
            This method runs logic to validate if a link exists, and validate if direct has been selected.
            </summary>
            <param name="ipNewOrderRelNum">New OrderRelNum value to check against</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckChangeJobProdTargetAssemblySeq(System.Int32,Erp.Tablesets.JobEntryTableset)">
            <summary>
            This method checks if a record to make the assembly direct already exists.
            </summary>
            <param name="ipNewTargetAssemblySeq">New Target Assembly Number</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckChangeJobProdTargetJobNum(System.String,System.String@,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method checks to see if the target job is closed or not
            and returns a message if job is closed, also validates the jobnum
            </summary>
            <param name="ipNewTargetJobNum">The New TargetJobNum to validate against.</param>
            <param name="vMessage">The returned message</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckChangeJobProdTargetMtlSeq(System.Int32,Erp.Tablesets.JobEntryTableset)">
            <summary>
            This method runs validation for links, assign values, and populate MakeToJobQty field
            This method should run when the JobProd.TargetMtlSeq field changes.
            </summary>
            <param name="ipNewTargetMtlSeq">The New TargetMtlSeq to validate against.</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckConfiguration(System.String,System.Guid,System.String,System.String,System.Boolean,System.String@,System.Guid@,System.Boolean@,System.Boolean@,System.Boolean@,System.String@,System.String@,System.Boolean@,System.Boolean@,System.String@,System.String@)">
            <summary>
            This method checks if a part must be configured prior to a GetDetails.
            </summary>
            <param name="relatedToTable">Related To File </param>
            <param name="relatedToSysRowID">The job on which the configuration should be saved.</param>
            <param name="sourcePart">Part Num to get details from (populated when sourceFile = "Method")</param>
            <param name="sourceRevision">Revision number to get details from (populated when sourceFile = "Method")</param>
            <param name="findRevision"></param>
            <param name="foreignTable">Foreign row</param>
            <param name="foreignSysRowID">Foreign row SysRowID</param>
            <param name="configurationExists">If true the configurator should be run on the Job for the Part/Rev</param>
            <param name="canGetDetails">If false, GetDetails will fail for a configuration reason that can't be resolve by reconfiguring now</param>
            <param name="needsConfiguration">If true the configurator should be run on the Job for the Part/Rev</param>
            <param name="configureRevision">The revision that should be configured (if configuration is needed) </param>
            <param name="reasonMessage">The reason or for the failure or need for configuration.  This should be displayed to the user.</param>
            <param name="warningMsg"></param>
            <param name="isNIC"> indicates if the configuration is a No Inputs configurator</param>
            <param name="structTag"></param>
            <param name="ruleTag"></param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetApprovedConfiguredRevisionNum(System.String,System.String@)">
            <summary>
            Gets the most recent approved configured revision.
            </summary>
            <remarks>
            Needs Configurator Licence.
            This was created to be called from Materials Tree Context Menu after clicked Configure or Configuration,
            but can be called any time as needed in other processes, please be aware of the validations when does not exists PartRev
            and PartRev.Configured = false.
            </remarks>
            <param name="partNum">Part Number that will be used to get the most recent approved part revision</param>
            <param name="revisionNum">Return RevisionNum from the most recent approved part revision</param>
            <exception cref="T:Ice.BLException">Cannot find an approved revision.</exception>
            <exception cref="T:Ice.BLException">Most recent approved revision is not configured.</exception>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckForChanges(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean@)">
            <summary>
            This method determines if a job audit description needs to be entered into
            ttjobhead.changedescription to be stored in the jobaudit record.  Call this
            before the update of the JobHead record.
            </summary>
            <param name="cCompany">Should the user to be prompted for change description?</param>
            <param name="cJobNum">Should the user to be prompted for change description?</param>
            <param name="lJobEng">Should the user to be prompted for change description?</param>
            <param name="lJobRel">Should the user to be prompted for change description?</param>
            <param name="lInCopy">Should the user to be prompted for change description?</param>
            <param name="lSchedL">Should the user to be prompted for change description?</param>
            <param name="lChkOff1">Should the user to be prompted for change description?</param>
            <param name="lChkOff2">Should the user to be prompted for change description?</param>
            <param name="lChkOff3">Should the user to be prompted for change description?</param>
            <param name="lChkOff4">Should the user to be prompted for change description?</param>
            <param name="lChkOff5">Should the user to be prompted for change description?</param>
            <param name="opChangeDescription">Should the user to be prompted for change description?</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckInactiveSchedRequirement(System.String,System.String,System.String,System.String@)">
            <summary>
            Validates if we're using an Inactive Scheduling Resource
            </summary>
            <param name="capability">Capability to be validated</param>
            <param name="resourceID">Resource to be validated</param>
            <param name="resourceGroupID">Resource Group to be validated</param>
            <param name="inactiveMessage">The text of the message</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckJobMtlBuyIt(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method should run when the JobMtl.BuyIt field is changing.
            </summary>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckJobMtlPartNumFixQty(System.String,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method validates the Fixed Qty checkbox control on screen, according to Serial Numbers rules.
            </summary>
            <param name="ipProposedMtlPartNum">The new proposed ttJobMtl.PartNum value</param>
            <param name="ds">The JobEntry DataSet </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckJobOperOprSeq(System.String,System.Int32,System.Int32,System.String@)">
            <summary>
            This method validates for an invalid sequence for Operation of Subcontract
            </summary>
            <param name="ipJobNum">The inputted Job Number to validate</param>
            <param name="ipAssemblySeq">The inputted Assembly Sequence to validate</param>
            <param name="ipOprSeq">The inputted Operation Sequence to validate</param>
            <param name="vMessage">The value of the message if invalid subcontract or operation sequence</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckJobOperPrimaryProdOpDtl(Erp.Tablesets.JobEntryTableset@,System.Int32)">
            <summary>
            This method validated the value of Primary Production Operation Detail.
            This method should run when the JobOper.PrimaryProdOpDtl is changing.
            </summary>
            <param name="ds">The Job entry data set </param>
            <param name="ipPrimaryProdOpDtl">The new PrimaryProdOpDtl value to change to</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckJobOperPrimarySetupOpDtl(Erp.Tablesets.JobEntryTableset@,System.Int32)">
            <summary>
            This method validated the value of Primary Setup Operation Detail.
            This method should run when the JobOper.PrimarySetupOpDtl is changing.
            </summary>
            <param name="ds">The Job entry data set </param>
            <param name="ipPrimarySetupOpDtl">The new PrimarySetupOpDtl value to change to</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckJobPartPartNumIsSerTra(System.String,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method validates the JobPart.PartNum is not serial tracked. The rule is that additional JobPart
            records are not allowed to be serial tracked.
            </summary>
            <param name="ipProposedPartNum">The new proposed JobPart.PartNum value</param>
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckJobProdMakeToType(System.String,Erp.Tablesets.JobEntryTableset)">
            <summary>
            This method validates for an invalid if you can change the JobProd.MakeToType
            to the provided new value.
            </summary>
            <param name="ipChangeToType">The new maketotype value to change to</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckJobProdProdQty(System.Decimal,System.String@,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This method validates the JobProd.ProdQty field and returns a message.
            </summary>
            <param name="dProposedProdQty">The new proposed JobProd.ProdQty value</param>
            <param name="vMessage">The returned message</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckJobProdQtyJob(System.String@,Erp.Tablesets.JobEntryTableset)">
            <summary>
            This method checks the allocated material/assembly to see if short/over requested quantity
            and returns a message.
            </summary>
            <param name="vMessage">The returned message</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckLink(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            can be changed make direct or not
            </summary>
            <param name="targetJob"> Target Job Number </param>
            <param name="targetAsm"> Target Job AssemblySeq </param>
            <param name="targetMtl"> Target Job Mtl </param>
            <param name="isEnabled"> Make Direct Is Enabled </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckPrePartInfo(Erp.Tablesets.JobEntryTableset@,System.String@,System.Guid,System.Boolean,System.String,System.String,System.String@,System.Boolean@,System.String@,System.Boolean@)">
            <summary>
            This method checks to see if there are any questions or issues with the part entered
            and returns a message, a part number and if any substitutes exist.
            </summary>
            <param name="ds">JobEntryDataSet</param>
            <param name="partNum">The input-output part number to validate and it gets returned</param>
            <param name="SysRowID">SysRowID (used only after multiple match resolved)</param>
            <param name="skipXRefUpdate">Skip part xref jobhead field update logic (true for asm and mtl)</param>
            <param name="xrefPartNum">XRef Part Number (used only after multiple match resolved)</param>
            <param name="xrefPartType">XRef Part Type (used only after multiple match resolved)</param>
            <param name="vMsgText">Potential message to return, will be blank</param>
            <param name="vSubAvail">Returned flag stating if substitutes exist for this part</param>
            <param name="vMsgType">Type of message returned.
            Values can be; "Question" (asking if they want to use the substitute part)
            "Warning" (Warns them that a part is onhold or runout).
            "Error"   (Part in Inactive, or Onhold/Runout parts are not accepted in this case) .
            "Question" is asking if they want to use the substitute part.  </param>
            <param name="multipleMatch">Multiple matches were found. </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckPreProjectID(System.Guid,System.String@,Erp.Tablesets.JobEntryTableset)">
            <summary>
            This method validates the project id and returns a question if you would like to proceed message.
            </summary>
            <param name="ipJobProdRowid">The character rowid value of the JobProd to validate</param>
            <param name="vMessage">The returned message</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckResourcePlants(System.String,System.String@)">
            <summary>
            This method validates that the Plant of the job operation resources
            are the same as the job
            Maintenance Jobs are and exception,
            they can have resources of the Job Plant or Equipments Plant or the Plant Maintenance Plant
            </summary>
            <param name="cjobnum">Job number</param>
            <param name="runOutWarning">
            Warning Message about RunOut Parts on Job. Client to display this as a warning only
            </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckToReschedule(System.String,System.String,System.Nullable{System.DateTime},System.Decimal,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.String@)">
            <summary>
            This method checks the required due date and production quantity and
            returns a message asking if you would like to schedule if the conditions are met.
            </summary>
            <param name="cCompany">The returned message</param>
            <param name="cJobNum">The returned message</param>
            <param name="reqDueDate">The returned message</param>
            <param name="prodQty">The returned message</param>
            <param name="dueDate">The returned message</param>
            <param name="startDate">The returned message</param>
            <param name="jobEngineered">The returned message</param>
            <param name="vMessage">The returned message</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckTotProdQty(System.String,System.String,System.Decimal,System.String@)">
            <summary>
            This method checks the total production quantity and returns messages if conditions exist
            and the returned message will contain 'do you want to continue?'.
            Depending on how/where it is called, the ipJobNum may be blank and the ipQuantity may be zero.
            Job Entry calls this on "changing" of the Engineered flag to true. In this case it passes the ipQuantity is zero since
            the jobs production demands are already known.
            During Job Manager, Create Job the ipJobNum is blank, but the ipQuantity of the demand is passed since this demand is yet in the
            job.
            </summary>
            <param name="ipJobNum">The job number to validate</param>
            <param name="ipPartNum">The part number to validate </param>
            <param name="ipQuantity">The quantity of the new Demand being added. </param>
            <param name="vMessage">The returned message</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CheckUnfirmJob(System.String,System.String,System.String@)">
            <summary>
            This method checks to see if the unfirmed job the user is firming
            is the child of another job (make to job) that is as of yet
            not firmed. If so, then ask the user if they still want to continue to firm the
            job.
            </summary>
            <param name="ipJobNum">The job number</param>
            <param name="ipPartNum">The part number</param>
            <param name="vMessage">The returned message</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ChooseUnlink(System.Guid)">
            <summary>
            This method unlinks and deletes a jobprod record and returns the updated dataset
            </summary>
            <param name="ipJobProdRowid">The character rowid value of the JobProd to unlink</param>
            <returns>Results of dataset with the jobprod record removed</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.CreateJobPWB(System.String,System.Guid,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String@,System.String@)">
            <summary>
            The method will create a job when properly called from Planning Workbench.
            </summary>
            <param name="ipNewJobNum">The next/new job number to use.</param>
            <param name="ipPartSugRowid">The rowid of the partsug record to create job for.</param>
            <param name="ipGetDetails">The flag to get details.</param>
            <param name="ipScheduleAll">The flag to schedule all.</param>
            <param name="ipReleaseAll">The flag to release all. </param>
            <param name="ipTravelerReadyToPrint">Indicates if the Traveler can be printed </param>
            <param name="ipBackground">The flag to send the Job's creation to the background process.</param>
            <param name="opCreatedJobNum">The value of the created job number.
            If ipNewJobNum was blank then this would show the value of the generated job number.
            </param>
            <param name="opErrMsg">Potential error messages that did not cause processing to terminate. </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.DeleteAll(System.Guid)">
            <summary>
            The method deletes all assemblys and their subassemblys, materials and operations
            while leaving the base assembly sequence alone however removing the base assembly's material
            and operations.
            </summary>
            <param name="ipJobHeadRowid">The JobHead rowid of to delete all of the assemblies for</param>
            <returns>Job Entry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.DeleteRefDesRange(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.String,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            Deletes JobMtlRefDes records based on the JobMtl dataset fields.
            </summary>
            <param name="ipJobNum">The Job Number</param>
            <param name="ipAsmSeq">The Job Assembly</param>
            <param name="ipMtlSeq">The Job Material Seq</param>
            <param name="ipPrefix">The Prefix to be used to delete Reference Designators</param>
            <param name="ipStartNum">The Starting Number to delete Reference Designators</param>
            <param name="ipEndNum">The Ending Number to delete Reference Designators</param>
            <param name="ipSuffix">The Suffix to be used to delete Reference Designators</param>
            <param name="ds" type="Epicor.Mfg.BO.JobEntryDataSet">The Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.FindAssembly(System.String,System.Int32,System.String,System.Int32@,System.String@)">
            <summary>
            This method will locate a JobAsmbl record in the tree based on the inputted parameters.
            </summary>
            <param name="ipJobNum">The job number to search from.</param>
            <param name="ipStartAssemblySeq">The starting assembly sequence to search from.</param>
            <param name="ipPartNum">The part number or part number string to search for.</param>
            <param name="opAssemblySeq">The assembly sequence that was located by the search.</param>
            <param name="opRowid">The character representation of rowid of the JobAsmbl record located.</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetAssemblyCosts(System.String,System.Int32)">
            <summary>
            Returns the costs of Assemblies and Materials.
            </summary>
            <param name="ipJobNum">Job Number of the target Assembly</param>
            <param name="ipAssemblySeq">Assembly Sequence</param>
            <returns>Results JobCostsDataSet</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetByIdandJobType(System.String,System.String)">
            <summary>
            A variation of the standard GetByID. Besides JobNum also has parameter for JobType(s).
            Note JobType is a comma separated list of types to be considered valid for this Get.
            Used as a predecessor to calling GetByID.
            </summary>
            <param name="jobNum">JobHead.JobNum</param>
            <param name="jobType">JobHead.JobType</param>
            <returns>The Job Entry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetDatasetForTree(System.String,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            This methods will return the dataset for Job Entry.  The method will return the
            records related to the assembly provided and the first child level assemblies related to
            the input inputted assembly.
            </summary>
            <param name="ipJobNum">The Job Number to return data for. </param>
            <param name="ipStartAssemblySeq">The Assembly Sequence to return data for. </param>
            <param name="ipCurrentAssemblySeq">The Assembly Sequence to return data for. </param>
            <param name="ipCompleteTree">Would you like to return a complete dataset for this job number? </param>
            <param name="ipJobTypeMode">Job must be one of these types else it is an error. ipJobTypeMode can be blank, no constraint </param>
            <returns>Job Entry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetDetails(System.String,System.Int32,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This method retrieves the manufacturing details from a source file.  The source file
            will either be a Quote, a Job, or a Method (Part).  The assembly records will
            be created regardless if the part is in error or not.
            </summary>
            <param name="currJobNum">Job Number of the target Assembly</param>
            <param name="currAsmSeq">Sequence of the target Assembly</param>
            <param name="sourceFile">Source (Quote, Job, or Method) of the details to copy </param>
            <param name="sourceQuote">Quote Number to get details from (populated when sourceFile = "Quote")</param>
            <param name="sourceLine">Quote Line to get details from (populated when sourceFile = "Quote")</param>
            <param name="sourceJob">Job Number to get details from (populated when sourceFile = "Job")</param>
            <param name="sourceAsm">Quote Assembly to get details from (populated when sourceFile = "Quote" or "Job")</param>
            <param name="sourcePart">Part Num to get details from (populated when sourceFile = "Method")</param>
            <param name="sourceRev">Revision number to get details from (populated when sourceFile = "Method")</param>
            <param name="sourceAltMethod">Alternate Method to get details from (populated when sourceFile = "Method")</param>
            <param name="resequence">Indicates if assemblys should be resequenced</param>
            <param name="useMethodForParts">If true use the method passed in for all parts in assemblies, if false
            <param name="getCostsFromInv"></param>
            <param name="getCostsFromTemp"></param>
            use the assembly part's default method.</param>
            <returns>Results of the get details</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetJMtlStat(Erp.Tablesets.JMtlStatFiltersTableset)">
            <summary>
            This method returns the JMtlStat dataset.  This dataset is used for the
            Job Material Status view.  Prior to running this method, the RowMod field
            in JMtlStatFilters must be set to U if it does not alreay have this value.
            </summary>
            <param name="ds">Job Tracker Material Status filters data set</param>
            <returns>Job Tracker Material Status data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetJMtlStatFilters(System.String)">
            <summary>
            This method returns a record in the JMtlStatFilters dataset.  This record
            is used to capture the filters to retrieve the JMtlStat data for the
            Job Material Status view.
            </summary>
            <param name="JobNum">Job Number for the Job Material Status view</param>
            <returns>Job Tracker Material Status filters data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetLinkedQuoteLineList(System.String,System.String@)">
            <summary>
            This method returns a list of QuoteNum and QuoteLine values for a JobProd record whose
            OrderNum is greater than 0.
            </summary>
            <param name="ipJobNum">The JobNum to return values for</param>
            <param name="opQuoteLineList">The returned values in list form</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNextJobNum(System.String@)">
            <summary>
            This methods generates the next available job number from the JCSyst table.
            </summary>
            <param name="opNextJobNum">The outputted string of the next available job number</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNextJobNumOrderRelease(System.Guid,System.String@)">
            <summary>
            This methods generates the job number based off
            of the OrderRel record related to the input PartSug.
            </summary>
            <param name="ipPartSugRowid">The rowid of the partsug record to create job for.</param>
            <param name="opNextJobNum">The outputted string of the job number</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNextMntJobNum(System.String@)">
            <summary>
            Gets Next Job number for a "Maintenance" Job
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetProjectRoles">
            <summary>
            Returns list of Project Roles
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.InitJobOperSNReqSubConShip(Erp.Tablesets.JobEntryTableset@)">
            <param name="ds">The Job entry data set </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.InsertBOMAsm(System.Guid,System.Guid,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            This methods allows for the insertion of an engineering assembly for drag/drop functionality,
            validates a JobAsmbl record exists for the parent
            </summary>
            <param name="ipParentJobAsmblRowid">The rowid of the parent jobasmbl to add to</param>
            <param name="ipSourceRowid">The rowid of source record could be jobasmbl, jobmtl, or
            quotemtl to be added to the parent jobasmbl</param>
            <param name="ipOperSeq">The related operation seq (or 0 if unrelated)</param>
            <param name="ipDroppedAs">The character value to determine where to drop and to drop as what.
            valid values: JobAsmbl, JobAsmbl-AsMtl, QuoteAsm, QuoteAsm-AsMtl
            </param>
            <param name="ipReturn">Logical used to determine if you would like the dataset refreshed and brought back.</param>
            <param name="ipStartAssemblySeq">The Assembly Sequence to return data for. </param>
            <param name="ipCurrentAssemblySeq">The Assembly Sequence to return data for. </param>
            <param name="ipCompleteTree">Would you like to retun a complete dataset for this job number? </param>
            <returns>Job Entry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.InsertBOMMtl(System.Guid,System.Guid,System.Int32,System.Int32,System.Guid,System.String,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            This methods allows for the insertion of an engineering material for drag/drop functionality,
            validates a JobAsmbl record exists for the parent
            </summary>
            <param name="ipParentJobAsmblRowid">The rowid of the JobAsmbl record to add the material to</param>
            <param name="ipSourceRowid">The rowid of source record could be jobasmbl, jobmtl, or
            quotemtl to be added to the parent jobasmbl</param>
            <param name="ipOperSeq">The related operation seq (or 0 if unrelated)</param>
            <param name="ipMtlSeq">The material seq to use</param>
            <param name="ipBeforeMtlRowid">The material rowid to insert material before</param>
            <param name="ipDroppedAs">The character value to determine where to drop and to drop as what.
            valid values: PartMtl-AsMtl, PartMtl-AsAsm, JobMtl-AsAsm, JobMtl, QuoteMtl-AsAsm, QuoteMtl
            </param>
            <param name="ipReturn">Logical used to determine if you would like the dataset refreshed and brought back.</param>
            <param name="ipStartAssemblySeq">The Assembly Sequence to return data for. </param>
            <param name="ipCurrentAssemblySeq">The Assembly Sequence to return data for. </param>
            <param name="ipCompleteTree">Would you like to retun a complete dataset for this job number? </param>
            <returns>Job Entry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.InsertBOMOper(System.Guid,System.Guid,System.Int32,System.Guid,System.String,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            This methods allows for the insertion of an engineering operation for drag/drop functionality,
            validates a JobAsmbl record exists for the parent
            </summary>
            <param name="ipParentJobAsmblRowid">The rowid of the parent jobasmbl to add to</param>
            <param name="ipSourceRowid">The rowid of source record could be joboper, partopr, or
            quoteopr to be added to the parent jobasmbl</param>
            <param name="ipNewOperSeq">The new operation seq</param>
            <param name="ipBeforeOperRowid">The operation rowid to insert operation before</param>
            <param name="ipDroppedAs">The character value to determine where to drop and to drop as what.
            valid values: PartOpr, JobOper, QuoteOpr
            </param>
            <param name="ipReturn">Logical used to determine if you would like the dataset refreshed and brought back.</param>
            <param name="ipStartAssemblySeq">The Assembly Sequence to return data for. </param>
            <param name="ipCurrentAssemblySeq">The Assembly Sequence to return data for. </param>
            <param name="ipCompleteTree">Would you like to retun a complete dataset for this job number? </param>
            <returns>Job Entry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.InsertMaterial(System.Guid,System.String,System.Int32,System.Int32,System.Guid,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            This methods allows for the insertion on a material for drag/drop functionality,
            validates a JobAsmbl record exists and the part is valid.
            </summary>
            <param name="ipJobAsmblRowID">The rowid of the JobAsmbl record to add the material to</param>
            <param name="ipPartNum">The part number being added</param>
            <param name="ipOperSeq">The related operation seq (or 0 if unrelated)</param>
            <param name="ipMtlSeq">The material seq to use</param>
            <param name="ipBeforeMtlRowid">The material rowid to insert material before</param>
            <param name="ipReturn">Logical used to determine if you would like the dataset refreshed and brought back.</param>
            <param name="ipStartAssemblySeq">The Assembly Sequence to return data for. </param>
            <param name="ipCurrentAssemblySeq">The Assembly Sequence to return data for. </param>
            <param name="ipCompleteTree">Would you like to retun a complete dataset for this job number? </param>
            <returns>Job Entry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.InsertNewJobAsmbl(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            This method creates a new Assembly after prompting for the AsemblySeq and BOMLevel
            as well as the JobNum field. This is to replace the standard GetNewJobAsmbl when
            needing to insert a new record between two existing records.
            </summary>
            <param name="ds">Job Entry data set</param>
            <param name="jobNum">Assembly's parent Job</param>
            <param name="assemblySeq">Assembly's parent assembly Seq</param>
            <param name="bomLevel">Assembly's parent BOMLevel</param>
            <param name="priorAssemblySeq">If adding a sub-assembly record, this value is 0.  If
            insterting after a specific assembly then use that record's assembly seq (must be different
            from the parent assembly seq) </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.InsertNewJobMtl(System.Guid,System.String,System.Int32,System.Int32,System.Guid,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This methods allows for the insertion on a material for drag/drop functionality,
            validates a JobAsmbl record exists and the part is valid.
            </summary>
            <param name="ipJobAsmblRowID">The rowid of the JobAsmbl record to add the material to</param>
            <param name="ipPartNum">The part number being added</param>
            <param name="ipOperSeq">The related operation seq (or 0 if unrelated)</param>
            <param name="ipMtlSeq">The material seq to use</param>
            <param name="ipBeforeMtlRowid">The material rowid to insert material before</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.InsertNewJobOper(System.Guid,System.Int32,System.Guid,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            This methods allows for the insertion on a new operation between two records
            </summary>
            <param name="ipJobAsmblRowID">The rowid of the JobAsmbl record to add the operation to</param>
            <param name="ipNewOprSeq">The new operation seq</param>
            <param name="ipBeforeOperRowid">The operation rowid to insert operation before</param>
            <param name="ds">Job Entry data set</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.InsertOpDtlCapability(System.Guid,System.String,System.Int32,System.Guid,System.Boolean)">
            <summary>
            This method allows for the insertion of Capability on an operation to create
            operation detail for drag/drop functionality.
            </summary>
            <param name="ipJobOperRowID">The rowid of the JobOper record to add the operation detail to</param>
            <param name="ipCapabilityID">The Capability ID being added</param>
            <param name="ipNewOpDtlSeq">The new operation detail seq</param>
            <param name="ipBeforeOpDtlRowid">The operation detail rowid to insert operation detail before</param>
            <param name="ipReturn">Logical used to determine if you would like the dataset refreshed and brought back.</param>
            <returns>Job Entry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.InsertOpDtlResGroup(System.Guid,System.String,System.Int32,System.Guid,System.Boolean)">
            <summary>
            This method allows for the insertion of Resource Group on an operation to create
            operation detail for drag/drop functionality.
            </summary>
            <param name="ipJobOperRowID">The rowid of the JobOper record to add the operation detail to</param>
            <param name="ipResourceGrpID">The Resource Group ID being added</param>
            <param name="ipNewOpDtlSeq">The new operation detail seq</param>
            <param name="ipBeforeOpDtlRowid">The operation detail rowid to insert operation detail before</param>
            <param name="ipReturn">Logical used to determine if you would like the dataset refreshed and brought back.</param>
            <returns>Job Entry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.InsertOpDtlResource(System.Guid,System.String,System.Int32,System.Guid,System.Boolean)">
            <summary>
            This method allows for the insertion of Resource on an operation to create
            operation detail for drag/drop functionality.
            </summary>
            <param name="ipJobOperRowID">The rowid of the JobOper record to add the operation detail to</param>
            <param name="ipResourceID">The Resource ID being added</param>
            <param name="ipNewOpDtlSeq">The new operation detail seq</param>
            <param name="ipBeforeOpDtlRowid">The operation detail rowid to insert operation detail before</param>
            <param name="ipReturn">Logical used to determine if you would like the dataset refreshed and brought back.</param>
            <returns>Job Entry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.InsertOperationOP(System.Guid,System.String,System.Int32,System.Guid,System.Boolean,System.String@)">
            <summary>
            This methods allows for the insertion on an operation for drag/drop functionality
            </summary>
            <param name="ipJobAsmblRowID">The rowid of the JobAsmbl record to add the operation to</param>
            <param name="ipOpCode">The operation code being added</param>
            <param name="ipNewOprSeq">The new operation seq</param>
            <param name="ipBeforeOperRowid">The operation rowid to insert operation before</param>
            <param name="ipReturn">Logical used to determine if you would like the dataset refreshed and brought back.</param>
            <param name="opMessage">Warning message to let the user know that a subcontract operation
            will be created with no vendor information. </param>
            <returns>Job Entry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.InsertOperCapability(System.Guid,System.String,System.Int32,System.Guid,System.Boolean,System.String@)">
            <summary>
            This method allows for the insertion of Capability on an assembly to create
            JobOper/JobOpDtl for drag/drop functionality.
            </summary>
            <param name="ipJobAsmblRowID">The rowid of the JobAsmbl record to add the operation detail to</param>
            <param name="ipCapabilityID">The Capability ID being added</param>
            <param name="ipNewOprSeq">The new operation seq</param>
            <param name="ipBeforeOprRowid">The operation rowid to insert operation before</param>
            <param name="ipReturn">Logical used to determine if you would like the dataset refreshed and brought back.</param>
            <param name="opMessage">Warning message to let the user know that a subcontract operation
            will be created with no vendor information. </param>
            <returns>Job Entry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.InsertOperResGroup(System.Guid,System.String,System.Int32,System.Guid,System.Boolean,System.String@)">
            <summary>
            This method allows for the insertion of ResourceGroup on an assembly to create
            JobOper/JobOpDtl for drag/drop functionality.
            </summary>
            <param name="ipJobAsmblRowID">The rowid of the JobAsmbl record to add the operation detail to</param>
            <param name="ipResourceGrpID">The Resource Group ID being added</param>
            <param name="ipNewOprSeq">The new operation seq</param>
            <param name="ipBeforeOprRowid">The operation rowid to insert operation before</param>
            <param name="ipReturn">Logical used to determine if you would like the dataset refreshed and brought back.</param>
            <param name="opMessage">Warning message to let the user know that a subcontract operation
            will be created with no vendor information. </param>
            <returns>Job Entry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.InsertOperResource(System.Guid,System.String,System.Int32,System.Guid,System.Boolean,System.String@)">
            <summary>
            This method allows for the insertion of Resource on an assembly to create
            JobOper/JobOpDtl for drag/drop functionality.
            </summary>
            <param name="ipJobAsmblRowID">The rowid of the JobAsmbl record to add the operation detail to</param>
            <param name="ipResourceID">The Resource ID being added</param>
            <param name="ipNewOprSeq">The new operation seq</param>
            <param name="ipBeforeOprRowid">The operation rowid to insert operation before</param>
            <param name="ipReturn">Logical used to determine if you would like the dataset refreshed and brought back.</param>
            <param name="opMessage">Warning message to let the user know that a subcontract operation
            will be created with no vendor information. </param>
            <returns>Job Entry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.InsertSubAssembly(System.Guid,System.String,System.Int32,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            This methods allows for the insertion of a subassembly for drag/drop functionality,
            validates the part.
            </summary>
            <param name="ipJobAsmblRowID">The rowid of the JobAsmbl record to add the material to</param>
            <param name="ipPartNum">The part number being added</param>
            <param name="ipOperSeq">The related operation seq (or 0 if unrelated)</param>
            <param name="ipReturn">Logical used to determine if you would like the dataset refreshed and brought back.</param>
            <param name="ipStartAssemblySeq">The Assembly Sequence to return data for. </param>
            <param name="ipCurrentAssemblySeq">The Assembly Sequence to return data for. </param>
            <param name="ipCompleteTree">Would you like to return a complete dataset for this job number? </param>
            <returns>Job Entry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.InsertNewSubAssembly(System.Guid,System.String,System.Int32,System.Boolean,System.Int32,System.Int32,System.Boolean,System.String@,System.Int32@,System.Guid@)">
            <summary>
            This methods allows for the insertion of a subassembly for drag/drop functionality,
            validates the part.
            </summary>
            <param name="ipJobAsmblRowID">The rowid of the JobAsmbl record to add the material to</param>
            <param name="ipPartNum">The part number being added</param>
            <param name="ipOperSeq">The related operation seq (or 0 if unrelated)</param>
            <param name="ipReturn">Logical used to determine if you would like the dataset refreshed and brought back.</param>
            <param name="ipStartAssemblySeq">The Assembly Sequence to return data for. </param>
            <param name="ipCurrentAssemblySeq">The Assembly Sequence to return data for. </param>
            <param name="ipCompleteTree">Would you like to return a complete dataset for this job number? </param>
            <param name="revisionNum">Revision from the JobAssmbly added</param>
            <param name="newJobAsmblSeq">Sequence from the JobAssmbly added </param>
            <param name="newJobAsmblSysRowID">JobAssembly SysRowID from the JobAssmbly added</param>
            <returns>Job Entry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.JobScheduling(System.String,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Calls jc/jcshded.p and performs the job scheduling without an interface like in Sales Order
            </summary>
            <param name="ipJobNum">The  Job to schedule</param>
            <param name="ipReturn">Logical used to determine if you would like the dataset refreshed and brought back.</param>
            <param name="ipStartAssemblySeq">The Assembly Sequence to return data for. </param>
            <param name="ipCurrentAssemblySeq">The Assembly Sequence to return data for. </param>
            <param name="ipCompleteTree">Would you like to retun a complete dataset for this job number? </param>
            <returns>Job Entry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.PreCheckNewJobProd(System.String,System.String,System.String)">
            <summary>
            This method is ran before GetNewJobProd.  It will determine if you can create a
            demand link with a Make To Type of Stock.  It will validate that you aren't creating
            a Stock demand link with a non-stock part.
            </summary>
            <param name="ipJobNum">The job number to create the jobprod for</param>
            <param name="ipPartNum">The part number to create the jobprod for </param>
            <param name="ipMakeToType">The new maketotype value to create the jobprod with.
            Valid Values: STOCK, ORDER, JOB </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.PreGetDetails(System.String,System.String,System.String,System.String,System.Int32,System.String@,System.String@,System.String@,System.Guid)">
            <summary>
            This method should be called right before the GetDetails method.  It necessasry,
            it'll return a question on resequencing assembly's while getting details.
            The answer will be sent as a parameter to the GetDetails method.
            This method will also return a BasePartNum and BaseRevisionNum.  If the BasePartNum
            isn't null then use this as the default part number for GetDetails.
            This is called from GetDetailsEntry
            </summary>
            <param name="sourcePartNum">Indicates the source part number to get details from </param>
            <param name="sourceRevisionNum">Indicates the source revision number to get details from </param>
            <param name="sourceFile">Indicates where the details are being appended from.  Either Quote,
            Job or Method</param>
            <param name="targetJobNum">Target Job Number</param>
            <param name="targetAsm">Sequence of the target Assembly</param>
            <param name="vMessage"> Returns resequence question </param>
            <param name="BasePartNum"> Returns the Base Part Number to use for get details </param>
            <param name="BaseRevisionNum"> Returns the Base Revision Number to use for get details </param>
            <param name="sourceSysRowID"></param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ResequenceOperations(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            
             <summary>
             This method will resequence the operations, update the ECORev and JobMtl records.
             This method should run from the menu/task "Operation>Resequence" as it was in the old
             Vantage 6.1.  When the method is finished running, it will run a GetById based on the
             inputted Group ID. This will cause a refreshing of the dataset to reflect all of the changes.
             </summary>
             <param name="ipJobNum">The Job Number to return data for. </param>
             <param name="ipAssemblySeq">The Assembly Sequence to return data for. </param>
             <param name="ipCompleteTree">Would you like to return a complete dataset for this job number? </param>
             <param name="ipGetDatasetForTree">Used for GetDatasetForTree, Would you like to retun a complete dataset for this Job</param>
             <param name="ipReturn">Logical to determine if you would like the dataset refreshed and brought back
             refreshed by GetDatasetForTree?  True = call GetDatasetFor, False = call GetByID</param>
             <returns>The JobEntry data set</returns>
            
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ResequenceMaterials(System.String,System.Int32,System.Boolean,System.String,System.Boolean,System.Boolean)">
            <summary>
            This method will resequence the operations, update the JobMtl records.
            This method should run from the context menu > Resequence
            When the method is finished running, it will run a GetDatasetForTree or GetByID
            Depending on what is passed from UI.
            </summary>
            <param name="ipJobNum">The Job Number to return data for. </param>
            <param name="ipAssemblySeq">The Assembly Sequence to return data for. </param>
            <param name="ipCompleteTree">Would you like to return a complete dataset for this job number? </param>
            <param name="ipResequenceBy">Will provide the field to resequence the materials by.</param>
            <param name="ipGetDatasetForTree">Used for GetDatasetForTree, Would you like to retun a complete dataset for this Job</param>
            <param name="ipReturn">Logical to determine if you would like the dataset refreshed and brought back
            refreshed by GetDatasetForTree?  True = call GetDatasetFor, False = call GetByID</param>
            <returns>The JobEntry data set</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.PreInsertSubAssembly(System.String,System.String@)">
            <summary>
            This method should be called right before the InsertMaterial.  It necessasry,
            it'll return a warning if there is no source method.
            </summary>
            <param name="ipPartNum">The inputted part number</param>
            <param name="vMessage"> Returns warning </param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.RemoveFromSchedule(System.String)">
            <summary>
            Removes job from schedule
            </summary>
            <param name="ipJobNum">Job number</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ValidateInspection(System.String,System.String,System.String,System.Boolean,Erp.Tablesets.JobEntryTableset@)">
            <summary>
            Method to validate the Inspection control fields. (EQM)
            </summary>
            <param name="ipProposedInspPlan">The new proposed InspPlanPartNum value</param>
            <param name="ipProposedSpecId">The new proposed SpecID value</param>
            <param name="iptable">table name</param>
            <param name="setRev">if set default revision</param>
            <param name="ds" type="Epicor.Mfg.BO.JobEntryDataSet">The Job entry Dataset.</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ValidateJobNum(System.String)">
            <summary>
            This method will validate that the job number entered not through a search
            will be a valid job number for the entered plant.
            </summary>
            <param name="ipJobNum">The entered job number.</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetPlantConfCtrlUse3rdPartySched">
            <summary>
            Get the Use3rdPartySched field from PlantConfCtrl table.
            </summary>
            <returns> bool: the value </returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.ValidateRefDes(System.String,System.Int32)">
            <summary>
            Check the number of reference designators are equal to
            the Required Ref Designators defined on JobMtl.
            </summary>
            <param name="ipJobNum">Job Number to validate</param>
            <param name="ipAsmSeq">Assembly Seq of the Job Number to validate or -1 to validate all of them</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.nextMtlRefDesSeq(System.String,System.String,System.Int32)">
            <summary>
            Functions nextAsmInspPlanSeq,nextMtlInspPlanSeq, nextMtlRefDesSeq, and nextOprInspPlanSeq are used during
            the CollapseAssembly process.
            </summary>
            <param name="cCompany"></param>
            <param name="cJobNum"></param>
            <param name="iAsmSeq"></param>
            <returns></returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetIfCurrentSiteHasExternalMES">
            <summary>
            Purpose:
            Parameters:  none
            Notes:
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetJobMtlIsMtlConfigurationOn(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            After Material was configured we need to check if was success to display the correct Materials Tree Context Menu option (Configure or Configuration)
            </summary>
            <param name="ds"></param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobHead(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobHeadAttch(Erp.Tablesets.JobEntryTableset@,System.String)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobAsmbl(Erp.Tablesets.JobEntryTableset@,System.String)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobAsmblAttch(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobAsmblInsp(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobMtl(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobMtlAttch(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobMtlInsp(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobMtlRefDes(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobMtlRestriction(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobMtlRestrictSubst(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobOper(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobOperAttch(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobOperInsp(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobOperMachParam(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobOpDtl(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobOperRestriction(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobOperRestrictSubst(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobAsmblRestriction(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobAsmblRestrictSubst(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32,System.String)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobAsmRefDes(Erp.Tablesets.JobEntryTableset@,System.String,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobAudit(Erp.Tablesets.JobEntryTableset@,System.String,System.Nullable{System.DateTime})">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobPart(Erp.Tablesets.JobEntryTableset@,System.String)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetNewJobProd(Erp.Tablesets.JobEntryTableset@,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.DeleteByID(System.String)">
            <summary>
            Deletes a row given its ID.
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetByID(System.String)">
            <summary>
            Returns a DataSet given the primary key.
            </summary>
            <returns>The DataSet.</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetList(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Returns a list of rows that satisfy the where clause.
            </summary>
            <param name="whereClause">An expression used to filter the rows. Can be left blank for all rows.</param>
            <param name="pageSize">The maximum number of rows to return. Leave as zero for no maximum.</param>
            <param name="absolutePage">Page of rows to return.</param>
            <param name="morePages">Whether there are more pages of rows available.</param>
            <returns>The list DataSet.</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetRows(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Returns a dataset containing all rows that satisfy the where clauses.
            </summary>
            <returns>The full DataSet.</returns>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetBySysRowID(System.Guid)">
            <summary>
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.GetBySysRowIDs(System.Collections.Generic.List{System.Guid})">
            <summary>
            </summary>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.Update(Erp.Tablesets.JobEntryTableset@)">
            <summary>
            Commits the DataSet changes to the data store.
            </summary>
            <param name="ds">The full DataSet.</param>
        </member>
        <member name="M:Erp.Contracts.JobEntrySvcContract.UpdateExt(Erp.Tablesets.UpdExtJobEntryTableset@,System.Boolean,System.Boolean,System.Boolean@)">
            <summary>
            Apply input data to BO by calling GetByID/GetNew/Update methods.
            </summary>
            <returns>The dataset with list of errors occurred during update process.</returns>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.JobComplete">
            <summary>
            Indicates if  "Job"  is complete.  This is a mirror image of JobHead.Complete.  Not directly maintainable.  When the Job is completed, then all JobMtl records are also marked.  This is used to make database access to open material records more efficient.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.IssuedComplete">
            <summary>
            Indicates if this material requirement has been issued complete.  If "yes" then this record is NOT part of the Part.AllocQty total even if it had been issued less than the original required quantity.  The user may toggle the setting if the JobHead.Complete is "NO".  When it is toggled the allocation logic will be triggered if necessary. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.JobNum">
            <summary>
            Job Number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.AssemblySeq">
            <summary>
            Assembly sequence number that this material is associated with.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.MtlSeq">
            <summary>
            A sequence number that uniquely defines the Material (JobMtl) record within a specific Job/Assembly.  This is system assigned.  The next available number is determined by reading last JobMtl record on the Job/Assembly and then adding ten to it.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.PartNum">
             <summary>
             Part number.  If the material is being purchased (JobMtl.BuyIt = yes) this does need to be a valid part in the Part file.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.Description">
            <summary>
            A description of the material.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.QtyPer">
            <summary>
            Quantity per parent.  Field Service was EstQty in FSCallMt.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.RequiredQty">
            <summary>
            Required Quantity per END ITEM.  This is a calculated field.  Calculated as (Parent Required Qty X QtyPer) + calculated Scrap.  The parent quantity is either the JobHead.ProdQty if  JobMtl.AssemblySeq = 0 or (JobAsmbl.RequireQty - JobAsmbl.PullQty) if JobMtl.AssemblySeq &gt; 0. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.IUM">
             <summary>
             Internal unit of measure.  The unit used to measure the material.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.LeadTime">
             <summary>
             Expected purchasing lead time (in days).  This field is only valid if JobMtl.BuyIt = yes.  This can be used to calculate a suggested "Order By Date" based off the Required Date field.
            When scheduling the job, purchased material can push a schedule out if the material lead time prevents the material from being available when the operation could start.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.RelatedOperation">
             <summary>
             A material record can be related to a specific operation.  This field contains the JobOper.OprSeq of the operation that it is related to.
            It can be left as zero meaning that this material is required at the very beginning of the production job.  The related operation is also used to calculate the JobMtl.ReqDate based on the operations scheduled start date and materials lead time. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.MtlBurRate">
            <summary>
            The material burden rate for this Job Material. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.EstMtlBurUnitCost">
            <summary>
            Estimated Material Burden Unit Cost of the material.  Defaults from the Part table if valid PartNum.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.EstUnitCost">
            <summary>
            Estimated Unit Cost of the material.  Defaults from the Part table if valid PartNum.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.IssuedQty">
            <summary>
            This quantity is a summary of all Issue Transactions.  For FS this was FSCallMt.ActQty
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.TotalCost">
            <summary>
            Total cost to date.  A summary of issue transactions.  This DOES NOT include the salvageable scrap credit amounts.  FS - was UnitCost in FSCallMt
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.MtlBurCost">
            <summary>
            Total Material Burden cost to date.  A summary of issue transactions.  This DOES NOT include the salvageable scrap credit amounts.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.ReqDate">
            <summary>
            Mirror image of related operation (JobOper) or assembly (JobAsmbl) Start Date. (system maintained)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.WarehouseCode">
            <summary>
            The warehouse that the material is allocated against.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.SalvagePartNum">
            <summary>
            Part number for salvageable scrap from this material record.  An optional field.  This does not have to be valid in the Part master. Salvage info is mainly to allow the credit back to a job for this type of scrap via salvage receipt process. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.SalvageDescription">
            <summary>
            Description of Salvageable material.  Use Part.Description for a default.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.SalvageQtyPer">
            <summary>
            A factor that multiplied by the JobMtl.RequiredQty results in the expected total salvage quantity.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.SalvageUM">
            <summary>
            Default unit of measure for the Salvaged Part.  Default from the Part.IUM. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.SalvageMtlBurRate">
            <summary>
            The salvage material burden rate for this Job Material. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.SalvageUnitCredit">
            <summary>
            Estimated Salvage Unit Credit.  Use the appropriate cost from the Part master as a default. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.SalvageEstMtlBurUnitCredit">
            <summary>
            Estimated Salvage Mtl burden Unit Credit.  Use the appropriate cost from the Part master as a default. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.SalvageQtyToDate">
            <summary>
            This quantity is a summary of all transactions for receipt of salvage to inventory.  This is not directly maintainable. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.SalvageCredit">
            <summary>
            Total salvage credit to date.  A summary of salvage receipt transactions. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.SalvageMtlBurCredit">
            <summary>
            Total salvage Mtl Burden credit to date.  A summary of salvage receipt transactions.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.MfgComment">
             <summary>
             Comments for manufacturing about this material record.  These comments are printed on manufacturing reports, such as the router.  For valid Parts use the Part.MfgComment as a default.
            View as editor widget. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.VendorNum">
            <summary>
            Used to identify a default vendor.  Use the Part.VendorNum as a default.  This will be used as a default for purchasing and miscellaneous receipts.  This field is not directly maintainable, instead its assigned by having the user either entering the "VendorID" and then finding the VendorNum in the Vendor file or by selection list processing.  An optional field, but if entered must be valid. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.PurPoint">
            <summary>
            The Vendors Purchase Point ID.  Along with the VendorNum is used to tie back to the VendorPP master file.  Use the default purchase point defined in the Vendor file.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.BuyIt">
            <summary>
            Indicates if this material is to be purchased for the Job.  If this is a non inventory part then this is "Yes" and cannot be changed.  If this is a valid Part then set it to "NO" but the user can override it. Material that is marked to be purchased (BuyIt = Yes) are NOT included in the PartWhse.AllocatedQty.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.Ordered">
            <summary>
            FUTURE IMPLEMENTATION.  This logical relates to material that is flagged to be purchased (BuyIt = Yes).  When purchase orders are created for this job material requirement this flag is set to Yes indicating that a purchase order has been placed.  The idea would be to use this within purchasing to quickly see the "direct job requirements" where no purchase orders have been placed. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.PurComment">
             <summary>
             Comments for purchasing about this material record on this job. These comments will be used as defaults to the PODetail.Comment field when the purchase order references this JobMtl record.
            View as editor widget. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.BackFlush">
             <summary>
             Indicates if this material will be backflushed.
            Note: this field is defaulted from Part.BackFlush
            Backflushing occurs via the write trigger on LaborDtl.  The basic idea is to issue material based on the labor quantities reported. The formula for the issue quantity is: (JobMtl.RequiredQty/JobOper.RunQty) * (LaborDtl.LaborQty + LaborDtl.SrapQty).
            
              
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.EstScrap">
            <summary>
            Estimated Scrap.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.EstScrapType">
            <summary>
            Qualifies the EstScrapQty entry as being a fixed quantity or a percentage of required quantity.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.FixedQty">
            <summary>
            Indicates if the QtyPer field represents a "Fixed Quantity".  If Yes, then the required quantity = QtyPer.  That is, the quantity does not change as the number of pieces being produced changes.  This can be used to enter Tooling or Fixture type of requirements.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.FindNum">
            <summary>
            Characters used on the drawing to show where material is used.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.RevisionNum">
            <summary>
            The revision number for the material.  An optional field. Defaults from the most current  PartRev.RevisionNum.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.SndAlrtCmpl">
            <summary>
            Controls if an alert is to be sent when this JobMtl is completed.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.RcvInspectionReq">
            <summary>
            Indicates if inspection is required when items are received to this JobMtl.  Inspection may also be enforced if the related PartClass, Vendor, PODetail have their "RcvInspectionReq" fields set to Yes.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.Plant">
            <summary>
            Site Identifier.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.Direct">
            <summary>
            Indicates if this material requirement is going to be satisfied by another job (possibly in another Site), as opposed to a warehouse.  If "yes" a WarehouseCode will not be specified. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.MaterialMtlCost">
            <summary>
            Total Mtl cost to date.  A summary of issue transactions - used track all costs for manufacured parts that were received into inventory then issued as material..  MaterialMtlCost +  MaterialLabCost +  MaterialSubCost + MaterialBurCost = TotalCost
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.MaterialLabCost">
            <summary>
            Total Lab cost to date from parts issued from inventory.  A summary of issue transactions - used track all costs for manufacured parts that were received into inventory then issued as material..  IssuedMtlCost + IssuedLabCost + IssuedSubCost + IssuedBurCost = TotalCost
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.MaterialSubCost">
            <summary>
            Total  Sub cost to date from part issued from inventory.  A summary of issue transactions used track all costs for manufacured parts that were received into inventory then issued as material..  IssuedMtlCost + IssuedLabCost + IssuedSubCost + IssuedBurCost = TotalCost
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.MaterialBurCost">
            <summary>
            Total Bur cost to date from part issued from inventory.   A summary of issue transactions - used track all costs for manufacured parts that were received into inventory then issued as material.  IssuedMtlCost + IssuedLabCost + IssuedSubCost + IssuedBurCost = TotalCost
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.SalvageMtlCredit">
            <summary>
            Total salvage Mtl credit to date.  A summary of salvage receipt transactions.  SalvageCredit = SalvageMtlCredit + SalvageLbrCredit + SalvageBurCredit + SalvageSubCredit
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.SalvageLbrCredit">
            <summary>
            Total salvage Lbr credit to date.  A summary of salvage receipt transactions.  SalvageCredit = SalvageMtlCredit + SalvageLbrCredit + SalvageBurCredit + SalvageSubCredit
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.SalvageBurCredit">
            <summary>
            Total salvage Burden credit to date.  A summary of salvage receipt transactions.  SalvageCredit = SalvageMtlCredit + SalvageLbrCredit + SalvageBurCredit + SalvageSubCredit
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.SalvageSubCredit">
            <summary>
            Total salvage Subcontract credit to date.  A summary of salvage receipt transactions.  SalvageCredit = SalvageMtlCredit + SalvageLbrCredit + SalvageBurCredit + SalvageSubCredit
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.APSAddResType">
             <summary>
             Advanced Planning and Scheduling Additional Resource Type.  Indicates whether the Part should be treated as an AdditionalResourceType by eScheduler.
            'I' to ignore in eScheduler
            'M' to treat at Material in eScheduler
            'A' to treat as AddResType in eScheduler
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.CallNum">
            <summary>
            The service call that this Material belongs to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.CallLine">
            <summary>
            The Service Call Line that this material relates to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.ProdCode">
            <summary>
            Product Group Code. Use the Part.ProdCode as a default.  This can be blank or must be valid in the ProdGrup table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.UnitPrice">
            <summary>
            FS - Unit Price for the Material in base currency. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.BillableUnitPrice">
            <summary>
            FS - Billable Unit Price for the Material in base currency. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.DocBillableUnitPrice">
            <summary>
            FS - Billable Price per unit for the material in customers currency. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.ResReasonCode">
            <summary>
            Problem reason code from the reason master table. type Service call. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.PricePerCode">
            <summary>
            Indicates the pricing per quantity for this part. It can be "E" = per each,"C" = per hundred,  "M" = per thousand. Maintainable only via Part Maintenance. The initial default is "E". 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.Billable">
            <summary>
            Is this a billable material item.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.ShippedQty">
            <summary>
            Holds the quantity of the item that has been shipped through misc.  shipments
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.DocUnitPrice">
            <summary>
            FS - Unit Price for the Material in Customer currency. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.QtyStagedToDate">
            <summary>
            The todate quantity that has been moved to the work centers input Warehouse/Bin.  This is NOT A balance.  It is a todate value. It is not reduced as it is consumed. Used in calculation of "Outstanding" material in the Request Material program (ame30-dg.w). Only updated if the Advanced Material Mgmt module is installed and only by transactions which "move" the material in/out of the staging area(Issues,Returns).  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.AddedMtl">
            <summary>
            This material was added after initial setup of the job
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.MiscCharge">
            <summary>
            This indicates that this JobMtl record is for a Misc charge related to this job/assembly.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.MiscCode">
            <summary>
            The Miscellaneous Charge Code. This must be valid in the PurMisc master file.   It must be a AP Misc. charge.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.SCMiscCode">
            <summary>
            The Miscellaneous Charge Code for Service Call billing. This must be valid in the MiscChrg master file.   It must be a AR Misc. charge.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.RFQNeeded">
            <summary>
            A flag to indicate that this job material requires an RFQ.  If it does require an RFQ, the user must enter the number of vendor quotes that are required.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.RFQVendQuotes">
            <summary>
            The number of vendor quotes that are required for this job material.  Can be zero if RFQ(s) are not required.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.RFQNum">
            <summary>
            RFQ number that the item is linked to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.RFQLine">
            <summary>
            The line number of this detail record on the RFQ. This number uniquely identifies the record within the RFQ. The number is not directly maintainable, it's assigned by the system when records are created. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.RFQStat">
             <summary>
             RFQ Status.
            W= Waiting, A = Accepted, R = Requested, C = Received
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.AnalysisCode">
            <summary>
            Analysis Code
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.GroupSeq">
            <summary>
            GroupSeq
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.TrackSerialNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.Append">
            <summary>
            Flag to indicate whether to append this material record
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.MtlPartNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.OrigMtlSeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.CurrencyCode">
            <summary>
            Currency Code of the related record
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.PullAsAsm">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.MtlAltMethod">
            <summary>
            The alternate method for the MtlPart
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.AltMethod">
            <summary>
            The alternate method for the material.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.MtlRevisionNum">
            <summary>
            The revision number for the MtlPartNum.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.LinkGroupSeq">
            <summary>
            Group Sequence used during Job Entry Append Details.  This field is used to associate materials to operations.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbMtlAppRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.JobComplete">
            <summary>
            Indicates if  "Job"  is complete.  This is a mirror image of JobHead.Complete.  Not directly maintainable.  When the Job is completed, then all JobOper records are also marked.  This is used to make database access to open operation records more efficient.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.OpComplete">
             <summary>
             Indicates if this operation is completed. This is normally set to complete via labor entry transactions.   Not maintainable by Job Entry. It can't be reset to "No" if the JobHead.Complete = Yes.
            Labor entry setting logic is: If SetUpComplete = Yes and  EstProdHours = 0 or ProdComplete = Yes and EstSetHours = 0 or both ProdComplete = Yes and SetupComplete = Yes  then OpComplete = Yes.
            This field is also set by PO receipt entry "issue complete" for subcontract operations.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.JobNum">
            <summary>
            Job Number
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.AssemblySeq">
            <summary>
            Assembly Sequence # that this Operation is associated with.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.OprSeq">
            <summary>
            A sequence number which uniquely identifies the operation record within the Job/lot/level. The sequence can be system generated or assigned by user. System generated numbers are determined by reading last JobOper for the job/lot/level and then figures out what the next number that is divisible by 10. If this number is within 3 of the last Number on file it will be bumped up another 10. This keeps a minimum of 2 available sequences between records. For example if last = 18 Next would be 30, If last = 17  next = 20. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.OpCode">
            <summary>
            Operation Master Code - Links the JobOper  record with a OpMaster record.  Default is given from WrkCenter.OpCode.  Must be valid in the OpMaster file.
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.OpStdID">
             <summary>
             The Operation standard ID.  This links the JobOper to the OpStd master file.  This can be blank or if entered must be valid if entered.  When this field is changed the ProdStandard, StdFormat and StdBasis should be refreshed with the new defaults.
            Valid for "inside operations" only.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.EstSetHours">
            <summary>
            Total estimated set up hours.  Calculated as EstSetHoursPerMch * Machines.  It is set to zero if operation qty is zero.  This is maintained via the JobOper write trigger.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.EstProdHours">
             <summary>
             The estimated Production run hours for internal operations (JobOper.Subcontract = No) . This is not directly maintainable. It exists so that it will be easier to display than always having to  recalculate it  when it is needed.  It is calculated using the ProdStandard, StdFormat, StdBasis, OpsPerPart, QtyPer, EstScrap and EstScrapType.
            FORMULAS:
            If StdFormat = "HR" then EstProdHours = ProdStandard. 
            If StdFormat = "PH" then (JobOper.RunQty / Std).
            If StdFormat = "PM" then (JobOper.RunQty / Std ) / 60.
            If StdFormat = "OH" then (JobOper.RunQty/OpsPerPart) / Std.
            If StdFormat = "OM" then ((JobOper.RunQty/OpsPerPart) / Std) / 60.
            If StdFormat = "HP" then (JobOPer.RunQty/Basis) X Std.
            If StdFormat = "MP" then ((JobOper.RunQty/Basis) X Std) / 60.   
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.ProdStandard">
             <summary>
             The production standard for the operation.  It can be expressed as Hours, Minutes per piece, Pieces per Time, Operations per Minute or Operations per hour. This along with the StdFormat, StdBasis, OpsPer and   fields are used to calculate the operations estimated production hours.  A value can be defaulted from the OpStd master.
            NOTE: The ProdStandard can only be zero if the EstSetHours are greater than zero.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.StdFormat">
             <summary>
             Qualifier for the Production Standard field. This is used as a default to the qualifier field in operation details. The valid qualifiers are;
            "HP" - Hours/Piece, "MP" - minutes/piece, "PH" - pieces/hour,
            "PM" - Pieces/Minute, "OH" - Operations/Hour,
            "OM"  - Operations/minute, HR - Fixed Hours.   
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.StdBasis">
             <summary>
             A standard basis is to be used to with standards that are time per piece (HP &amp; MP). The basis is a Divisor. Valid codes are E-Eaches, C=100's, M=1000's, T=10,000.
            This field is used in the formula for calculating the estimated production hours. The operation quantity is divided by the basis value and then multiplied by the standard to result in hours.    
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.OpsPerPart">
            <summary>
            Number of operations per part. This is used in the calculation of the estimated production hours when the StdFormat is "OM" or "OH".  This should not be accessible if StdFormat is not "OM" or "OH".  It MUST BE &gt; 0 if StdFormat is "OM" or "OH".
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.QtyPer">
            <summary>
            Production Quantity per one of the Parent Item. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.QueStartDate">
            <summary>
            Scheduled queue start date. Not directly maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.QueStartHour">
            <summary>
            Scheduled queue start hour offset from the beginning of the work day.  This field is established by scheduling. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.StartDate">
            <summary>
            Scheduled production start date. Not directly maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.StartHour">
            <summary>
            This field is established by scheduling. It represents the "Hour offset from the beginning of the work day" when this operation is scheduled to begin. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.DueDate">
            <summary>
            Scheduled production due date. Not directly maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.DueHour">
            <summary>
            This field is established by scheduling. It represents the "Hour offset from the beginning of the work day" when this operation is scheduled to end.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.MoveDueDate">
            <summary>
            Scheduled move due date. Not directly maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.MoveDueHour">
            <summary>
            Scheduled move due hour offset from the beginning of the work day.  This field is established by scheduling. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.ProdLabRate">
            <summary>
            Labor rate used for estimated production labor costs. Default from the OpMaster.ProdLabRate. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.SetupLabRate">
            <summary>
            Labor rate for estimated setup labor costs. Default from the OpMaster.SetupLabRate.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.ProdBurRate">
            <summary>
            The burden rate to be used for the production time on this operation. (EstProdHrs X ProdBurRate). Default from the WrkCenter.ProdBurRate. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.SetupBurRate">
            <summary>
            The burden rate to be used for the Setup time on this operation. (EstSetHours X ProdBurRate). Default from the WrkCenter.SetupBurRate. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.AddedOper">
            <summary>
            This indicates if this is an "added operation". An added operation is one that was not planned on.     
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.Machines">
            <summary>
            Defaulted from the WrkCenter.SchMachines field. This is the number of machines that this operation will run on at the same time. Logically thought of as a "Squeeze factor" to scheduling. That is the more machines, the shorter the schedule. This affects how much of the total daily workcenter capacity that the operation will consume. For example; Center has 4 machines, 8 Hours per day and operation 2 machines. This operation would consume 16 hours of capacity per day. So if it had 32 hours of estimated production it would schedule as taking 2 days. NOTE THIS ONLY APPLIES TO PRODUCTION HOURS, TOTAL SETUP HOURS ARE ADDED TO THE SQUEEZED PRODUCTION HOURS TO GET THE NUMBER OF HOURS TO BE SCHEDULED. It is however used to calculate the total setup hours on the operation. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.SetUpCrewSize">
            <summary>
            Defaulted from the WrkCenter.SetUpCrewSize field. Its the number of people it physically takes to setup this operation. It is used as a  multiplier in the estimated labor hours calculation.  JobOper.EstSetHours * JobOper.SetUpCrewSize = Estimated Labor hours for the operation. This also affects the estimated labor cost. Est Cost = Est Labor Hours * SetUpLaborRate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.ProdCrewSize">
            <summary>
            Defaults from the WrkCenter.ProdCrewSize. The # of people it physically takes to perform the production on this operation per machine that it is run on.  CrewSize * JobOper.EstProdHours = Est. Prod. Labor Hours. Note this can be a fraction for operations that do not require full time attention of an employee. See also SetUpCrewSize
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.ProdComplete">
            <summary>
            A flag indicating if the production is complete for this operation. It is updated via Labor Entry. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.SetupComplete">
            <summary>
            Flag that indicates if Setup is complete on this operation. This flag is only used when the operation has EstSetupHours &gt; 0.00.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.ActProdHours">
             <summary>
             Total Actual Production Hours. A summary of non-setup LaborDtl.BurdenHrs. This includes REWORK hours.  This is maintained via write/delete triggers on the LaborDtl file. Along with JobOper.ActReworkHours it is used to reduce the shop load if the system is configured to remove load by actual hours (JCSyst.RemoveLoad = "H").
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.ActProdRwkHours">
             <summary>
             Total Actual Production Rework  Hours. A summary of rework labor transactions (LaborDtl.BurdenHrs) where LaborDtl.LaborType = "P" and Rework = Yes. This number is also included as part of the JobOPer.ActProdHours.  Maintained via write/delete triggers on the LaborDtl file. Along with JobOper.ActProdHours it is used to reduce the shop load if the system is configured to remove load by actual hours (JCSyst.RemoveLoad = "H"). (See the lib/inopload.i code for load remaining logic)
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.ActSetupHours">
            <summary>
            Actual setup hours.  A summary of setup (LaborDtl.LaborType = S) labor transactions hours (LaborDtl.Burden). Actual Setup hours reduce the shop load if the system is configured to remove load based on hours (JCSyst.RemoveLoad = "H").
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.ActSetupRwkHours">
             <summary>
             Total Actual Setup Rework  Hours. A summary of rework labor transactions (LaborDtl.BurdenHrs) where LaborDtl.LaborType = "S" and Rework = Yes. This number is also included as part of the JobOPer.ActSetupHours.  Maintained via write/delete triggers on the LaborDtl file. Along with JobOper.ActSetHours it is used to reduce the shop load if the system is configured to remove load by actual hours (JCSyst.RemoveLoad = "H"). (See the lib/inopload.i code for load remaining logic)
            
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.QtyCompleted">
             <summary>
             For Non Subcontract operations: A summary of labor transaction detail. (LaborDtl.LaborQty). Labor entry/collection maintains this field.  Only the LaborQty for transactions that are Production labor ( LaborType = P ) and Not rework (LaborDtl.Rework = No) are included in this summary.
            This quantity is used to reduce shop load when the system is configured to reduce load based on quantity completed. (JCSyst.RemoveLoad = Q)
            For Subcontract Operations this field is updated by the Purchased Receipt process. The detail records are in the PartTran file.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.SetupPctComplete">
            <summary>
            Setup function percent complete.  Maintained via labor entry.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.EstScrap">
            <summary>
            EstScrap =  a number representing either a scrap qty or a scrap percent depending on the value of EstScrapType field.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.EstScrapType">
            <summary>
            Qualifies the ScrapQty entry as being a fixed quantity or a percentage of run quantity.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.SubContract">
            <summary>
            This flags the operation as being a "SubContract" or an "Internal" operation.  This also controls what fields are allowed to be updated for this record. For example,  an internal operation will not have a PartNum.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.IUM">
            <summary>
            Inventory UOM
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.EstUnitCost">
            <summary>
            Estimated Unit Cost for the SubContract operation.  Defaults from the Part table if valid PartNum.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.DaysOut">
            <summary>
            Hours required is calculated as days * 8.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.PartNum">
            <summary>
            The PartNum to be shipped to the subcontract. Default the JobHead.PartNum or JobAsmbl.PartNum depending on the JobMtl.AssemblySeq.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.Description">
            <summary>
            Description used only for subcontract operations
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.VendorNum">
            <summary>
            The SubContractors VendorNum that ties back to the Vendor master file.  This is only valid for "SubContract"  operations. This field is not directly maintainable, instead its assigned by having the user either enter the "VendorID" and then finding the VendorNum in the Vendor file or by  selection list processing.  This is a mandatory entry for subcontract operations.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.PurPoint">
            <summary>
            The Vendors purchase point ID. This field is only for the "Subcontract" operations. Along with the VendorNum is used to tie back to the VendorPP master file.  Use the default Purchase point defined in the Vendor file.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.CommentText">
            <summary>
            Editor widget for Job operation comments. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.SchedRelation">
             <summary>
             Indicates the scheduling relationship between this and the preceding  operation. Possible values are "SS" - Start to Start, "FS" Finish to Start or "FF" Finish to Finish.
            A "SS" can start when the preceding operation starts.
            A "FS" starts when the preceding operation is finished.
            A "FF" can finish when the preceding operation finishes.
            These relationships do not span between levels of assemblies. The first operation on an assembly is always treated as being "FS" relationship.
            A "FF" finishes when the preceding operation is finished. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.RunQty">
             <summary>
             The total operation quantity. This is a calculated field.  Calculated as (Assembly Required Qty X QtyPer) + Scrap. The assembly qty is either the JobHead.ProdQty if  JobOPer.AssemblySeq = 0 or (JobAsmbl.RequireQty - JobAsmbl.PullQty) if JobOPer.AssemblySeq &gt; 0.
            This value is refreshed when maintenance is performed on the operation record or an assemblies production qty is changed 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.WIName">
             <summary>
             This field is blank or contains the UserID. When not blank it indicates that the operations schedule has been changed and is considered as being in a "What If" mode.
            This field is also used as part of an index which allows the system to quickly find the operations that need to be reset to "Actual Schedule".
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.WIMachines">
            <summary>
            This is the What-If number of machines that this operation will run on at the same time.  Setup by and for scheduling from the Machines field.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.WIQueStartDate">
            <summary>
            What-if Scheduled queue start date. Not directly maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.WIQueStartHour">
            <summary>
            What-if Scheduled queue start hour offset from the beginning of the work day.  This field is established by scheduling. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.WIStartDate">
            <summary>
            What if Scheduled production start date. Not directly maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.WIStartHour">
            <summary>
            This field is established by scheduling. It represents the What If "Hour offset from the beginning of the work day" when this operation is scheduled to begin. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.WIDueDate">
            <summary>
            What If Scheduled production due date. Not directly maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.WIDueHour">
            <summary>
            This field is established by scheduling. It represents the "Hour offset from the beginning of the work day" when this operation is scheduled to end.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.WIMoveDueDate">
            <summary>
            What-If Scheduled move due date. Not directly maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.WIMoveDueHour">
            <summary>
            What-if Scheduled move due hour offset from the beginning of the work day.  This field is established by scheduling. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.WIHoursPerMachine">
            <summary>
            The Number of Hours per machine per day that this operations "What If" schedule is based on.  This is for "Inbetween" days, not first or last days.  It is a copy of WrkCenter.HoursPerMachine field at the time of scheduling.  Used in logic of maintaining ShopLoad records. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.WILoadDate">
            <summary>
            Date at which the operations current outstanding "What-If" load starts at.  Updated by the JobOper write trigger. (See LoadDate)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.WILoadHour">
            <summary>
            "Hour offset from the beginning of the work day" for the operations outstanding "What-If"  load. Related to WILoadDate.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.ActBurCost">
            <summary>
            Total Burden cost to date. This is update via the LaborDtl\Write.p trigger procedure. It includes ALL burden costs (Setup, Production and Rework)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.ActLabCost">
             <summary>
             FOR NON-SUBCONTRACT OPERATIONS: Total of "ALL" labor costs to date. This includes Setup, Production and Rework. Updated via the LaborDtl.Write.p trigger.
            FOR SUBCONTRACT OPERATIONS: The Total Cost, updated via the receipt process.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.ReworkBurCost">
            <summary>
            Total Rework Burden cost todate. This value is also included in the ActBurCost total. It includes both setup &amp; production rework. Updated via LaborDtl\Write.P trigger. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.ReworkLabCost">
            <summary>
            Total Rework Labor cost to date. This value is also included in the ActLabCost field. This includes both Setup &amp; Production. Updated via the LaborDtl\Write.p trigger.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.MiscAmt">
             <summary>
             A total additional charge that is incurred when purchasing this service. Ex(Lot,Setup,Handling,etc...).
            Defaulted from VendPart.MiscAmt. This is NOT part of the a Unit Cost. It is NOT consider in the logic of using Minimum Cost. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.HoursPerMachine">
            <summary>
            The Number of Hours per machine per day that this operations "actual" schedule is based on.  This is for "Inbetween" days, not first or last days.  It is a copy of WrkCenter.HoursPerMachine field at the time of scheduling.  Used in logic of maintaining the ShopLoad records. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.LoadDate">
             <summary>
             Date at which the operations current outstanding load starts at.
            Ex: Op schedule is 2/1/97 - 2/10/97, initially LoadDate = 2/1/97. As load is relieved through labor processing the LoadDate moves forward accordingly. When 1/2 completed the LoadDate would be 2/5/97. This field is primarily used by the Scheduling Board to calculate the graphical image of outstanding load.  Updated by the JobOper write trigger. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.LoadHour">
            <summary>
            "Hour offset from the beginning of the work day" for the operations outstanding load. Related to LoadDate.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.ReloadNum">
            <summary>
            Internally used field to prevent redundant read of JobOper during execution of "Reloader" program. (See WrkCenter.ReloadNum)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.SndAlrtCmpl">
            <summary>
            Controls if an alert is to be sent when this JobOper is completed.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.RcvInspectionReq">
            <summary>
            Indicates if  Inspection is required when items are received to this JobOper (subcontract only). Inspection may also be enforced if the related PartClass, Vendor, PODetail have their "RcvInspectionReq" fields set to Yes.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.JobEngineered">
             <summary>
             Identical to JobHead.JobEngineered.  ShopLoad capacity is only allocated to Jobs where JobEngineered = YES.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.EstSetHoursPerMch">
             <summary>
             The estimated set up hours per machine.
            Default from OpStd.SetupHours.  Used to calculate JobOper.EstSetupHours.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.RevisionNum">
             <summary>
             Part Revision number.
            Pertains to subcontracting operations only.   An optional field.   Related JobAsmbl.RevisionNum is used as the default. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.AutoReceiptDate">
            <summary>
            Currently not used. Prep for future development.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.LastLaborDate">
            <summary>
            The labor date of the last labor transaction that was posted to this operation.  Used by the JobOper write trigger Auto Receieve logic.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.CallNum">
            <summary>
            The service call that this operation belongs to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.CallLine">
            <summary>
            The Service Call Line that this operation relates to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.LaborRate">
            <summary>
            Labor rate used for  time on an operation.  Time per hour per technician. in base currency.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.BillableLaborRate">
            <summary>
            Billable Labor rate used for  time on a service.  Time per hour per technician. in base currency. This field considers the percentage coverage of a warranty or contract.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.DocLaborRate">
            <summary>
            Labor rate used for  time on a service.  Time per hour per technician. In Customer currency. Does not consider warranty or contract
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.DocBillableLaborRate">
            <summary>
            Billable Labor rate used for  time on a service.  Time per hour per technician. In Customer currency. considers warranty or contract
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.Billable">
            <summary>
            FS - Is this a billable operation.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.UnitPrice">
            <summary>
            FS - Unit Price for the subcontract in base currency. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.BillableUnitPrice">
            <summary>
            FS - Billable Unit Price for the subcontract in base currency. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.DocBillableUnitPrice">
            <summary>
            FS - Billable Price per unit for the subcontract in customers currency. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.DocUnitPrice">
            <summary>
            FS - Unit Price for the for the Subcontract in Customer currency. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.LaborEntryMethod">
            <summary>
            Indicates the Method for Labor Entry.  Can be "T" - Time and Quantity, "Q" - Quantity Only (Time is estimated), "B" - Backflush or "X" - Time - Backflush Qty.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.PricePerCode">
            <summary>
            Indicates the pricing per quantity for this part. It can be "E" = per each,"C" = per hundred,  "M" = per thousand. Maintainable only via Part Maintenance. The initial default is "E". 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.FAQty">
            <summary>
            The quantity requested for first article inspection.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.QtyStagedToDate">
            <summary>
            The "to date" quantity that has been moved to the input Warehouse/Bin of the subsequent operations ResourceGroup/Resource input Warehouse/Bin.  This is NOT A balance.  It is a "to date" value.  It is not reduced as it is consumed.  Used in calculation of "Outstanding" WIP in the Request Material/WIP program (ame30-dg.w).  Only updated if the Advanced Material Mgmt module is installed and only by transactions which "move" the WIP material in/out of the staging area (Issues, Returns).  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.RFQNeeded">
            <summary>
            A flag to indicate that this job operation requires an RFQ.  If it does require an RFQ, the user must enter the number of vendor quotes that are required.  This only applies to subcontract operations.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.RFQVendQuotes">
            <summary>
            The number of vendor quotes that are required for this job subcontract operation.  Can be zero if RFQ(s) are not required.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.RFQNum">
            <summary>
            RFQ number that the item is linked to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.RFQLine">
            <summary>
            The line number of this detail record on the RFQ. This number uniquely identifies the record within the RFQ. The number is not directly maintainable, it's assigned by the system when records are created. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.RFQStat">
             <summary>
             RFQ Status.
            W= Waiting, A = Accepted, R = Requested, C = Received
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.SetupGroup">
            <summary>
            Used to group operation to save on setups.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.RestoreFlag">
            <summary>
            Used to determine if this record was modified during the last What-If Schedule Restore.  The contents are Date-Time.  Example: "04/11/02-34221".
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.AnalysisCode">
            <summary>
            Analysis Code
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.PrimarySetupOpDtl">
             <summary>
             Identifies the primary JobOpDtl to be used for setup.  The setup time for the operation is determined on the JobOpDtl.
            If &lt;&gt; 0, must identify a valid JobOpDtl.  The JobOpDtl needs to have a RequiredFor = S or B.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.PrimaryProdOpDtl">
             <summary>
             Identifies the primary JobOpDtl to be used for production.  The production run time for the operation is determined on the JobOpDtl.
            If &lt;&gt; 0, must identify a valid JobOpDtl.  The JobOpDtl needs to have a RequiredFor = P or B.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.QtyPerCycle">
            <summary>
            Number of pieces created per cycle if Cycle/Minute or Cycle/Hour is selected
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.WIWCCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.APSPrepOp">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.APSNextOp">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.APSAltOp">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.APSSpecificResource">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.APSCycleTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.APSConstantTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.APSSetupGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.APSMakeFactor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.APSContainerSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.APSSchedulerName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.APSMaxLength">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.APSTransferTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.APSEffectiveness">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.APSOperationClass">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.APSAuxResource">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.APSAddResource">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.Append">
            <summary>
            Indicates whether to append this operation
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.AppendedOprSeq">
            <summary>
            The new operation sequence (for related operations)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.FinalOperation">
            <summary>
            Indicates if final operation
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.AutoReceive">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.ResourceGrpID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.ParentPartNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.CurrencyCode">
            <summary>
            Currency Code of the related record
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.AltMethod">
            <summary>
            Job Oper Alternate Method.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.TargetAsmSeq">
            <summary>
            Target Assembly Sequence used during Job Entry Append Details.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.TargetOprSeq">
            <summary>
            Target Assembly Sequence used during Job Entry Append Details.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.GroupSeq">
            <summary>
            Group Sequence used during Job Entry Append Details.  This field is used to associate materials to operations.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JbOprAppRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.AssemblySeq">
            <summary>
            Assembly Sequence number that this material is associated with.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.MtlSeq">
            <summary>
            A sequence number that uniquely defines the material record within a specific Job/Assembly.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.PartNum">
            <summary>
            The part number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.ReqDate">
            <summary>
            Requested date for material.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.RequiredQty">
            <summary>
            Required quantity per end item.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.OutstandingQty">
            <summary>
            RequiredQty - IssuedQty.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.OnHandQty">
            <summary>
            Part total onhand qty.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.WIPQty">
            <summary>
            Part total WIP quantity.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.AvailableQty">
            <summary>
            Part total available quantity.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.Source">
            <summary>
            Source for the associated JobMtl, either Vendor or Stock.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.PONum">
            <summary>
            Purchase Order Number for the FIRST associated PO, if one is available.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.DueDate">
            <summary>
            Due Date from the FIRST associated PO Rel.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.WIPUOM">
            <summary>
            UOM for WIPQty
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.AvailableUOM">
            <summary>
            UOM for AvailableQty
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.OnHandUOM">
            <summary>
            UOM for OnHandQty
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.OutstandingUOM">
            <summary>
            UOM for OutstandingQty
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.RequiredUOM">
            <summary>
            UOM for RequiredQty
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.AllocatedUOM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatFiltersRow.CutoffDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatFiltersRow.ExceptionsOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatFiltersRow.JobNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatFiltersRow.SysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatFiltersRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JMtlStatFiltersRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.AssemblySeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.EstMtlBurUnitCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.EstUnitCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.LLABurdenCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.LLALaborCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.LLAMaterialCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.LLAMtlBurCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.LLAProdHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.LLASetupHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.LLASubcontractCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.LLEBurdenCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.LLELaborCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.LLEMaterialCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.LLEMtlBurCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.LLEProdHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.LLESetupHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.LLESubcontractCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.MtlBurCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.PartNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.TLABurdenCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.TLALaborCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.TLAMaterialCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.TLAMtlBurCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.TLAProdHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.TLASetupHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.TLASubcontractCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.TLEBurdenCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.TLELaborCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.TLEMaterialCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.TLEMtlBurCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.TLEProdHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.TLESetupHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.TLESubcontractCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.SysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.AssemblyCostRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.MaterialCostRow.AssemblySeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.MaterialCostRow.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.MaterialCostRow.EstBurUnitCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.MaterialCostRow.EstLbrUnitCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.MaterialCostRow.EstMtlBurUnitCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.MaterialCostRow.EstMtlUnitCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.MaterialCostRow.EstSubUnitCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.MaterialCostRow.EstUnitCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.MaterialCostRow.MaterialBurCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.MaterialCostRow.MaterialLabCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.MaterialCostRow.MaterialMtlCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.MaterialCostRow.MaterialSubCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.MaterialCostRow.MtlBurCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.MaterialCostRow.MtlSeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.MaterialCostRow.PartNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.MaterialCostRow.SysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.MaterialCostRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.MaterialCostRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.JobClosed">
            <summary>
            Indicates if Job is closed.  A closed Job cannot be accessed for maintenance. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ClosedDate">
            <summary>
            Date the Job was closed.  Defaults as the system but can be overridden.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.JobComplete">
            <summary>
            Indicates if production is complete for the job.  A complete job cannot be scheduled.  It can still have cost posted against it.  Maintained via Job Completion processing.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.JobCompletionDate">
            <summary>
            The date that production was completed for this Job.  Maintained via Job Completion Processing.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.JobEngineered">
            <summary>
            Indicates if Engineering is complete for this job.  That is, all departments that need to "check off" on this job before it is actually considered ready to go have done so.  A job must be Engineered before it  can be scheduled.  Non Engineered Jobs are excluded from most reports.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.CheckOff1">
             <summary>
             Optional Job check off number 1.  The label for this field is found in JCSyst.  If the label field is blank then field should be invisible.
            These "check offs" will be used for selecting jobs.  An example would be a "Engineering" or "Purchasing" check off. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.CheckOff2">
             <summary>
             Optional Job check off number 2.  The label for this field is found in JCSyst. If the label field is blank then field should be invisible.
            These "check offs" will be used for selecting jobs.  An example would be a "Engineering" or "Purchasing" check off. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.CheckOff3">
             <summary>
             Optional Job check off number 3.  The label for this field is found in JCSyst.  If the label field is blank then field should be invisible.
            These "check offs" will be used for selecting jobs.  An example would be a "Engineering" or "Purchasing" check off. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.CheckOff4">
            <summary>
            Optional Job check off number 4.  The label for this field is found in JCSyst.  If the label field is blank then field should be invisible.
            These "check offs" will be used for selecting jobs.  An example would be a "Engineering" or "Purchasing" check off. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.CheckOff5">
            <summary>
            Optional Job check off number 5.  The label for this field is found in JCSyst.  If the label field is blank then field should be invisible.
            These "check offs" will be used for selecting jobs.  An example would be a "Engineering" or "Purchasing" check off. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.JobReleased">
            <summary>
            Indicates if job has been "Released" to production.  Only jobs that are released can have labor posted against them.  Once labor is posted to a Job this flag cannot be changed.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.JobHeld">
            <summary>
            Indicates if the Job has been placed on "HOLD".  Currently this field is only used for display purposes.  It may be used later to prevent or provide warnings and messages in appropriate areas such as Shipping, Purchasing, Labor processing, etc.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.SchedStatus">
            <summary>
            Scheduling Status Control (R-Required, P-Pending, A-Active, C-Complete).  NOT CURRENTLY IMPLEMENTED.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.JobNum">
            <summary>
            Job number.  Unique key to identify the production job.  When adding "new" records and this is left blank the system will assign a job number.  Assigning numbers will be done by using a "database" sequence number.  Then using that number loop and increment until an available number is found.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PartNum">
             <summary>
             Part number of the manufactured item.  Does not have to be valid in the Part master.  Cannot be blank.
            With verion 8.0 and Advanced Production License a job can have multiple end parts. These are defined in the JobPart table.
            This field has not changed. But will now be used to indicate the primary end part that is being produced. That is, the JobPart record where JobPart.PartNum = JobHead.PartNum will be considered as the primary end part. A primary part is only significant on Concurrent mode of production, because it?s quantity drives the material/operation requirements.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.RevisionNum">
            <summary>
            Part Revision number.  Defaults from the most current PartRev.RevisionNum.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.DrawNum">
            <summary>
            Engineering Drawing Number.  An optional field.  Defaulted from BomHead.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PartDescription">
            <summary>
            The description of the part that is to be manufactured.  Use the Part.Description as the default. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ProdQty">
             <summary>
             This field is not directly maintainable. The value stored here will be different than it was in the pre 8.0- versions. If ProcessMode is  Sequential then this is a total of ALL end parts that are being produced on the job. If Concurrent then it is the production quantity of the primary part /PartsPerOp .  For example 1000 bottle caps are require, 100 caps are produced per machine cycle would result in ProdQty of 10.
             See JobPart table for information on end parts of a job. 
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IUM">
            <summary>
            The unit of measure for the job.  Defaulted from Part.IUM.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.StartDate">
            <summary>
            The Scheduled job start date (including queue time).  This is not directly user maintainable.  It is calculated/updated via the scheduling functions 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.StartHour">
            <summary>
            This field is established by scheduling.  It represents the "Hour offset from the beginning of the work day" when this job is scheduled to begin (including queue time).
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.DueDate">
            <summary>
            Scheduled finish date for the entire Job (including move time).  This is not user maintainable.  It is updated via the scheduling process.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.DueHour">
            <summary>
            This field is established by scheduling.  It represents the "Hour offset from the beginning of the work day" when this job is scheduled to end (including move time). 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ReqDueDate">
            <summary>
            Indicates the date at which this job needs to be completed.  This is maintainable by the user.  It can be defaulted as the earliest due date of the linked orders.  This due date is used as the default date for "backward" scheduling of the job.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.JobCode">
            <summary>
            An optional user defined code.  This will be used for report selections and views of job headers. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.QuoteNum">
            <summary>
            Contains the Quote number reference.  This was assigned when the job details were pulled in from the quote.  It will be used to show quote figures compared to estimated and actual.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.QuoteLine">
            <summary>
            Contains the quote line number reference. (see QuoteNum ) 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ProdCode">
            <summary>
            Product Group Code.  Use the Part.ProdCode as a default.  This can be blank or must be valid in the ProdGrup table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.UserChar1">
            <summary>
            UserChar1
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.UserChar2">
            <summary>
            UserChar2
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.UserChar3">
            <summary>
            UserChar3
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.UserChar4">
            <summary>
            UserChar4
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.UserDate1">
            <summary>
            UserDate1
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.UserDate2">
            <summary>
            UserDate2
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.UserDate3">
            <summary>
            UserDate3
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.UserDate4">
            <summary>
            UserDate4
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.UserDecimal1">
            <summary>
            UserDecimal1
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.UserDecimal2">
            <summary>
            UserDecimal2
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.UserInteger1">
            <summary>
            UserInteger1
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.UserInteger2">
            <summary>
            UserInteger2
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.CommentText">
            <summary>
            Editor widget for Job header comments. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ExpenseCode">
            <summary>
            The default override expense code that will be used for all labor reported against this job.  When this is entered then it will override all over default logic for developing the default G/L expense account in labor entry.  This can be blank or must be valid in the LabExpCd master file.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.InCopyList">
            <summary>
            Indicates if the final assembly is to be included in the browse of assemblies in the  "get details"  function.  The user can use to option to keep the "Copy from" list from becoming cluttered with too many assemblies.  This does not prevent the user from copying this assembly it just keeps it out of the browse.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.WIName">
             <summary>
             This field is blank or contains the UserID.  When not blank it indicates that some or all the operations of this job are in a "What if" scheduling mode.  In this condition the scheduling board prevents other users from modifying any operations on this job until the changes get committed.
            This field is also used as part of an index which allows the system to quickly find the operations that need to be reset to "Actual Schedule".
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.WIStartDate">
            <summary>
            The Scheduled "What If" job start date (including queue time).  This is not directly user maintainable.  It is calculated/updated via the scheduling functions 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.WIStartHour">
            <summary>
            This field is established by scheduling.  It represents the What-If "Hour offset from the beginning of the work day" when this job is scheduled to begin (including queue time).
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.WIDueDate">
            <summary>
            Scheduled "What If" finish date for the entire Job (including move time).  This is not user maintainable.  It is updated via the scheduling process.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.WIDueHour">
            <summary>
            This field is established by scheduling.  It represents the What-If "Hour offset from the beginning of the work day" when this job is scheduled to end (including move time). 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.Candidate">
             <summary>
             Indicates if the system considers this  Job as a candidate for the completion process.  Jobs that are marked as JobClosed = No, JobComplete = No and Candidate = Yes can be viewed in the Job Completion/Closing program by selecting the Candidates option.
            This field is not directly maintainable.  It is set to based on the value of JobOper.OpComplete of the last operation of the final assembly.  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.SchedCode">
            <summary>
            Scheduling Code.  SchedCode references a record in the SchedPri table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.SchedLocked">
            <summary>
            If yes the Jobs' schedule is locked, and not affected by the SchedCode.  Locked jobs are allocated (and over-allocated) machine time before any non-locked jobs are scheduled.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ProjectID">
            <summary>
            Associates the JobHead with a project in the Project table.  This can be blank.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.WIPCleared">
            <summary>
            For closed jobs (JobHead.JobClosed = yes) this indicates if all of the costs on this job have been removed from WIP.  Costs are moved out of WIP during the "Generate WIP transactions" process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.JobFirm">
            <summary>
            A flag which controls whether or not the MRP process can make changes to this job.  MRP can only make changes when JobFirm = No.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PersonList">
            <summary>
            A LIST-DELIM delimited list of people.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PersonID">
             <summary>
             Identifies the Person to be used as the Production Planner.  This person is responsible for handling the manufacturing suggestions to this job.
            Manufacturing suggestions can be filtered by Planner.
            Relates to the Person table.  Defaults from the ProdGrup.PersonID.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ProdTeamID">
            <summary>
            Production Team for the Job.  Associates the JobHead with a ProdTeam.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.QtyCompleted">
             <summary>
             Production quantity completed.
            Updated via JobOper write trigger.  If JobOper is the "Final Operation" (see JobAsmbl.FinalOpr) then this is set equal to JobOper.QtyCompleted.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.Plant">
            <summary>
            Site Identifier. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.DatePurged">
            <summary>
            The date the detail for the Job was purged.  The detail is the LaborDtl, PartTrans, and JobOpMac records associated with the job.  Once details have been purged the job cannot be reopened.  A job must be closed for it to be purged.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.TravelerReadyToPrint">
            <summary>
            Indicates if the Traveler can be printed. Print functions are not available if this is = No.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.TravelerLastPrinted">
            <summary>
            The last date the job traveler was mass printed.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.StatusReadyToPrint">
            <summary>
            Indicates if the Status can be printed. Print functions are not available if this is = No.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.StatusLastPrinted">
            <summary>
            The last date the job status was mass printed.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.CallNum">
            <summary>
            The Service Call number that this Job is linked to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.CallLine">
            <summary>
            The Service Call Line that this Job is linked to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.JobType">
            <summary>
            Describe the type of job this is: MFG = Manufacturing, MNT = Maintenance, PRJ = Project, SRV = Service
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.RestoreFlag">
            <summary>
            Used to determine if this record was modified during the last What-If Schedule Restore.  The contents are Date-Time.  Example: "04/11/02-34221".
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PhaseID">
            <summary>
            Project Phase ID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.AnalysisCode">
            <summary>
            Analysis Code
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.LockQty">
            <summary>
            Indicates that the quantity on this job is locked
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.HDCaseNum">
            <summary>
            The help desk case that created this job.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ProcessMode">
             <summary>
             Values: S(Sequential) or C(Concurrent).
            Defaults as S. Must have Advanced Production License to change. Controls how the operations and material requirements are developed. Concurrent jobs are used where the production time is based on the number of machine operations performed and not on the number of parts created. For example, a stamping operation where each cycle of the machine stamps out x number of parts. A further extension of this is that the operation can yield multiple different parts from each cycle of the machine.  Identification of these parts and there associated PPO (parts per operation) is define in the JobPart table. 
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PlannedActionDate">
            <summary>
            The planned date when the job needs to be actioned by the production department to make sure that the job is ready on the planned completion date.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PlannedKitDate">
            <summary>
            The date that the job needs to be ready for the warehouse to kit to make sure that it is ready for the job start date.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.MSPTaskID">
            <summary>
            The task ID that is returned from Microsoft Projects.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.MSPPredecessor">
            <summary>
            This is the Microsoft Project predecessor. This needs to be a text field as MSP may pass back an alpha numeric string.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.UserMapData">
            <summary>
            Character field that will contain the coma separated data that has been returned from Microsoft Projects. This data will be retained exactly as it was returned from MSP. This field will NOT be editable within Vantage.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ProductionYield">
            <summary>
            Flag to indicate whether operations for this job will use the production yield features set up in OpMaster for the operation code. Defaulted from Site.ProductionYield
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.OrigProdQty">
            <summary>
            This field will be set to the value of the JobHead.ProdQty at the time the JobHead.Engineered flag is set to true.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PreserveOrigQtys">
            <summary>
            This field is used to indicate whether the original quantities should be reset in the job header and its assemblies at JobHead update if JobHead.JobEngineered has been changed from false to true. Generally the orig qtys will be reset, unless this flag is set to true because the user was asked if they wanted to reset the orig qtys and they answered yes.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.NoAutoCompletion">
            <summary>
            If set to yes then exclude this job from the Job Auto-Completion process. Not directly maintainable.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.NoAutoClosing">
            <summary>
            No Auto Closing. If set to yes then exclude this job from the Job Auto-Closing process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.CreatedBy">
            <summary>
            The user that created this Job.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.CreateDate">
            <summary>
            The date that this Job was created.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.WhseAllocFlag">
            <summary>
            Indicates if the PartWhse allocation needs to be/has been updated by the new time delated process. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.OwnershipStatus">
            <summary>
            This field can be used with external system integrations to identify which system currently has ownership of the record.  This field can hold either the name of the external system (example: PDM), ERP (Vantage) or null.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PDMObjID">
            <summary>
            Holds the internal object id of PDM parts.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ExportRequested">
            <summary>
            This field is used to store a code that represents the external system that the Job is being exported to (ex. PDM).  This field is short lived, it is used to instruct the write trigger logic to create IM records for certain types of external systems.  After creating the IM records, the trigger logic should immediately clear the field.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.SplitMfgCostElements">
            <summary>
            Flag to indicate how to split the manufacturing cost elements when a manufactured material is issued to the job.  If flag is set to true, the cost of the issued material will be split into individual manufacturing cost elements. If set to false, the cost of the issued material is added to the manufacturing material cost element only.  This is defaulted from the JCSyst.SplitMfgCostElements and is not user maintainable.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.XRefPartNum">
            <summary>
            Cross Reference Part Num. Used for alternate serial mask support.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.XRefPartType">
             <summary>
             Cross Reference Part Type. Used for alternate serial mask support.
            
            I=Internal Cross Reference / C = Customer Part
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.XRefCustNum">
            <summary>
            Customer Number XRefPartNum is related to if it is a customer part. Used for alternate serial number mask support.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.BasePartNum">
            <summary>
            Base Part Number. Used in the configurator to identify the configurator part Number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.BaseRevisionNum">
            <summary>
            Base Revision Number. Used in the configurator to identify the configurator part revision Number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.RoughCutScheduled">
            <summary>
            Indicates if the job was rough cut scheduled.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EquipID">
             <summary>
             The ID of the Equipment that this "Maintenance Job" is for.
            Foreign key component to Equip table.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PlanNum">
             <summary>
             Preventive Maintenance Plan Number that this "Maintenance Job" is for. Foreign key component to EquipPlan table.
            Note: A Maintenance Job does not have to be for a Preventive Maintenance plan, in which case this is zero.
            If time based plan, then the closing process will update the EquipPlan.NextDate. Therefore, the Job must know the EquipID and PlanNum in order to do this.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.MaintPriority">
            <summary>
            Maintenance Job Priority. Valid values: H - High, M - Medium, L - Low.  M is default or if created from a Maint Request then MaintReq.Priority is used as default.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.SplitJob">
            <summary>
            Internal field indicating this job was created by a job split.  Assigned true when a job has been split due to start minimum lot size quantity processing.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.NumberSource">
            <summary>
            Indicates the type of prefix which is used for create jobs in MRP
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.CloseMeterReading">
            <summary>
            The Meter Reading value entered at time of Job Closing.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID1">
            <summary>
            Maintenance Issue Topic 1.  Pertinent to maint jobs only. (JobType = "MNT") Foreign Key to HDTopic table.  Must be a top level topic (HDTopic.TopLevel = Yes) and HDTopic.MaintIssue = Yes 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID2">
            <summary>
            Maintenance Issue Topic 2. A sub-topic of IssueTopicID1.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID3">
            <summary>
            Maintenance Issue Topic 3. A sub-topic of IssueTopicID2.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID4">
            <summary>
            Maintenance Issue Topic 4. A sub-topic of IssueTopicID3.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID5">
            <summary>
            Maintenance Issue Topic 5. A sub-topic of IssueTopicID4.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID6">
            <summary>
            Maintenance Issue Topic 6. A sub-topic of IssueTopicID5.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID7">
            <summary>
            Maintenance Issue Topic 7. A sub-topic of IssueTopicID6.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID8">
            <summary>
            Maintenance Issue Topic 8. A sub-topic of IssueTopicID7.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID9">
            <summary>
            Maintenance Issue Topic 9. A sub-topic of IssueTopicID8.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID10">
            <summary>
            Maintenance Issue Topic 10. A sub-topic of IssueTopicID9.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopics">
            <summary>
            This is the combination of TopicID1 - TopicID10.  This is system maintained and provides a single word-indexed field for searching.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID1">
            <summary>
            Maintenance Resolution Topic 1.  Pertinent to maint jobs only. (JobType = "MNT") Foreign Key to HDTopic table.  Must be a top level topic (HDTopic.TopLevel = Yes) and HDTopic.MaintRes = Yes 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID2">
            <summary>
            Maintenance Resolution Topic 2. A sub-topic of ResTopicID1.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID3">
            <summary>
            Maintenace  Resolution Topic 3. A sub-topic of ResTopicID2.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID4">
            <summary>
            Maintenance Resolution Topic 4. A sub-topic of ResTopicID3.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID5">
            <summary>
            Maintenance Resolution Topic 5. A sub-topic of ResTopicID4.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID6">
            <summary>
            Maintenance Resolution Topic 6. A sub-topic of ResTopicID5.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID7">
            <summary>
            Maintenance Resolution Topic 7. A sub-topic of ResTopicID6.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID8">
            <summary>
            Maintenance Resolution Topic 8. A sub-topic of ResTopicID7.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID9">
            <summary>
            Maintenance Resolution Topic 9. A sub-topic of ResTopicID8.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID10">
            <summary>
            Maintenance Resolution Topic 10. A sub-topic of ResTopicID9.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopics">
            <summary>
            This is the combination of TopicID1 - TopicID10.  This is system maintained and provides a single word-indexed field for searching.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.Forward">
            <summary>
            It is updated by Calculate Global Scheduling Order process, it indicates if a job has to be scheduled Backwards or Forwards by Global Scheduling Process and it can be modified by Adjust Scheduling Global Order
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.SchedSeq">
            <summary>
            This is the sequence number used to order the jobs to be scheduled by Global Scheduling, it is generated by Scheduling Order Process taking into account the priorities of the jobs
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PAAExists">
            <summary>
            Indicates if at least one subassembly contains a part that is plan as assembly.  It does not indicate if the assembly is marked as PAA - only that the part is PAA in the BOM.  Used in MRP when determining if a job can be reused.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.DtlsWithinLeadTime">
            <summary>
            Indicates if the job structure (BOM) was created inside or outside of the mfg lead time for the job part.  Used in MRP when determining if a job can be reused.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.GroupSeq">
            <summary>
            GroupSeq
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.RoughCut">
            <summary>
            It indicates that the shop load for that job was not generated (shopload table). The load in shopload can be recreated by Save Resource Load process
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PlanGUID">
            <summary>
            PlanGUID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PlanUserID">
            <summary>
            PlanUserID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.LastChangedBy">
            <summary>
            LastChangedBy
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.LastChangedOn">
            <summary>
            LastChangedOn
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EPMExportLevel">
            <summary>
            EPMExportLevel
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.JobWorkflowState">
            <summary>
            JobWorkflowState
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.JobCSR">
            <summary>
            JobCSR
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ExternalMES">
            <summary>
            Indicates the record is used with Machine MES
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.LastExternalMESDate">
            <summary>
            LastExternalMESDate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.LastScheduleDate">
            <summary>
            LastScheduleDate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.LastScheduleProc">
            <summary>
            LastScheduleProc
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.SchedPriority">
            <summary>
            Sequence priority used internally by Calculate Global Scheduling Order process to order the jobs to be scheduled by Global Scheduling, it is generated by Scheduling Order Process taking into account the priorities of the jobs
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.DaysLate">
            <summary>
            It indicates the days a job is going to be late in relation to its required due date
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ContractID">
            <summary>
            ContractID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ProjProcessed">
            <summary>
            Logical field to indicate if this record has been read by project analysis process
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.SyncReqBy">
            <summary>
            SyncReqBy
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.CustName">
            <summary>
            CustName
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.CustID">
            <summary>
            CustID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IsCSRSet">
            <summary>
            IsCSRSet
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.UnReadyCostProcess">
            <summary>
            UnReadyCostProcess
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ProcSuspendedUpdates">
            <summary>
            ProcSuspendedUpdates
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ProjProcessedDate">
            <summary>
            DateTime field to indicate when this record has been read by project analysis process
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PCLinkRemoved">
            <summary>
            PCLinkRemoved
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ExternalMESSyncRequired">
            <summary>
            This field determines if the record needs to be synchronized to the Machine MES. Changes to the record will automatically set the value to true.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ExternalMESLastSync">
            <summary>
            The date and time the record was last synched to Machine MES.  The field is maintained by the Export Mattec process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ChangeDescription">
            <summary>
            The audit change description for the jobaudit record.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ClearDataset">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.dspReadyCostProcess">
            <summary>
            Calculated field is set Not UnReadyCostProcess
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EnableJobEngineered">
            <summary>
            Determine if jobengineered is enabled or disabled.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EnableJobFirm">
            <summary>
            Should JobFirm be enabled or disabled?
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EnableJobReleased">
            <summary>
            Determine if jobreleased is enabled or disabled.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EnableMaterialStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EnableProject">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EngineerAllowed">
            <summary>
            Is the job allowed to be engineered?
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EquipLocDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ExtUpdated">
            <summary>
            If some fields except ToFirm have been updated
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.FinalOpDueDate">
             <summary>
             Final Operation – This is scheduled Due Date for either:
            1.	Operation on ASM that has Final Operation checkbox selected
            2.	If no Operation on ASM has Final Operation selected than use Last Operation on ASM
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.FirmProcEnable">
            <summary>
            If it's Stocked assembly and PlanAsAsm is true.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.FirmProcess">
            <summary>
            is used to select stocked Job which will be processed by Firming Process instead of Firm check-box. Is available only for .FirmProcEnable = true (in Job Status Maintenance).
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.HasPlanAsAsm">
            <summary>
            Job has at least one assembly with flag Plan as Assembly.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.HeaderSensitive">
            <summary>
            Depending on the engineered job flag, is the header information enabled?
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IgnoreMtlConstraints">
            <summary>
            It will allow displaying default of this value from Plant.IgnoreMtlConstraints
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.JobTypeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.KitTime">
            <summary>
            If part is backflush the kit time is ignored.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.LockedQty">
            <summary>
            Locked Qty Flag
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.NewMeter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.OldJobNum">
            <summary>
            The old Job Number when JobFirm is changed from no to yes.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.OrderQty">
            <summary>
            The order qty
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PartmasterPart">
            <summary>
            Logical field signifying whether JobHead.PartNum is a valid part master part.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PhaseDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PMJob">
            <summary>
            Relative to Maintenance Jobs (JobType = "MNT") indicates if job is for "Preventive Maintenance".  This is a job that was created for a Equipment Maintenance Plan (JobHead.PlanNum &gt; 0)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ProcessModeDescription">
            <summary>
            Process Mode Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ReceiveTime">
            <summary>
            Receive Time field for Job Part entered on Job
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.SmartString">
            <summary>
            Original smart string passed in for configuration
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.SmartStringProcessed">
            <summary>
            If TRUE then this field will mean that the smart string has already been processed
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.SOExists">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.StockQty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ToFirm">
            <summary>
            To be Firmed
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.XRefPartTypeDesc">
            <summary>
            Description for XRefPartType
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.AdvanceLaborRate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.AnalysisCdDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.CallLineLineDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EquipMeterUOM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EquipSerialNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EquipLocID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EquipPlant">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EquipDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EquipBrand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EquipModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EquipCurrentMeter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EquipTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.EquipOEM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ExpenseCodeDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.HDCaseDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID1Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID10Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID2Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID3Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID4Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID5Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID6Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID7Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID8Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.IssueTopicID9Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PartNumSalesUM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PartNumIUM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PartNumTrackLots">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PartNumPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PartNumTrackSerialNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PartNumTrackDimension">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PartNumSellingFactor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PartNumPricePerCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PersonIDName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PlantName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.PlantMaintPlant">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ProdCodeDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ProdTeamIDDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ProdTeamIDName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ProjectIDDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.QuoteLineLineDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.QuoteNumCurrencyCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID1Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID10Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID2Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID3Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID4Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID5Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID6Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID7Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID8Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.ResTopicID9Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.SchedCodeDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadAttchRow.Company">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadAttchRow.JobNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadAttchRow.DrawingSeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadAttchRow.XFileRefNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadAttchRow.SysRevID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadAttchRow.SysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadAttchRow.ForeignSysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadAttchRow.DrawDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadAttchRow.FileName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadAttchRow.PDMDocID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadAttchRow.DocTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadAttchRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadAttchRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.JobComplete">
            <summary>
            Indicates if the Job is complete.  This is a mirror image of JobHead.JobComplete.  Not directly maintainable.  When Job is complete, then all assembly records are also marked complete.  This is used to make database access to open assembly records more efficient.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.JobNum">
            <summary>
            Job Number.  Associates the assembly record back its parent JobHead record.  Not directly maintainable.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.AssemblySeq">
            <summary>
            A sequence number that uniquely identifies the JobAsmbl record within the JobNum.  This can be user assigned or assigned by the system.  The system assigns the next available number during add mode if its left blank.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PartNum">
            <summary>
            Part number for this assembly.  Cannot be blank.  Does not have to be valid in the Part master file.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.Description">
            <summary>
            Description for the Part on the assembly record.  This cannot be blank.  Use Part.Description as default if a valid Part record exists. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.RevisionNum">
            <summary>
            The revision number for the assembly.  An optional field.  Defaults from the most current PartRev.RevisionNum.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.QtyPer">
            <summary>
            The production quantity required for this assembly per one of it's parent part. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.IUM">
            <summary>
            The internal unit of measure for this assembly.  Use the Part.IUM as a default. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.RequiredQty">
             <summary>
             This is how many of the assemblies are required to produce the END ITEM.  This is a calculated field.  Calculated as the (( Parents RequiredQty - Parents PullQty) X QtyPer) + OverRunQty.
            This field needs to be refreshed whenever a change is made to the production quantity in any of its parents or when its QtyPer, or Overrun fields are changed. The refresh may also occur if the structure of the assemblies is changed.
            The production quantity for the assembly which will drive raw material requirements and estimated production times can be determined by ( RequiredQty - PullQty). 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PullQty">
            <summary>
            This indicates a quantity that will be pulled from inventory for this assembly instead of being manufactured. This is a fixed quantity and is not affected by  QtyPer type changes. If this a valid Part, then it must update the PartWhse.AllocQty.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.WarehouseCode">
            <summary>
            This is the warehouse that the material is allocated against.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.MtlBurRate">
            <summary>
            The material burden rate for this Job Assembly. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.EstUnitCost">
            <summary>
            The estimated unit cost for the assembly quantity (JobAsmbl.PullQty)  that will be pulled from inventory.  Use the appropriate cost found in the Part file as a default.  That is, select the cost fields based on Part.CostMethod.  Then crossfoot the labor, burden and material into the EstUnitCost field.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.EstMtlBurUnitCost">
            <summary>
            The estimated Mtl burden unit cost for the assembly quantity (JobAsmbl.PullQty)  that will be pulled from inventory.  Use the appropriate cost found in the Part file as a default.  That is, select the cost fields based on Part.CostMethod. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.OverRunQty">
            <summary>
            This value indicates a quantity that is planned to be overrun and put into inventory. This is kept as a separate field so that is does not distort the BOM requirement relationships. This increases the total production quantity for the assembly.  This is a FIXED quantity and is not affected by structure or qty/per type changes. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.StartDate">
            <summary>
            Scheduled start date for the assembly (including queue time).  This is not user maintainable.  It is updated by the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.StartHour">
            <summary>
            This field is established by scheduling.  It represents the "Hour offset from the beginning of the work day" when this assembly is scheduled to begin (including queue time).  Scheduling uses the StartDate and StartHour of the parent assembly as the beginning Date/Hour when Backward scheduling subassemblies. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.DueDate">
            <summary>
            The scheduled due date for the assembly (including move time).  Not user maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.DueHour">
            <summary>
            This field is established by scheduling.  It represents the  "Hour offset from the beginning of the work day" when this assembly is scheduled to end (including move time).
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.Parent">
            <summary>
            Sequence number of the Parent Assembly.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PriorPeer">
             <summary>
             The  sequence number of the prior assembly that is on the same level as this assembly.  This  is known as a PriorPeer assembly.  This is automatically maintained by the maintenance programs.
            The logic is to find an assembly where the Parent is the same and the NextPeer is -1.  Then NextPeer of that assembly gets updated with this assemblies sequence number and this assembly gets its PriorPeer field updated with the sequence number from the assembly which was found.  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.NextPeer">
             <summary>
             The sequence number of the Next Assembly on the same level as this assembly.  This is known as a NextPeer assembly.  Automatically maintained by the maintenance programs.
            The logic is to find an assembly where the Parent is the same and the PriorPeer is -1.  Then the PriorPeer of that assembly is updated with this assemblies sequence number and then this assemblies NextPeer gets updated with the sequence number from the assembly that was found.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.Child">
            <summary>
            Sequence number of this assemblies very first subassembly.  This is known as the Child assembly.  Automatically maintained by the maintenance programs.  The logic is to find the Parent assembly record and if its child is -1, update it with this assemblies sequence number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TotalCost">
            <summary>
            Total cost to date, of this component that was issued from stock.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.MtlBurCost">
            <summary>
            Total material burden cost to date, of this component that was issued from stock.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.IssuedQty">
            <summary>
            This quantity is a summary of all Issue Transactions that were issued to meet this assemblies PullQty requirements.  This is not directly maintainable.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.DrawNum">
            <summary>
            Optional field for Engineering Drawing Number.  Defaulted from BomHead.DrawNum during methods pull functions.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.IssuedComplete">
            <summary>
            Indicates if the pull quantity has been issued complete.  If "yes" then this record is NOT part of the PartWhse.AllocQty total even if it had been issued less than the original required quantity.  The user may toggle the setting if the JobHead.Complete is "NO".  When it is toggled the allocation logic will be triggered if necessary.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.CommentText">
            <summary>
            Editor widget for Job Assembly comments. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.InCopyList">
            <summary>
            Indicates if this assembly is to be included in the browse of assemblies in the  "get details" function.  The user can use this option to keep the "Copy from" list from becoming cluttered with too many assemblies.  This does not prevent the user from copying this assembly, it just keeps it out of the browse.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.BomSequence">
            <summary>
            An internally system assigned integer which is used as part of an index to organize the records into a Bill of Material fashion sequence.   
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.BomLevel">
            <summary>
            An internally system assigned integer which represents the "Level of Indention" of the assembly in reference to the Bill of Material structure. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.WIStartDate">
            <summary>
            Scheduled "What If" start date for the assembly (including queue time).  This is not user maintainable.  It is updated by the scheduling process
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.WIStartHour">
            <summary>
            This field is established by scheduling.  It represents the What-If  "Hour offset from the beginning of the work day" when this assembly is scheduled to begin (including queue time).  Scheduling uses the StartDate and StartHour of the parent assembly as the beginning Date/Hour when Backward scheduling subassemblies. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.WIDueDate">
            <summary>
            The scheduled "What-If" due date for the assembly (including move time).  Not user maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.WIDueHour">
            <summary>
            This field is established by scheduling.  It represents the What-If "Hour offset from the beginning of the work day" when this assembly is scheduled to end (including move time). 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLALaborCost">
             <summary>
             This Level Actual Labor Cost.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLABurdenCost">
            <summary>
            This Level Actual Burden Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLAMaterialCost">
            <summary>
            This Level Actual Material Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLASubcontractCost">
            <summary>
            This Level Actual Subcontract Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLAMtlBurCost">
            <summary>
            This Level Actual Material Burden Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLASetupHours">
            <summary>
            This Level Actual Setup Hours.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLAProdHours">
            <summary>
            This Level Actual Production Hours.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLELaborCost">
            <summary>
            This Level Estimated Labor Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLEBurdenCost">
            <summary>
            This Level Estimated Burden Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLEMaterialCost">
            <summary>
            This Level Estimated Material Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLESubcontractCost">
            <summary>
            This Level Estimated Subcontract Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLEMtlBurCost">
            <summary>
            This Level Estimated Material Burden Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLESetupHours">
            <summary>
            This Level Estimated Setup Hours.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLEProdHours">
            <summary>
            This Level Estimated Production Hours.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLALaborCost">
            <summary>
            Lower Level Actual Labor Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLABurdenCost">
            <summary>
            Lower Level Burden Labor Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLAMaterialCost">
            <summary>
            Lower Level Actual Material Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLASubcontractCost">
            <summary>
            Lower Level Actual Subcontractor Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLAMtlBurCost">
            <summary>
            Lower Level Actual Material Burden Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLASetupHours">
            <summary>
            Lower Level Actual Setup Hours.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLAProdHours">
            <summary>
            Lower Level Actual Production Hours.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLELaborCost">
            <summary>
            Lower Level Estimated Labor Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLEBurdenCost">
            <summary>
            Lower Level Estimated Burden Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLEMaterialCost">
            <summary>
            Lower Level Estimated Material Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLESubcontractCost">
            <summary>
            Lower Level Estimated Subcontract Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLEMtlBurCost">
            <summary>
            Lower Level Estimated Material Burden Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLESetupHours">
            <summary>
            Lower Level Estimated Setup Hours.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLEProdHours">
            <summary>
            Lower Level Estimated Production Hours.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.AutoRecOpr">
             <summary>
             The operation number (JobOper.OprSeq) that is marked to do the Automatic Receipt to inventory.  Note: Zero = no operation is set to perform the auto receive into inventory function.
            This field is not directly maintainable.  Instead it is set during operation maintenance by having the user mark a check box indicating "Auto Receive" which then updates this field with the operations sequence number.  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.FinalOpr">
             <summary>
             The sequence of the operation that is to be considered as the operation which indicates the quantity complete for the Job/Assembly.  In other words this operations completed quantity = Job/Assembly completed.   Note: Zero = no operation is set and that the system should use the last operation to determine quantity complete.
            This field is not directly maintainable. Instead it is set during operation maintenance by having the user mark a check box indicating "Final Operation" which then updates this field with the operations sequence number.  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.FindNum">
            <summary>
            FUTURE IMPLEMENTATION - Characters used on the parent assembly drawing to show where assembly  is used.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.ReceivedToStock">
            <summary>
            Total received to stock.  This pertains receiving an OverRun quantity.  Used to update the PartDtl file for expected production quantity.  PartDtl is OverRun - ReceivedToStock.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.Plant">
            <summary>
            Site Identifier.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.Direct">
            <summary>
            Indicates if this assembly material requirement is going to be satisfied by another job (possibly in another Site), as opposed to a warehouse.  If "yes" a WarehouseCode will not be specified.. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.RelatedOperation">
             <summary>
             An assembly record can be related to a specific operation.  This field contains the JobOper.OprSeq of the operation that it is related to.
            It can be left as zero meaning that this assembly is required at the very beginning of the production job.  The related operation is also used to calculate scheduled start date. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLAMaterialLabCost">
             <summary>
             This Level Actual Material Labor Cost.  Depending on the setting of JCSyst.SplitMfgCostElements, if set to true then TLAMaterialLabCost is the Total Labor costs of all manufactured parts issued as material for this level (independent of TLAMaterialCost). Otherwise, TLAMaterialLabCost is one of the component costs that makes up the TLAMaterialCost (i.e. TLAMaterialCost = TLAMaterialLabCost + TLAMaterialMtlCost + TLAMaterialSubCost + TLAMaterialBurCost).
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLAMaterialMtlCost">
             <summary>
             This Level Actual Issued Material Cost.  Depending on the setting of JCSyst.SplitMfgCostElements, if set to true then TLAMaterialMtlCost is the Total Material costs of all manufactured parts issued as material for this level (independent of TLAMaterialCost). Otherwise, TLAMaterialMtlCost is one of the component costs that makes up the TLAMaterialCost (i.e. TLAMaterialCost = TLAMaterialLabCost + TLAMaterialMtlCost + TLAMaterialSubCost + TLAMaterialBurCost).
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLAMaterialSubCost">
             <summary>
             This Level Actual Material Subcontract Cost.  Depending on the setting of JCSyst.SplitMfgCostElements, if set to true then TLAMaterialSubCost is the Total Subcontract costs of all manufactured parts issued as material for this level (independent of TLAMaterialCost). Otherwise, TLAMaterialSubCost is one of the component costs that makes up the TLAMaterialCost (i.e. TLAMaterialCost = TLAMaterialLabCost + TLAMaterialMtlCost + TLAMaterialSubCost + TLAMaterialBurCost).
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLAMaterialBurCost">
             <summary>
             This Level Actual Material Burden Cost.  Depending on the setting of JCSyst.SplitMfgCostElements, if set to true then TLAMaterialBurCost is the Total Burden costs of all manufactured parts issued as material for this level (independent of TLAMaterialCost). Otherwise, TLAMaterialBurCost is one of the component costs that makes up the TLAMaterialCost (i.e. TLAMaterialCost = TLAMaterialLabCost + TLAMaterialMtlCost + TLAMaterialSubCost + TLAMaterialBurCost).
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLAMaterialLabCost">
             <summary>
             Lower Level Actual Material Labor Cost. Depending on the setting of JCSyst.SplitMfgCostElements, if set to true then LLAMaterialLabCost is the Total Labor costs of all manufactured parts issued as material for the lower level (independent of LLAMaterialCost). Otherwise, LLAMaterialLabCost is one of the component costs that makes up the LLAMaterialCost (i.e. LLAMaterialCost = LLAMaterialLabCost + LLAMaterialMtlCost + LLAMaterialSubCost + LLAMaterialBurCost).
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLAMaterialMtlCost">
             <summary>
             Lower Level Actual Material Material Cost. Depending on the setting of JCSyst.SplitMfgCostElements, if set to true then LLAMaterialMtlCost is the Total Material costs of all manufactured parts issued as material for the lower level (independent of LLAMaterialCost). Otherwise, LLAMaterialMtlCost is one of the component costs that makes up the LLAMaterialCost (i.e. LLAMaterialCost = LLAMaterialLabCost + LLAMaterialMtlCost + LLAMaterialSubCost + LLAMaterialBurCost).
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLAMaterialSubCost">
             <summary>
             Lower Level Actual Material Subcontract Cost. Depending on the setting of JCSyst.SplitMfgCostElements, if set to true then LLAMaterialSubCost is the Total Subcontract costs of all manufactured parts issued as material for the lower level (independent of LLAMaterialCost). Otherwise, LLAMaterialSubCost is one of the component costs that makes up the LLAMaterialCost (i.e. LLAMaterialCost = LLAMaterialLabCost + LLAMaterialMtlCost + LLAMaterialSubCost + LLAMaterialBurCost).
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLAMaterialBurCost">
             <summary>
             Lower Level Actual Material Burden Cost. Depending on the setting of JCSyst.SplitMfgCostElements, if set to true then LLAMaterialBurCost is the Total Burden costs of all manufactured parts issued as material for the lower level (independent of LLAMaterialCost). Otherwise, LLAMaterialBurCost is one of the component costs that makes up the LLAMaterialCost (i.e. LLAMaterialCost = LLAMaterialLabCost + LLAMaterialMtlCost + LLAMaterialSubCost + LLAMaterialBurCost).
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TotalMtlMtlCost">
            <summary>
            Total Mtl cost to date.  A summary of issue transactions - used track all costs for manufacured parts that were received into inventory then issued as material..  MaterialMtlCost +  MaterialLabCost +  MaterialSubCost + MaterialBurCost = TotalCost
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TotalMtlLabCost">
            <summary>
            Total Lab cost to date from parts issued from inventory.  A summary of issue transactions - used track all costs for manufacured parts that were received into inventory then issued as material..  IssuedMtlCost + IssuedLabCost + IssuedSubCost + IssuedBurCost = TotalCost
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TotalMtlSubCost">
            <summary>
            Total  Sub cost to date from part issued from inventory.  A summary of issue transactions used track all costs for manufacured parts that were received into inventory then issued as material..  IssuedMtlCost + IssuedLabCost + IssuedSubCost + IssuedBurCost = TotalCost
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TotalMtlBurCost">
            <summary>
            Total Burden cost to date from part issued from inventory.   A summary of issue transactions - used track all costs for manufacured parts that were received into inventory then issued as material.  IssuedMtlCost + IssuedLabCost + IssuedSubCost + IssuedBurCost = TotalCost
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.CallNum">
            <summary>
            The service call that this assembly belongs to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.CallLine">
            <summary>
            The Service Call Line that this assembly relates to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.RestoreFlag">
            <summary>
            Used to determine if this record was modified during the last What-If Schedule Restore.  The contents are Date-Time.  Example: "04/11/02-34221".
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.AnalysisCode">
            <summary>
            Analysis Code
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LastConfigDate">
            <summary>
            The date when the configuration was completed for the assembly.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LastConfigTime">
            <summary>
            The system time when the configuration was completed for the assembly.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LastConfigUserID">
            <summary>
            The User ID of the last user to complete the configuration of the assembly.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.OrigRequiredQty">
            <summary>
            This field will be set to the value of the JobAsmbl.RequiredQty at the time the JobHead.Engineered flag is set to true.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.UserMapData">
            <summary>
            Character field that will contain the coma separated data that has been returned from Microsoft Projects. This data will be retained exactly as it was returned from MSP. This field will NOT be editable within Vantage.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.WhseAllocFlag">
            <summary>
            Indicates if the PartWhse allocation needs to be/has been updated by the new time delated process. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLAMaterialMtlBurCost">
            <summary>
            This Level Actual Material Mtl Burden Cost.  Depending on the setting of JCSyst.SplitMfgCostElements, if set to true then TLAMaterialMtlBurCost is the Total Material Burden costs of all manufactured parts issued as material for this level.  Otherwise, TLAMaterialMtlBurCost may be populated but is not included in the calculation of TLAMaterialCost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLAMaterialMtlBurCost">
            <summary>
            Lower Level Actual Material Mtl Burden Cost.  Depending on the setting of JCSyst.SplitMfgCostElements, if set to true then LLAMaterialMtlBurCost is the Total Material Burden costs of all manufactured parts issued as material for the lower level.  Otherwise, LLAMaterialMtlBurCost may be populated but is not included in the calculation of LLAMaterialCost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLAMfgCompLabCost">
            <summary>
            This Level Actual Component Labor Cost.  This is the Total Labor costs of all manufactured parts issued as material for this level. Unlike TLAMaterialLabCost, this field will only store component costs that are from issued Mfg type materials used for this assembly.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLAMfgCompMtlCost">
            <summary>
            This Level Actual Component Material Cost.  This is the Total Material costs of all manufactured parts issued as material for this level. Unlike TLAMaterialMtlCost, this field will only store component costs that are from issued Mfg type materials used for this assembly.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLAMfgCompSubCost">
            <summary>
            This Level Actual Component Subcontract Cost.  This is the Total Subcontract costs of all manufactured parts issued as material for this level. Unlike TLAMaterialSubCost, this field will only store component costs that are from issued Mfg type materials used for this assembly.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLAMfgCompBurCost">
            <summary>
            This Level Actual Component Burden Cost.  This is the Total Burden costs of all manufactured parts issued as material for this level. Unlike TLAMaterialBurCost, this field will only store component costs that are from issued Mfg type materials used for this assembly.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLAMfgCompMtlBurCost">
            <summary>
            This Level Actual Component Material Burden Cost.  This is the Total Material Burden costs of all manufactured parts issued as material for this level. Unlike TLAMaterialMtlBurCost, this field will only store component costs that are from issued Mfg type materials used for this assembly.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLAMfgCompLabCost">
            <summary>
            Lower Level Actual Component Labor Cost. This is the Total Labor costs of all manufactured parts issued as material for the lower level. Unlike LLAMaterialLabCost, this field will only store component costs that are from issued Mfg type materials used for the lower assemblies.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLAMfgCompMtlCost">
            <summary>
            Lower Level Actual Component Material Cost. This is the Total Material costs of all manufactured parts issued as material for the lower level. Unlike LLAMaterialMtlCost, this field will only store component costs that are from issued Mfg type materials used for the lower assemblies.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLAMfgCompSubCost">
            <summary>
            Lower Level Actual Component Subcontract Cost. This is the Total Subcontract costs of all manufactured parts issued as material for the lower level. Unlike LLAMaterialSubCost, this field will only store component costs that are from issued Mfg type materials used for the lower assemblies.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLAMfgCompBurCost">
            <summary>
            Lower Level Actual Component Burden Cost. This is the Total Burden costs of all manufactured parts issued as material for the lower level. Unlike LLAMaterialBurCost, this field will only store component costs that are from issued Mfg type materials used for the lower assemblies.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LLAMfgCompMtlBurCost">
            <summary>
            Lower Level Actual Component Material Burden Cost.  This is the Total Material Burden costs of all manufactured parts issued as material for the lower level. Unlike LLAMaterialMtlBurCost, this field will only store component costs that are from issued Mfg type materials used for the lower assemblies.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.Weight">
            <summary>
            Assembly Weight defaulted from Part Master.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.WeightUOM">
            <summary>
            Assembly Weight UOM defaulted from Part Master.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.OrigMtlSeq">
            <summary>
            Original Material Sequence. Used in the configurator.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.OrigRuleTag">
            <summary>
            Original Rule Tag. Used in the Configurator.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.ValRefDes">
            <summary>
            Validate Reference Designators.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.BasePartNum">
            <summary>
            Base Part Number. Used in the configurator to identify the configurator part Number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.BaseRevisionNum">
            <summary>
            Base Revision Number. Used in the configurator to identify the configurator part revision Number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.EstMtlUnitCost">
             <summary>
             The estimated material unit cost component for the assembly quantity (JobAsmbl.PullQty)  that will be pulled from inventory.  Use the appropriate cost found in the Part file as a default.  That is, select the cost fields based on Part.CostMethod.  Then crossfoot the labor, burden and material into the EstUnitCost field.  This field is a subcomponent of EstUnitCost where:
            EstUnitCost = EstMtlUnitCost + EstLbrUnitCost + EstBurunitCost + EstSubUnitCost.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.EstLbrUnitCost">
             <summary>
             The estimated labor unit cost component for the assembly quantity (JobAsmbl.PullQty)  that will be pulled from inventory.  Use the appropriate cost found in the Part file as a default.  That is, select the cost fields based on Part.CostMethod.  Then crossfoot the labor, burden and material into the EstUnitCost field.  This field is a subcomponent of EstUnitCost where:
            EstUnitCost = EstMtlUnitCost + EstLbrUnitCost + EstBurunitCost + EstSubUnitCost.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.EstBurUnitCost">
             <summary>
             The estimated burden unit cost component for the assembly quantity (JobAsmbl.PullQty)  that will be pulled from inventory.  Use the appropriate cost found in the Part file as a default.  That is, select the cost fields based on Part.CostMethod.  Then crossfoot the labor, burden and material into the EstUnitCost field.  This field is a subcomponent of EstUnitCost where:
            EstUnitCost = EstMtlUnitCost + EstLbrUnitCost + EstBurunitCost + EstSubUnitCost.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.EstSubUnitCost">
             <summary>
             The estimated burden unit cost component for the assembly quantity (JobAsmbl.PullQty)  that will be pulled from inventory.  Use the appropriate cost found in the Part file as a default.  That is, select the cost fields based on Part.CostMethod.  Then crossfoot the labor, burden and material into the EstUnitCost field.  This field is a subcomponent of EstUnitCost where:
            EstUnitCost = EstMtlUnitCost + EstLbrUnitCost + EstBurunitCost + EstSubUnitCost.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PlanAsAsm">
            <summary>
            Indicates if the sub-assemby can be spawned off to a different job.  This can occur during the firming up of a job.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PAARef">
            <summary>
            Plan as assembly reference.  Used to link related subassemblies together when multiple assemblies are created for the same part due to PartSite lot size values.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PAAFirm">
            <summary>
            Used only on Plan As Assembly records.  Indicates the sub assembly will be split of from the the current job and a separate job for the assembly will be created.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.EstScrap">
            <summary>
            EstScrap =  a number representing either a scrap qty or a scrap percent depending on the value of EstScrapType field.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.EstScrapType">
            <summary>
            Qualifies the ScrapQty entry as being a fixed quantity or a percentage of run quantity.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.SmartStringProcessed">
            <summary>
            If TRUE then this field will mean that the smart string has already been processed
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.SmartString">
            <summary>
            Original smart string passed in for configuration
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.ReqRefDes">
            <summary>
            Required number of designators
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.ReassignSNAsm">
            <summary>
            Reassign Serial Numbers Assembly
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.TLAODCCost">
            <summary>
            This Level Actual Other Direct Cost.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.AssemblyMatch">
            <summary>
            AssemblyMatch
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.JdfStatus">
            <summary>
            JdfStatus
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PressDevice">
            <summary>
            PressDevice
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.DigitalFileName">
            <summary>
            DigitalFileName
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PrepressJobName">
            <summary>
            PrepressJobName
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.JdfPrepressAction">
            <summary>
            JdfPrepressAction
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.SendToPress">
            <summary>
            SendToPress
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.RemovedFromPlan">
            <summary>
            RemovedFromPlan
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.SendToPressInitiator">
            <summary>
            SendToPressInitiator
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.OperationType">
            <summary>
            OperationType
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.SendToPrePress">
            <summary>
            SendToPrePress
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.GroupSeq">
            <summary>
            GroupSeq
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PartPlanInfo">
            <summary>
            PartPlanInfo
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.OrigStructTag">
            <summary>
            When getting details on a multi-level configuration, the StructTag is used to load the configuration at each level so that method rules can be applied at that level.  By storing the original StructTag of the configuration as it was defined under its parent, it speeds up the process of determining where the lower level configured was originally configured.  If this field is populated, the lower level was originally configured as a child of another configured part.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.ContractID">
            <summary>
            ContractID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.LinkToContract">
            <summary>
            When a demand is flagged as Link to Contract, MRP will take the demand as part of the Planning Contract.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PCLinkRemoved">
            <summary>
            PCLinkRemoved
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.ExternalMESSyncRequired">
            <summary>
            This field determines if the record needs to be synchronized to the Machine MES. Changes to the record will automatically set the value to true.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.ExternalMESLastSync">
            <summary>
            The date and time the record was last synched to Machine MES.  The field is maintained by the Export Mattec process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.AddAsmAs">
            <summary>
            External field used to determine if Add assembly as "Sub"assembly or "Asm"bly
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.bAvailQty">
            <summary>
            external field used to calculate JobAsmbl.AvailableQty when PullQty changes.  This is needed because of a timing issue with PartQty getting updated too late.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.bUseAvailQty">
            <summary>
            external field used to calculate JobAsmbl.AvailableQty when PullQty changes.  This is needed because of a timing issue with PartQty getting updated too late.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.ChildAssemblySeq">
            <summary>
            The child assembly sequence field.  The JobAsmbl.Child field value.  The field Child was causing a .net conflict.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.DispIUM">
            <summary>
            The internal unit of measure for this assembly.  Same as IUM but readOnly
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.DisplayOrder">
            <summary>
            The order JobAsmbl records should be displayed.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.EnableAsmSplitCosts">
            <summary>
            Flag to indicate if the Unit Cost Breakdown costs should be enabled or not.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.EnableMtlSalvage">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.EnablePurDir">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.FirmProcEnable">
            <summary>
            If it's Stocked assembly and PlanAsAsm is true.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.FirmProcess">
            <summary>
            Is used to select stocked Job Assemblies which will be processed by Firming Process. Is available only for .FirmProcEnable = true.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.GetCostsFromInventory">
            <summary>
            External field for EQSyst GetCostsFromInventory
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.GetCostsFromTemplate">
            <summary>
            External field to hold JCSyst.GetCostsFromTemplate value
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.ParentAssemblySeq">
            <summary>
            The parent assembly sequence field.  The JobAsmbl.Parent field value.  The field Parent was causing a .net conflict.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.ParentDescription">
            <summary>
            Parent Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.ParentPartNum">
            <summary>
            Parent PartNum
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.ParentRev">
            <summary>
            Parent RevisionNum
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PartExists">
            <summary>
            Internal flag to identify if current Part is an Inventory Part.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PartmasterPart">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.RDEndNum">
            <summary>
            The starting and ending numbers define the reference designators that will be created. This field will be default to the same value as the ?Required Designators? field.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.RDPrefix">
            <summary>
            The prefix will be defaulted from the reference category defined for the assembly. The value on this field will be used to create reference designators.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.RDStartNum">
            <summary>
            This number will be used to create reference designators. This field will be defaulted to ?1?
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.RDSuffix">
            <summary>
            The suffix will be defaulted from the reference category defined for the assembly. The value on this field will be used to create reference designators.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.RelatedOperationDesc">
            <summary>
            Related Operation Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.ShowWarningBOMResequence">
            <summary>
            For Internal use ONLY to set a flag calculated from BO to show a warning message to the user when there exists some inconsistences between records on JobAsml table that can cause infinite loop when BOM Resequence.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.AvailableQty">
            <summary>
            Calculated Available Quantity
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.AnalysisCdDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.CallLineLineDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.JobNumPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PartNumIUM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PartNumPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PartNumTrackDimension">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PartNumPricePerCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PartNumTrackLots">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PartNumTrackSerialNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PartNumSellingFactor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PartNumSalesUM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.PlantName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.WarehouseCodeDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblAttchRow.Company">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblAttchRow.JobNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblAttchRow.AssemblySeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblAttchRow.DrawingSeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblAttchRow.XFileRefNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblAttchRow.SysRevID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblAttchRow.SysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblAttchRow.ForeignSysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblAttchRow.DrawDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblAttchRow.FileName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblAttchRow.PDMDocID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblAttchRow.DocTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblAttchRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblAttchRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblInspRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblInspRow.JobNum">
            <summary>
            Job Number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblInspRow.AssemblySeq">
            <summary>
            Assembly sequence number that this material is associated with.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblInspRow.PlanSeq">
            <summary>
            A sequence number that uniquely identifies the JobAsmblInsp record within the JobNum
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblInspRow.InspPlanPartNum">
            <summary>
            The inspection plan part number (configurator part number).
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblInspRow.InspPlanRevNum">
            <summary>
            The inspection plan revision number (configurator revision number).
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblInspRow.SpecID">
            <summary>
            The specification ID.  Must be valid in the SpecHed table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblInspRow.SpecRevNum">
            <summary>
            The specification revision number.  Must be valid in the SpecRev table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblInspRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblInspRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblInspRow.SpecHedDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblInspRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblInspRow.InspPlanDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblInspRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblInspRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.JobComplete">
            <summary>
            Indicates if  "Job"  is complete.  This is a mirror image of JobHead.Complete.  Not directly maintainable.  When the Job is completed, then all JobMtl records are also marked.  This is used to make database access to open material records more efficient.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.IssuedComplete">
            <summary>
            Indicates if this material requirement has been issued complete.  If "yes" then this record is NOT part of the Part.AllocQty total even if it had been issued less than the original required quantity.  The user may toggle the setting if the JobHead.Complete is "NO".  When it is toggled the allocation logic will be triggered if necessary. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.JobNum">
            <summary>
            Job Number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.AssemblySeq">
            <summary>
            Assembly sequence number that this material is associated with.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.MtlSeq">
            <summary>
            A sequence number that uniquely defines the Material (JobMtl) record within a specific Job/Assembly.  This is system assigned.  The next available number is determined by reading last JobMtl record on the Job/Assembly and then adding ten to it.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PartNum">
             <summary>
             Part number.  If the material is being purchased (JobMtl.BuyIt = yes) this does need to be a valid part in the Part file.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Description">
            <summary>
            A description of the material.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.QtyPer">
            <summary>
            Quantity per parent.  Field Service was EstQty in FSCallMt.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.RequiredQty">
            <summary>
            Required Quantity per END ITEM.  This is a calculated field.  Calculated as (Parent Required Qty X QtyPer) + calculated Scrap.  The parent quantity is either the JobHead.ProdQty if  JobMtl.AssemblySeq = 0 or (JobAsmbl.RequireQty - JobAsmbl.PullQty) if JobMtl.AssemblySeq &gt; 0. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.IUM">
             <summary>
             Internal unit of measure.  The unit used to measure the material.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.LeadTime">
             <summary>
             Expected purchasing lead time (in days).  This field is only valid if JobMtl.BuyIt = yes.  This can be used to calculate a suggested "Order By Date" based off the Required Date field.
            When scheduling the job, purchased material can push a schedule out if the material lead time prevents the material from being available when the operation could start.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.RelatedOperation">
             <summary>
             A material record can be related to a specific operation.  This field contains the JobOper.OprSeq of the operation that it is related to.
            It can be left as zero meaning that this material is required at the very beginning of the production job.  The related operation is also used to calculate the JobMtl.ReqDate based on the operations scheduled start date and materials lead time. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.MtlBurRate">
            <summary>
            The material burden rate for this Job Material. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EstMtlBurUnitCost">
            <summary>
            Estimated Material Burden Unit Cost of the material.  Defaults from the Part table if valid PartNum.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EstUnitCost">
            <summary>
            Estimated Unit Cost of the material.  Defaults from the Part table if valid PartNum.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.IssuedQty">
            <summary>
            This quantity is a summary of all Issue Transactions.  For FS this was FSCallMt.ActQty
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.TotalCost">
            <summary>
            Total cost to date.  A summary of issue transactions.  This DOES NOT include the salvageable scrap credit amounts.  FS - was UnitCost in FSCallMt
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.MtlBurCost">
            <summary>
            Total Material Burden cost to date.  A summary of issue transactions.  This DOES NOT include the salvageable scrap credit amounts.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.ReqDate">
            <summary>
            Mirror image of related operation (JobOper) or assembly (JobAsmbl) Start Date. (system maintained)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.WarehouseCode">
            <summary>
            The warehouse that the material is allocated against.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvagePartNum">
            <summary>
            Part number for salvageable scrap from this material record.  An optional field.  This does not have to be valid in the Part master. Salvage info is mainly to allow the credit back to a job for this type of scrap via salvage receipt process. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvageDescription">
            <summary>
            Description of Salvageable material.  Use Part.Description for a default.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvageQtyPer">
            <summary>
            A factor that multiplied by the JobMtl.RequiredQty results in the expected total salvage quantity.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvageUM">
            <summary>
            Default unit of measure for the Salvaged Part.  Default from the Part.IUM. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvageMtlBurRate">
            <summary>
            The salvage material burden rate for this Job Material. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvageUnitCredit">
            <summary>
            Estimated Salvage Unit Credit.  Use the appropriate cost from the Part master as a default. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvageEstMtlBurUnitCredit">
            <summary>
            Estimated Salvage Mtl burden Unit Credit.  Use the appropriate cost from the Part master as a default. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvageQtyToDate">
            <summary>
            This quantity is a summary of all transactions for receipt of salvage to inventory.  This is not directly maintainable. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvageCredit">
            <summary>
            Total salvage credit to date.  A summary of salvage receipt transactions. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvageMtlBurCredit">
            <summary>
            Total salvage Mtl Burden credit to date.  A summary of salvage receipt transactions.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.MfgComment">
             <summary>
             Comments for manufacturing about this material record.  These comments are printed on manufacturing reports, such as the router.  For valid Parts use the Part.MfgComment as a default.
            View as editor widget. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorNum">
            <summary>
            Used to identify a default vendor.  Use the Part.VendorNum as a default.  This will be used as a default for purchasing and miscellaneous receipts.  This field is not directly maintainable, instead its assigned by having the user either entering the "VendorID" and then finding the VendorNum in the Vendor file or by selection list processing.  An optional field, but if entered must be valid. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PurPoint">
            <summary>
            The Vendors Purchase Point ID.  Along with the VendorNum is used to tie back to the VendorPP master file.  Use the default purchase point defined in the Vendor file.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.BuyIt">
            <summary>
            Indicates if this material is to be purchased for the Job.  If this is a non inventory part then this is "Yes" and cannot be changed.  If this is a valid Part then set it to "NO" but the user can override it. Material that is marked to be purchased (BuyIt = Yes) are NOT included in the PartWhse.AllocatedQty.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Ordered">
            <summary>
            FUTURE IMPLEMENTATION.  This logical relates to material that is flagged to be purchased (BuyIt = Yes).  When purchase orders are created for this job material requirement this flag is set to Yes indicating that a purchase order has been placed.  The idea would be to use this within purchasing to quickly see the "direct job requirements" where no purchase orders have been placed. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PurComment">
             <summary>
             Comments for purchasing about this material record on this job. These comments will be used as defaults to the PODetail.Comment field when the purchase order references this JobMtl record.
            View as editor widget. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.BackFlush">
             <summary>
             Indicates if this material will be backflushed.
            Note: this field is defaulted from Part.BackFlush
            Backflushing occurs via the write trigger on LaborDtl.  The basic idea is to issue material based on the labor quantities reported. The formula for the issue quantity is: (JobMtl.RequiredQty/JobOper.RunQty) * (LaborDtl.LaborQty + LaborDtl.SrapQty).
            
              
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EstScrap">
            <summary>
            Estimated Scrap.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EstScrapType">
            <summary>
            Qualifies the EstScrapQty entry as being a fixed quantity or a percentage of required quantity.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.FixedQty">
            <summary>
            Indicates if the QtyPer field represents a "Fixed Quantity".  If Yes, then the required quantity = QtyPer.  That is, the quantity does not change as the number of pieces being produced changes.  This can be used to enter Tooling or Fixture type of requirements.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.FindNum">
            <summary>
            Characters used on the drawing to show where material is used.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.RevisionNum">
            <summary>
            The revision number for the material.  An optional field. Defaults from the most current  PartRev.RevisionNum.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SndAlrtCmpl">
            <summary>
            Controls if an alert is to be sent when this JobMtl is completed.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.RcvInspectionReq">
            <summary>
            Indicates if inspection is required when items are received to this JobMtl.  Inspection may also be enforced if the related PartClass, Vendor, PODetail have their "RcvInspectionReq" fields set to Yes.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Plant">
            <summary>
            Site Identifier.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Direct">
            <summary>
            Indicates if this material requirement is going to be satisfied by another job (possibly in another Site), as opposed to a warehouse.  If "yes" a WarehouseCode will not be specified. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.MaterialMtlCost">
            <summary>
            Total Mtl cost to date.  A summary of issue transactions - used track all costs for manufacured parts that were received into inventory then issued as material..  MaterialMtlCost +  MaterialLabCost +  MaterialSubCost + MaterialBurCost = TotalCost
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.MaterialLabCost">
            <summary>
            Total Lab cost to date from parts issued from inventory.  A summary of issue transactions - used track all costs for manufacured parts that were received into inventory then issued as material..  IssuedMtlCost + IssuedLabCost + IssuedSubCost + IssuedBurCost = TotalCost
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.MaterialSubCost">
            <summary>
            Total  Sub cost to date from part issued from inventory.  A summary of issue transactions used track all costs for manufacured parts that were received into inventory then issued as material..  IssuedMtlCost + IssuedLabCost + IssuedSubCost + IssuedBurCost = TotalCost
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.MaterialBurCost">
            <summary>
            Total Bur cost to date from part issued from inventory.   A summary of issue transactions - used track all costs for manufacured parts that were received into inventory then issued as material.  IssuedMtlCost + IssuedLabCost + IssuedSubCost + IssuedBurCost = TotalCost
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvageMtlCredit">
            <summary>
            Total salvage Mtl credit to date.  A summary of salvage receipt transactions.  SalvageCredit = SalvageMtlCredit + SalvageLbrCredit + SalvageBurCredit + SalvageSubCredit
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvageLbrCredit">
            <summary>
            Total salvage Lbr credit to date.  A summary of salvage receipt transactions.  SalvageCredit = SalvageMtlCredit + SalvageLbrCredit + SalvageBurCredit + SalvageSubCredit
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvageBurCredit">
            <summary>
            Total salvage Burden credit to date.  A summary of salvage receipt transactions.  SalvageCredit = SalvageMtlCredit + SalvageLbrCredit + SalvageBurCredit + SalvageSubCredit
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvageSubCredit">
            <summary>
            Total salvage Subcontract credit to date.  A summary of salvage receipt transactions.  SalvageCredit = SalvageMtlCredit + SalvageLbrCredit + SalvageBurCredit + SalvageSubCredit
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.APSAddResType">
             <summary>
             Advanced Planning and Scheduling Additional Resource Type.  Indicates whether the Part should be treated as an AdditionalResourceType by eScheduler.
            'I' to ignore in eScheduler
            'M' to treat at Material in eScheduler
            'A' to treat as AddResType in eScheduler
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.CallNum">
            <summary>
            The service call that this Material belongs to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.CallLine">
            <summary>
            The Service Call Line that this material relates to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.ProdCode">
            <summary>
            Product Group Code. Use the Part.ProdCode as a default.  This can be blank or must be valid in the ProdGrup table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.UnitPrice">
            <summary>
            FS - Unit Price for the Material in base currency. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.BillableUnitPrice">
            <summary>
            FS - Billable Unit Price for the Material in base currency. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.DocBillableUnitPrice">
            <summary>
            FS - Billable Price per unit for the material in customers currency. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.ResReasonCode">
            <summary>
            Problem reason code from the reason master table. type Service call. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PricePerCode">
            <summary>
            Indicates the pricing per quantity for this part. It can be "E" = per each,"C" = per hundred,  "M" = per thousand. Maintainable only via Part Maintenance. The initial default is "E". 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Billable">
            <summary>
            Is this a billable material item.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.ShippedQty">
            <summary>
            Holds the quantity of the item that has been shipped through misc.  shipments
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.DocUnitPrice">
            <summary>
            FS - Unit Price for the Material in Customer currency. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.QtyStagedToDate">
            <summary>
            The todate quantity that has been moved to the work centers input Warehouse/Bin.  This is NOT A balance.  It is a todate value. It is not reduced as it is consumed. Used in calculation of "Outstanding" material in the Request Material program (ame30-dg.w). Only updated if the Advanced Material Mgmt module is installed and only by transactions which "move" the material in/out of the staging area(Issues,Returns).  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.AddedMtl">
            <summary>
            This material was added after initial setup of the job
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.MiscCharge">
            <summary>
            This indicates that this JobMtl record is for a Misc charge related to this job/assembly.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.MiscCode">
            <summary>
            The Miscellaneous Charge Code. This must be valid in the PurMisc master file.   It must be a AP Misc. charge.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SCMiscCode">
            <summary>
            The Miscellaneous Charge Code for Service Call billing. This must be valid in the MiscChrg master file.   It must be a AR Misc. charge.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.RFQNeeded">
            <summary>
            A flag to indicate that this job material requires an RFQ.  If it does require an RFQ, the user must enter the number of vendor quotes that are required.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.RFQVendQuotes">
            <summary>
            The number of vendor quotes that are required for this job material.  Can be zero if RFQ(s) are not required.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.RFQNum">
            <summary>
            RFQ number that the item is linked to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.RFQLine">
            <summary>
            The line number of this detail record on the RFQ. This number uniquely identifies the record within the RFQ. The number is not directly maintainable, it's assigned by the system when records are created. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.RFQStat">
             <summary>
             RFQ Status.
            W= Waiting, A = Accepted, R = Requested, C = Received
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.AnalysisCode">
            <summary>
            Analysis Code
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.GlbRFQ">
            <summary>
            Global RFQ flag.  Used in Consolidated Purchasing.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.WhseAllocFlag">
            <summary>
            Indicates if the PartWhse allocation needs to be/has been updated by the new time delated process. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.WIReqDate">
            <summary>
            Mirror image of related operation (JobOper) or assembly (JobAsmbl) Start Date. (system maintained)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Rpt1BillableUnitPrice">
            <summary>
            Reporting currency value of this field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Rpt2BillableUnitPrice">
            <summary>
            Reporting currency value of this field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Rpt3BillableUnitPrice">
            <summary>
            Reporting currency value of this field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Rpt1UnitPrice">
            <summary>
            Reporting currency value of this field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Rpt2UnitPrice">
            <summary>
            Reporting currency value of this field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Rpt3UnitPrice">
            <summary>
            Reporting currency value of this field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.BaseRequiredQty">
             <summary>
             Required Quantity in the Parts Base UOM.  Set by the system by doing a UOM conversion of the JobMtl.RequiredQty which is in the UOM of the requirement to the JobMtl.BaseUOM which is the UOM of the Part and it's unit costs.
            This quantity multiplied by the JobMtl.EstMtlUnitCost is used to update the total estimated costs found in JobAsmbl.TLEMaterialCost
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.BaseUOM">
             <summary>
             Unit of Measure of the JobMtl.BaseRequiredQty.
            If valid part, then it is the Parts Primary Inventory UOM otherwise it is the same as JobMtl.IUM
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Weight">
            <summary>
            Material Weight defaulted from Part Master.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.WeightUOM">
            <summary>
            Material Weight UOM defaulted from Part Master.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.ReqRefDes">
            <summary>
            Required number of designators
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.BasePartNum">
            <summary>
            Base Part Number. Used in the configurator to identify the configurator part Number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.BaseRevisionNum">
            <summary>
            Base Revision Number. Used in the configurator to identify the configurator part revision Number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SelectForPicking">
            <summary>
            Indicates if the job material is selected to be submitted to the picking queue. When submitted for picking a record is written to the MtlQueue table and then SelectForPicking is reset to NO. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.StagingWarehouseCode">
            <summary>
            The job pick "Staging" warehouse for the job material.  Defaults from the system default warehouse (PlantConfCtrl.DefJobPickWhse).
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.StagingBinNum">
            <summary>
            The job pick "Staging" bin for the job material.  Defaults from the system default bin (PlantConfCtrl.DefJobPickBin).
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PickError">
             <summary>
             A non blank character indicates that the release could not be picked by the Auto Pick process.
            The possible values are;
            "L" - Order Line can't be shipped complete.
            "O" - Order can't be shipped complete.
            "I" - Insufficient quantity reserved
            "Z" - Zero quantity reserved.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EstMtlUnitCost">
             <summary>
             Estimated Material Unit Cost component of the EstUnitCost.  Defaults from the Part table if valid PartNum.  This field will only have value if the part is a manufactured stock part. This is a subcomponent of the EstUnitCost where:
            EstUnitCost = EstMtlUnitCost + EstLbrUnitCost + EstBurUnitCost + EstSubUnitCost.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EstLbrUnitCost">
             <summary>
             Estimated Labor Unit Cost component of the EstUnitCost.  Defaults from the Part table if valid PartNum.  This field will only have value if the part is a manufactured stock part. This is a subcomponent of the EstUnitCost where:
            EstUnitCost = EstMtlUnitCost + EstLbrUnitCost + EstBurUnitCost + EstSubUnitCost.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EstBurUnitCost">
             <summary>
             Estimated Burden Unit Cost component of the EstUnitCost.  Defaults from the Part table if valid PartNum.  This field will only have value if the part is a manufactured stock part. This is a subcomponent of the EstUnitCost where:
            EstUnitCost = EstMtlUnitCost + EstLbrUnitCost + EstBurUnitCost + EstSubUnitCost.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EstSubUnitCost">
             <summary>
             Estimated Subcontract Unit Cost component of the EstUnitCost.  Defaults from the Part table if valid PartNum.  This field will only have value if the part is a manufactured stock part. This is a subcomponent of the EstUnitCost where:
            EstUnitCost = EstMtlUnitCost + EstLbrUnitCost + EstBurUnitCost + EstSubUnitCost.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvageEstMtlUnitCredit">
             <summary>
             Estimated Salvage Material Unit Credit.  Use the appropriate cost from the Part master as a default.  This is a subcomponent of the field SalvageUnitCredit where:
            SalvageUnitCredit = SalvageEstMtlUnitCredit + SalvageEstLbrUnitCredit + SalvageEstBurUnitCredit + SalvageEstSubUnitCredit.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvageEstLbrUnitCredit">
             <summary>
             Estimated Salvage Labor Unit Credit.  Use the appropriate cost from the Part master as a default.  This is a subcomponent of the field SalvageUnitCredit where:
            SalvageUnitCredit = SalvageEstMtlUnitCredit + SalvageEstLbrUnitCredit + SalvageEstBurUnitCredit + SalvageEstSubUnitCredit.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvageEstBurUnitCredit">
             <summary>
             Estimated Salvage Burden Unit Credit.  Use the appropriate cost from the Part master as a default.  This is a subcomponent of the field SalvageUnitCredit where:
            SalvageUnitCredit = SalvageEstMtlUnitCredit + SalvageEstLbrUnitCredit + SalvageEstBurUnitCredit + SalvageEstSubUnitCredit.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvageEstSubUnitCredit">
             <summary>
             Estimated Salvage Subcontract Unit Credit.  Use the appropriate cost from the Part master as a default.  This is a subcomponent of the field SalvageUnitCredit where:
            SalvageUnitCredit = SalvageEstMtlUnitCredit + SalvageEstLbrUnitCredit + SalvageEstBurUnitCredit + SalvageEstSubUnitCredit.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.LoanedQty">
            <summary>
            The material quantity that has been loaned out to another job.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.BorrowedQty">
            <summary>
            The material quantity that has been borrowed from another job.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.ReassignSNAsm">
            <summary>
            flag used to designate if the serial numbers from the job material/subassembly can be reassigned as the serial number of the parent assembly (top assembly or n deep subassembly) being reworked using a job.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.GeneralPlanInfo">
            <summary>
            GeneralPlanInfo
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EstStdDescription">
            <summary>
            EstStdDescription
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PricingUOM">
            <summary>
            PricingUOM
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.RemovedFromPlan">
            <summary>
            RemovedFromPlan
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.IsPOCostingMaintained">
            <summary>
            IsPOCostingMaintained
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EstStdType">
            <summary>
            EstStdType
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.POCostingFactor">
            <summary>
            POCostingFactor
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PlannedQtyPerUnit">
            <summary>
            PlannedQtyPerUnit
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.POCostingDirection">
            <summary>
            POCostingDirection
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.POCostingUnitVal">
            <summary>
            POCostingUnitVal
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.GroupSeq">
            <summary>
            GroupSeq
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.OrigStructTag">
            <summary>
            When getting details on a multi-level configuration, the StructTag is used to load the configuration at each level so that method rules can be applied at that level.  By storing the original StructTag of the configuration as it was defined under its parent, it speeds up the process of determining where the lower level configured was originally configured.  If this field is populated, the lower level was originally configured as a child of another configured part.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.OrigGroupSeq">
            <summary>
            By storing the original Group Sequence of the configuration as it was defined under its parent, it speeds up the process of determining where the lower level configured was originally configured.  If this field is populated, the lower level was originally configured as a child of another configured part.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.ShowStatusIcon">
            <summary>
            ShowStatusIcon
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.ContractID">
            <summary>
            ContractID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.LinkToContract">
            <summary>
            When a demand is flagged as Link to Contract, MRP will take the demand as part of the Planning Contract.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.StagingLotNum">
            <summary>
            Stores the lot number of the material in the Staging Warehouse/Bin.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PCLinkRemoved">
            <summary>
            PCLinkRemoved
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.ExternalMESSyncRequired">
            <summary>
            This field determines if the record needs to be synchronized to the Machine MES. Changes to the record will automatically set the value to true.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.ExternalMESLastSync">
            <summary>
            The date and time the record was last synched to Machine MES.  The field is maintained by the Export Mattec process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.AllowJobCosts">
            <summary>
            Flag to allow/disallow the user to see the Job Costs. Since the Object designer is not letting me add a boolean, I added a string.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.CurrencyCode">
            <summary>
            Currency Code of the related record
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.CurrencySwitch">
            <summary>
            The currency switch flag
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.CurrSymbol">
            <summary>
            A symbol that identifies the currency. Used on Forms and displays
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.DisplayExtPrice">
            <summary>
            The display of extended price.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.DisplayUnitPrice">
            <summary>
            The display unit price.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.DocDisplayExtPrice">
            <summary>
            The document display extended price
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.DocDisplayUnitPrice">
            <summary>
            The document display extended price
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.dspBuyIt">
            <summary>
            BuyIt field for display in the UI.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.DspIUM">
            <summary>
            Display IUM (readonly)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EnableBackflush">
            <summary>
            Should the backflush field be enabled?
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EnableBuyIt">
            <summary>
            Field used to determine if there is security on JobMtl.BuyIt. If there is a row rule will disable the dspBuyIt.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EnableConfigure">
            <summary>
            flag to determine whether the Configure Option should be enabled.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EnableDirect">
            <summary>
            flag to determine whether the Make Direct field should be enabled.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EnableFixedQty">
            <summary>
            This external field is used as a flag to determine when to enable/disable the FixedQty field according to the rules of Serial numbers design.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EnableMtlSalvage">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EnablePurDir">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EnableRcvInspReq">
            <summary>
            Field to determine if the the RcvInspectionReq field should be enabled or disabled.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EnableSndAlrtCmpl">
            <summary>
            Field to determine if the the sndalrtcmpl field should be enabled or disabled.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EnableSplitCosts">
            <summary>
            Flag to indicate if the Unit Cost Breakdown costs should be enabled or not.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.EstCost">
            <summary>
            RequiredQty * EstUnitCost - RequiredQty * SalvageQtyPer * SalvageUnitCredit
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.IPCaller">
            <summary>
            The name of the calling program
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.IsBaseCurrency">
            <summary>
            IsBaseCurrency
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.IsMtlConfigurationOn">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.IsMtlConfigureOn">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.IsMtlExtConfig">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.IsMtlRevisionApproved">
            <summary>
            IsMtlRevisionApproved
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PartExists">
            <summary>
            Internal flag to identify if current Part is an Inventory Part.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PlantList">
            <summary>
            Calculated field gets list of available Sites
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PricePerCodeDescription">
            <summary>
            Price Per Code Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.RDEndNum">
            <summary>
            The starting and ending numbers define the reference designators that will be created. This field will be default to the same value as the ?Required Designators? field.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.RDPrefix">
            <summary>
            The prefix will be defaulted from the reference category defined for the material. The value on this field will be used to create reference designators.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.RDStartNum">
            <summary>
            This number will be used to create reference designators. This field will be defaulted to ?1?
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.RDSuffix">
            <summary>
            The suffix will be defaulted from the reference category defined for the material. The value on this field will be used to create reference designators.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.RelatedOperationDesc">
            <summary>
            The description of the related operation
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.RetainValues">
            <summary>
            Logical used to determine if record is created from PO Entry.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Rpt1DisplayExtPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Rpt1DisplayUnitPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Rpt2DisplayExtPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Rpt2DisplayUnitPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Rpt3DisplayExtPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.Rpt3DisplayUnitPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SalvageBaseUOM">
            <summary>
            BaseUOM for SalvagePartNum
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.ShowInspRqdImg">
            <summary>
            Satatus of InspectionRequired image on JobMaterial form.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SubContract">
            <summary>
            Added for UI Framework?  This flags the material as being a "SubContract" or an "Internal" material.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.AllowBackflushUncheck">
            <summary>
            Can the backflush be unchecked?
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.AnalysisCdDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.AssemblySeqPartNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.AssemblySeqDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.CallLineLineDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.JobNumPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.JobNumPartNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.MiscCodeDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PartNumTrackLots">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PartNumIUM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PartNumPricePerCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PartNumTrackDimension">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PartNumTrackSerialNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PartNumPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PartNumSellingFactor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PartNumSalesUM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PlantName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.ProdCodeDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PurMiscCodeDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PurMiscCodeLCAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PurMiscCodeLCDisburseMethod">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.PurMiscCodeLCCurrencyCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.ReasonDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.RFQLineLineDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SCMiscCodeDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorNumTermsCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorNumVendorID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorNumZIP">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorNumAddress2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorNumDefaultFOB">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorNumCountry">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorNumState">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorNumAddress3">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorNumCurrencyCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorNumAddress1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorNumCity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorNumName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorPPState">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorPPAddress2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorPPCountry">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorPPPrimPCon">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorPPZip">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorPPCity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorPPAddress1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorPPAddress3">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.VendorPPName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.WarehouseCodeDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlAttchRow.Company">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlAttchRow.JobNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlAttchRow.AssemblySeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlAttchRow.MtlSeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlAttchRow.DrawingSeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlAttchRow.XFileRefNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlAttchRow.SysRevID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlAttchRow.SysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlAttchRow.ForeignSysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlAttchRow.DrawDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlAttchRow.FileName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlAttchRow.PDMDocID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlAttchRow.DocTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlAttchRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlAttchRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlInspRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlInspRow.JobNum">
            <summary>
            Job Number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlInspRow.AssemblySeq">
            <summary>
            Assembly sequence number that this material is associated with.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlInspRow.MtlSeq">
            <summary>
            A sequence number that uniquely defines the Material (JobMtl) record within a specific Job/Assembly.  This is system assigned.  The next available number is determined by reading last JobMtl record on the Job/Assembly and then adding ten to it.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlInspRow.PlanSeq">
            <summary>
            A sequence number that uniquely identifies the JobMtlInsp record within the JobNum
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlInspRow.InspPlanPartNum">
            <summary>
            The inspection plan part number (configurator part number).
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlInspRow.InspPlanRevNum">
            <summary>
            The inspection plan revision number (configurator revision number).
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlInspRow.SpecID">
            <summary>
            The specification ID.  Must be valid in the SpecHed table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlInspRow.SpecRevNum">
            <summary>
            The specification revision number.  Must be valid in the SpecRev table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlInspRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlInspRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlInspRow.SpecHedDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlInspRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlInspRow.InspPlanDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlInspRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlInspRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRefDesRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRefDesRow.JobNum">
            <summary>
            Job Number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRefDesRow.AssemblySeq">
            <summary>
            Assembly sequence number that this material is associated with.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRefDesRow.MtlSeq">
            <summary>
            A sequence number that uniquely defines the Material (JobMtl) record within a specific Job/Assembly.  This is system assigned.  The next available number is determined by reading last JobMtl record on the Job/Assembly and then adding ten to it.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRefDesRow.RefDes">
            <summary>
            Identifier of Reference Designator
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRefDesRow.RefDesSeq">
            <summary>
            Unique identifies the reference designator with the material sequence. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRefDesRow.MtlPartNum">
            <summary>
            The Part Number of the component material record for the related Parent Part.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRefDesRow.Side">
            <summary>
            Free form side location. (Top, Bottom, Both, Level, etc)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRefDesRow.XLocation">
            <summary>
            X Coordinate of the reference designator
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRefDesRow.YLocation">
            <summary>
            Y Coordinate of the reference designator
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRefDesRow.ZLocation">
            <summary>
            Z Coordinate of the reference designator
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRefDesRow.Rotation">
            <summary>
            Rotation of the reference designator. Max value = 360.000
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRefDesRow.Description">
            <summary>
            Designator Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRefDesRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRefDesRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRefDesRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRefDesRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRefDesRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.JobNum">
            <summary>
            Job Number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.AssemblySeq">
            <summary>
            Assembly sequence number that this material is associated with.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.MtlSeq">
            <summary>
            A sequence number that uniquely defines the Material (JobMtl) record within a specific Job/Assembly.  This is system assigned.  The next available number is determined by reading last JobMtl record on the Job/Assembly and then adding ten to it.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.RestrictionTypeID">
            <summary>
            Restriction Type identification.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.MtlPartNum">
            <summary>
            The Part Number of the component material record for the related Parent Part.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.Manual">
            <summary>
            When true then no roll-up will be calculated for this Restriction type. Compliance date is set when this flag is set. D/I Roll-Up radio Button will be disabled.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.Weight">
            <summary>
            Read-only. Yes to display when the part has no net weight or when one or more of the selected has no weight.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.AssemblySeqDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.JobNumPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.PartNumTrackLots">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.PartNumTrackDimension">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.PartNumPricePerCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.PartNumTrackSerialNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.PartNumSalesUM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.PartNumPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.PartNumIUM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.PartNumSellingFactor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.RestrictionDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictionRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.JobNum">
            <summary>
            Job Number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.AssemblySeq">
            <summary>
            Assembly sequence number that this material is associated with.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.MtlSeq">
            <summary>
            A sequence number that uniquely defines the Material (JobMtl) record within a specific Job/Assembly.  This is system assigned.  The next available number is determined by reading last JobMtl record on the Job/Assembly and then adding ten to it.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.RestrictionTypeID">
            <summary>
            Restriction Type identification.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.SubstanceID">
            <summary>
            Substance identification.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.Weight">
            <summary>
            Material Weight defaulted from Part Master.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.WeightUOM">
            <summary>
            Material Weight UOM defaulted from Part Master.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.Manual">
            <summary>
            When true then weight is disregarded in compliance roll-up.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.ExemptDate">
            <summary>
            The date when exempt status for this substance expires.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.ExemptCertificate">
            <summary>
            Optional. Exemption certificate.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.Exempt">
            <summary>
            Read-only. True when exempt date &gt;= today.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.MtlPartNum">
            <summary>
            The Part Number of the component material record for the related Parent Part.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.AssemblySeqDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.JobNumPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.RestrictionDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.SubstanceDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobMtlRestrictSubstRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.JobComplete">
            <summary>
            Indicates if  "Job"  is complete.  This is a mirror image of JobHead.Complete.  Not directly maintainable.  When the Job is completed, then all JobOper records are also marked.  This is used to make database access to open operation records more efficient.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.OpComplete">
             <summary>
             Indicates if this operation is completed. This is normally set to complete via labor entry transactions.   Not maintainable by Job Entry. It can't be reset to "No" if the JobHead.Complete = Yes.
            Labor entry setting logic is: If SetUpComplete = Yes and  EstProdHours = 0 or ProdComplete = Yes and EstSetHours = 0 or both ProdComplete = Yes and SetupComplete = Yes  then OpComplete = Yes.
            This field is also set by PO receipt entry "issue complete" for subcontract operations.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.JobNum">
            <summary>
            Job Number
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.AssemblySeq">
            <summary>
            Assembly Sequence # that this Operation is associated with.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.OprSeq">
            <summary>
            A sequence number which uniquely identifies the operation record within the Job/lot/level. The sequence can be system generated or assigned by user. System generated numbers are determined by reading last JobOper for the job/lot/level and then figures out what the next number that is divisible by 10. If this number is within 3 of the last Number on file it will be bumped up another 10. This keeps a minimum of 2 available sequences between records. For example if last = 18 Next would be 30, If last = 17  next = 20. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.OpCode">
            <summary>
            Operation Master Code - Links the JobOper  record with a OpMaster record.  Default is given from WrkCenter.OpCode.  Must be valid in the OpMaster file.
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.OpStdID">
             <summary>
             The Operation standard ID.  This links the JobOper to the OpStd master file.  This can be blank or if entered must be valid if entered.  When this field is changed the ProdStandard, StdFormat and StdBasis should be refreshed with the new defaults.
            Valid for "inside operations" only.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.EstSetHours">
            <summary>
            Total estimated set up hours.  Calculated as EstSetHoursPerMch * Machines.  It is set to zero if operation qty is zero.  This is maintained via the JobOper write trigger.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.EstProdHours">
             <summary>
             The estimated Production run hours for internal operations (JobOper.Subcontract = No) . This is not directly maintainable. It exists so that it will be easier to display than always having to  recalculate it  when it is needed.  It is calculated using the ProdStandard, StdFormat, StdBasis, OpsPerPart, QtyPer, EstScrap and EstScrapType.
            FORMULAS:
            If StdFormat = "HR" then EstProdHours = ProdStandard. 
            If StdFormat = "PH" then (JobOper.RunQty / Std).
            If StdFormat = "PM" then (JobOper.RunQty / Std ) / 60.
            If StdFormat = "OH" then (JobOper.RunQty/OpsPerPart) / Std.
            If StdFormat = "OM" then ((JobOper.RunQty/OpsPerPart) / Std) / 60.
            If StdFormat = "HP" then (JobOPer.RunQty/Basis) X Std.
            If StdFormat = "MP" then ((JobOper.RunQty/Basis) X Std) / 60.   
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ProdStandard">
             <summary>
             The production standard for the operation.  It can be expressed as Hours, Minutes per piece, Pieces per Time, Operations per Minute or Operations per hour. This along with the StdFormat, StdBasis, OpsPer and   fields are used to calculate the operations estimated production hours.  A value can be defaulted from the OpStd master.
            NOTE: The ProdStandard can only be zero if the EstSetHours are greater than zero.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.StdFormat">
             <summary>
             Qualifier for the Production Standard field. This is used as a default to the qualifier field in operation details. The valid qualifiers are;
            "HP" - Hours/Piece, "MP" - minutes/piece, "PH" - pieces/hour,
            "PM" - Pieces/Minute, "OH" - Operations/Hour,
            "OM"  - Operations/minute, HR - Fixed Hours.   
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.StdBasis">
             <summary>
             A standard basis is to be used to with standards that are time per piece (HP &amp; MP). The basis is a Divisor. Valid codes are E-Eaches, C=100's, M=1000's, T=10,000.
            This field is used in the formula for calculating the estimated production hours. The operation quantity is divided by the basis value and then multiplied by the standard to result in hours.    
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.OpsPerPart">
            <summary>
            Number of operations per part. This is used in the calculation of the estimated production hours when the StdFormat is "OM" or "OH".  This should not be accessible if StdFormat is not "OM" or "OH".  It MUST BE &gt; 0 if StdFormat is "OM" or "OH".
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.QtyPer">
            <summary>
            Production Quantity per one of the Parent Item. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.QueStartDate">
            <summary>
            Scheduled queue start date. Not directly maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.QueStartHour">
            <summary>
            Scheduled queue start hour offset from the beginning of the work day.  This field is established by scheduling. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.StartDate">
            <summary>
            Scheduled production start date. Not directly maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.StartHour">
            <summary>
            This field is established by scheduling. It represents the "Hour offset from the beginning of the work day" when this operation is scheduled to begin. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.DueDate">
            <summary>
            Scheduled production due date. Not directly maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.DueHour">
            <summary>
            This field is established by scheduling. It represents the "Hour offset from the beginning of the work day" when this operation is scheduled to end.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.MoveDueDate">
            <summary>
            Scheduled move due date. Not directly maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.MoveDueHour">
            <summary>
            Scheduled move due hour offset from the beginning of the work day.  This field is established by scheduling. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ProdLabRate">
            <summary>
            Labor rate used for estimated production labor costs. Default from the OpMaster.ProdLabRate. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SetupLabRate">
            <summary>
            Labor rate for estimated setup labor costs. Default from the OpMaster.SetupLabRate.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ProdBurRate">
            <summary>
            The burden rate to be used for the production time on this operation. (EstProdHrs X ProdBurRate). Default from the WrkCenter.ProdBurRate. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SetupBurRate">
            <summary>
            The burden rate to be used for the Setup time on this operation. (EstSetHours X ProdBurRate). Default from the WrkCenter.SetupBurRate. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.AddedOper">
            <summary>
            This indicates if this is an "added operation". An added operation is one that was not planned on.     
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Machines">
            <summary>
            Defaulted from the WrkCenter.SchMachines field. This is the number of machines that this operation will run on at the same time. Logically thought of as a "Squeeze factor" to scheduling. That is the more machines, the shorter the schedule. This affects how much of the total daily workcenter capacity that the operation will consume. For example; Center has 4 machines, 8 Hours per day and operation 2 machines. This operation would consume 16 hours of capacity per day. So if it had 32 hours of estimated production it would schedule as taking 2 days. NOTE THIS ONLY APPLIES TO PRODUCTION HOURS, TOTAL SETUP HOURS ARE ADDED TO THE SQUEEZED PRODUCTION HOURS TO GET THE NUMBER OF HOURS TO BE SCHEDULED. It is however used to calculate the total setup hours on the operation. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SetUpCrewSize">
            <summary>
            Defaulted from the WrkCenter.SetUpCrewSize field. Its the number of people it physically takes to setup this operation. It is used as a  multiplier in the estimated labor hours calculation.  JobOper.EstSetHours * JobOper.SetUpCrewSize = Estimated Labor hours for the operation. This also affects the estimated labor cost. Est Cost = Est Labor Hours * SetUpLaborRate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ProdCrewSize">
            <summary>
            Defaults from the WrkCenter.ProdCrewSize. The # of people it physically takes to perform the production on this operation per machine that it is run on.  CrewSize * JobOper.EstProdHours = Est. Prod. Labor Hours. Note this can be a fraction for operations that do not require full time attention of an employee. See also SetUpCrewSize
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ProdComplete">
            <summary>
            A flag indicating if the production is complete for this operation. It is updated via Labor Entry. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SetupComplete">
            <summary>
            Flag that indicates if Setup is complete on this operation. This flag is only used when the operation has EstSetupHours &gt; 0.00.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ActProdHours">
             <summary>
             Total Actual Production Hours. A summary of non-setup LaborDtl.BurdenHrs. This includes REWORK hours.  This is maintained via write/delete triggers on the LaborDtl file. Along with JobOper.ActReworkHours it is used to reduce the shop load if the system is configured to remove load by actual hours (JCSyst.RemoveLoad = "H").
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ActProdRwkHours">
             <summary>
             Total Actual Production Rework  Hours. A summary of rework labor transactions (LaborDtl.BurdenHrs) where LaborDtl.LaborType = "P" and Rework = Yes. This number is also included as part of the JobOPer.ActProdHours.  Maintained via write/delete triggers on the LaborDtl file. Along with JobOper.ActProdHours it is used to reduce the shop load if the system is configured to remove load by actual hours (JCSyst.RemoveLoad = "H"). (See the lib/inopload.i code for load remaining logic)
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ActSetupHours">
            <summary>
            Actual setup hours.  A summary of setup (LaborDtl.LaborType = S) labor transactions hours (LaborDtl.Burden). Actual Setup hours reduce the shop load if the system is configured to remove load based on hours (JCSyst.RemoveLoad = "H").
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ActSetupRwkHours">
             <summary>
             Total Actual Setup Rework  Hours. A summary of rework labor transactions (LaborDtl.BurdenHrs) where LaborDtl.LaborType = "S" and Rework = Yes. This number is also included as part of the JobOPer.ActSetupHours.  Maintained via write/delete triggers on the LaborDtl file. Along with JobOper.ActSetHours it is used to reduce the shop load if the system is configured to remove load by actual hours (JCSyst.RemoveLoad = "H"). (See the lib/inopload.i code for load remaining logic)
            
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.QtyCompleted">
             <summary>
             For Non Subcontract operations: A summary of labor transaction detail. (LaborDtl.LaborQty). Labor entry/collection maintains this field.  Only the LaborQty for transactions that are Production labor ( LaborType = P ) and Not rework (LaborDtl.Rework = No) are included in this summary.
            This quantity is used to reduce shop load when the system is configured to reduce load based on quantity completed. (JCSyst.RemoveLoad = Q)
            For Subcontract Operations this field is updated by the Purchased Receipt process. The detail records are in the PartTran file.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SetupPctComplete">
            <summary>
            Setup function percent complete.  Maintained via labor entry.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.EstScrap">
            <summary>
            EstScrap =  a number representing either a scrap qty or a scrap percent depending on the value of EstScrapType field.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.EstScrapType">
            <summary>
            Qualifies the ScrapQty entry as being a fixed quantity or a percentage of run quantity.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SubContract">
            <summary>
            This flags the operation as being a "SubContract" or an "Internal" operation.  This also controls what fields are allowed to be updated for this record. For example,  an internal operation will not have a PartNum.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.IUM">
            <summary>
            Inventory UOM
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.EstUnitCost">
            <summary>
            Estimated Unit Cost for the SubContract operation.  Defaults from the Part table if valid PartNum.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.DaysOut">
            <summary>
            Hours required is calculated as days * 8.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PartNum">
            <summary>
            The PartNum to be shipped to the subcontract. Default the JobHead.PartNum or JobAsmbl.PartNum depending on the JobMtl.AssemblySeq.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Description">
            <summary>
            Description used only for subcontract operations
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorNum">
            <summary>
            The SubContractors VendorNum that ties back to the Vendor master file.  This is only valid for "SubContract"  operations. This field is not directly maintainable, instead its assigned by having the user either enter the "VendorID" and then finding the VendorNum in the Vendor file or by  selection list processing.  This is a mandatory entry for subcontract operations.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PurPoint">
            <summary>
            The Vendors purchase point ID. This field is only for the "Subcontract" operations. Along with the VendorNum is used to tie back to the VendorPP master file.  Use the default Purchase point defined in the Vendor file.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.CommentText">
            <summary>
            Editor widget for Job operation comments. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SchedRelation">
             <summary>
             Indicates the scheduling relationship between this and the preceding  operation. Possible values are "SS" - Start to Start, "FS" Finish to Start or "FF" Finish to Finish.
            A "SS" can start when the preceding operation starts.
            A "FS" starts when the preceding operation is finished.
            A "FF" can finish when the preceding operation finishes.
            These relationships do not span between levels of assemblies. The first operation on an assembly is always treated as being "FS" relationship.
            A "FF" finishes when the preceding operation is finished. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.RunQty">
             <summary>
             The total operation quantity. This is a calculated field.  Calculated as (Assembly Required Qty X QtyPer) + Scrap. The assembly qty is either the JobHead.ProdQty if  JobOPer.AssemblySeq = 0 or (JobAsmbl.RequireQty - JobAsmbl.PullQty) if JobOPer.AssemblySeq &gt; 0.
            This value is refreshed when maintenance is performed on the operation record or an assemblies production qty is changed 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.WIName">
             <summary>
             This field is blank or contains the UserID. When not blank it indicates that the operations schedule has been changed and is considered as being in a "What If" mode.
            This field is also used as part of an index which allows the system to quickly find the operations that need to be reset to "Actual Schedule".
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.WIMachines">
            <summary>
            This is the What-If number of machines that this operation will run on at the same time.  Setup by and for scheduling from the Machines field.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.WIQueStartDate">
            <summary>
            What-if Scheduled queue start date. Not directly maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.WIQueStartHour">
            <summary>
            What-if Scheduled queue start hour offset from the beginning of the work day.  This field is established by scheduling. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.WIStartDate">
            <summary>
            What if Scheduled production start date. Not directly maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.WIStartHour">
            <summary>
            This field is established by scheduling. It represents the What If "Hour offset from the beginning of the work day" when this operation is scheduled to begin. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.WIDueDate">
            <summary>
            What If Scheduled production due date. Not directly maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.WIDueHour">
            <summary>
            This field is established by scheduling. It represents the "Hour offset from the beginning of the work day" when this operation is scheduled to end.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.WIMoveDueDate">
            <summary>
            What-If Scheduled move due date. Not directly maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.WIMoveDueHour">
            <summary>
            What-if Scheduled move due hour offset from the beginning of the work day.  This field is established by scheduling. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.WIHoursPerMachine">
            <summary>
            The Number of Hours per machine per day that this operations "What If" schedule is based on.  This is for "Inbetween" days, not first or last days.  It is a copy of WrkCenter.HoursPerMachine field at the time of scheduling.  Used in logic of maintaining ShopLoad records. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.WILoadDate">
            <summary>
            Date at which the operations current outstanding "What-If" load starts at.  Updated by the JobOper write trigger. (See LoadDate)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.WILoadHour">
            <summary>
            "Hour offset from the beginning of the work day" for the operations outstanding "What-If"  load. Related to WILoadDate.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ActBurCost">
            <summary>
            Total Burden cost to date. This is update via the LaborDtl\Write.p trigger procedure. It includes ALL burden costs (Setup, Production and Rework)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ActLabCost">
             <summary>
             FOR NON-SUBCONTRACT OPERATIONS: Total of "ALL" labor costs to date. This includes Setup, Production and Rework. Updated via the LaborDtl.Write.p trigger.
            FOR SUBCONTRACT OPERATIONS: The Total Cost, updated via the receipt process.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ReworkBurCost">
            <summary>
            Total Rework Burden cost todate. This value is also included in the ActBurCost total. It includes both setup &amp; production rework. Updated via LaborDtl\Write.P trigger. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ReworkLabCost">
            <summary>
            Total Rework Labor cost to date. This value is also included in the ActLabCost field. This includes both Setup &amp; Production. Updated via the LaborDtl\Write.p trigger.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.MiscAmt">
             <summary>
             A total additional charge that is incurred when purchasing this service. Ex(Lot,Setup,Handling,etc...).
            Defaulted from VendPart.MiscAmt. This is NOT part of the a Unit Cost. It is NOT consider in the logic of using Minimum Cost. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.HoursPerMachine">
            <summary>
            The Number of Hours per machine per day that this operations "actual" schedule is based on.  This is for "Inbetween" days, not first or last days.  It is a copy of WrkCenter.HoursPerMachine field at the time of scheduling.  Used in logic of maintaining the ShopLoad records. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.LoadDate">
             <summary>
             Date at which the operations current outstanding load starts at.
            Ex: Op schedule is 2/1/97 - 2/10/97, initially LoadDate = 2/1/97. As load is relieved through labor processing the LoadDate moves forward accordingly. When 1/2 completed the LoadDate would be 2/5/97. This field is primarily used by the Scheduling Board to calculate the graphical image of outstanding load.  Updated by the JobOper write trigger. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.LoadHour">
            <summary>
            "Hour offset from the beginning of the work day" for the operations outstanding load. Related to LoadDate.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ReloadNum">
            <summary>
            Internally used field to prevent redundant read of JobOper during execution of "Reloader" program. (See WrkCenter.ReloadNum)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SndAlrtCmpl">
            <summary>
            Controls if an alert is to be sent when this JobOper is completed.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.RcvInspectionReq">
            <summary>
            Indicates if  Inspection is required when items are received to this JobOper (subcontract only). Inspection may also be enforced if the related PartClass, Vendor, PODetail have their "RcvInspectionReq" fields set to Yes.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.JobEngineered">
             <summary>
             Identical to JobHead.JobEngineered.  ShopLoad capacity is only allocated to Jobs where JobEngineered = YES.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.EstSetHoursPerMch">
             <summary>
             The estimated set up hours per machine.
            Default from OpStd.SetupHours.  Used to calculate JobOper.EstSetupHours.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.RevisionNum">
             <summary>
             Part Revision number.
            Pertains to subcontracting operations only.   An optional field.   Related JobAsmbl.RevisionNum is used as the default. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.AutoReceiptDate">
            <summary>
            Currently not used. Prep for future development.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.LastLaborDate">
            <summary>
            The labor date of the last labor transaction that was posted to this operation.  Used by the JobOper write trigger Auto Receieve logic.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.CallNum">
            <summary>
            The service call that this operation belongs to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.CallLine">
            <summary>
            The Service Call Line that this operation relates to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.LaborRate">
            <summary>
            Labor rate used for  time on an operation.  Time per hour per technician. in base currency.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.BillableLaborRate">
            <summary>
            Billable Labor rate used for  time on a service.  Time per hour per technician. in base currency. This field considers the percentage coverage of a warranty or contract.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.DocLaborRate">
            <summary>
            Labor rate used for  time on a service.  Time per hour per technician. In Customer currency. Does not consider warranty or contract
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.DocBillableLaborRate">
            <summary>
            Billable Labor rate used for  time on a service.  Time per hour per technician. In Customer currency. considers warranty or contract
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Billable">
            <summary>
            FS - Is this a billable operation.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.UnitPrice">
            <summary>
            FS - Unit Price for the subcontract in base currency. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.BillableUnitPrice">
            <summary>
            FS - Billable Unit Price for the subcontract in base currency. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.DocBillableUnitPrice">
            <summary>
            FS - Billable Price per unit for the subcontract in customers currency. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.DocUnitPrice">
            <summary>
            FS - Unit Price for the for the Subcontract in Customer currency. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.LaborEntryMethod">
            <summary>
            Indicates the Method for Labor Entry.  Can be "T" - Time and Quantity, "Q" - Quantity Only (Time is estimated), "B" - Backflush or "X" - Time - Backflush Qty.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PricePerCode">
            <summary>
            Indicates the pricing per quantity for this part. It can be "E" = per each,"C" = per hundred,  "M" = per thousand. Maintainable only via Part Maintenance. The initial default is "E". 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.FAQty">
            <summary>
            The quantity requested for first article inspection.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.QtyStagedToDate">
            <summary>
            The "to date" quantity that has been moved to the input Warehouse/Bin of the subsequent operations ResourceGroup/Resource input Warehouse/Bin.  This is NOT A balance.  It is a "to date" value.  It is not reduced as it is consumed.  Used in calculation of "Outstanding" WIP in the Request Material/WIP program (ame30-dg.w).  Only updated if the Advanced Material Mgmt module is installed and only by transactions which "move" the WIP material in/out of the staging area (Issues, Returns).  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.RFQNeeded">
            <summary>
            A flag to indicate that this job operation requires an RFQ.  If it does require an RFQ, the user must enter the number of vendor quotes that are required.  This only applies to subcontract operations.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.RFQVendQuotes">
            <summary>
            The number of vendor quotes that are required for this job subcontract operation.  Can be zero if RFQ(s) are not required.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.RFQNum">
            <summary>
            RFQ number that the item is linked to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.RFQLine">
            <summary>
            The line number of this detail record on the RFQ. This number uniquely identifies the record within the RFQ. The number is not directly maintainable, it's assigned by the system when records are created. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.RFQStat">
             <summary>
             RFQ Status.
            W= Waiting, A = Accepted, R = Requested, C = Received
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SetupGroup">
            <summary>
            Used to group operation to save on setups.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.RestoreFlag">
            <summary>
            Used to determine if this record was modified during the last What-If Schedule Restore.  The contents are Date-Time.  Example: "04/11/02-34221".
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.AnalysisCode">
            <summary>
            Analysis Code
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PrimarySetupOpDtl">
             <summary>
             Identifies the primary JobOpDtl to be used for setup.  The setup time for the operation is determined on the JobOpDtl.
            If &lt;&gt; 0, must identify a valid JobOpDtl.  The JobOpDtl needs to have a RequiredFor = S or B.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PrimaryProdOpDtl">
             <summary>
             Identifies the primary JobOpDtl to be used for production.  The production run time for the operation is determined on the JobOpDtl.
            If &lt;&gt; 0, must identify a valid JobOpDtl.  The JobOpDtl needs to have a RequiredFor = P or B.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.OpDesc">
            <summary>
            Operation Description.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.KitDate">
            <summary>
            Kit Date. Not directly maintanable. Updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.GlbRFQ">
            <summary>
            Global RFQ flag.  Used in Consolidated Purchasing.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.BookedUnitCost">
            <summary>
            Booked Unit Cost
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.RecalcExpProdYld">
             <summary>
             Initially defaulted to false. This flag is set to true at the time JobOper.ProdComplete is set to true if JobHead.ProductionYield = true and OpMaster. PrdYldRecalcExpected = true and the actual completed qty for the operation vs. the expected completion qty is out of variance based on the under percentage set in OpMaster. This flag is used by the production yield recalculation logic to determine if recalculation is required for a job.
            This field is maintained by the system only.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.UserMapData">
            <summary>
            Character field that will contain the coma separated data that has been returned from Microsoft Projects. This data will be retained exactly as it was returned from MSP. This field will NOT be editable within Vantage.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.RoughCutSched">
            <summary>
            When true this would signify that this operation was rough cut scheduled - meaning the operation would have start and end dates but no supporting resourcetimeused or shopload records.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SchedComment">
            <summary>
            Scheduling Comments
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt1BillableLaborRate">
            <summary>
            Reporting currency value of this field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt2BillableLaborRate">
            <summary>
            Reporting currency value of this field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt3BillableLaborRate">
            <summary>
            Reporting currency value of this field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt1BillableUnitPrice">
            <summary>
            Reporting currency value of this field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt2BillableUnitPrice">
            <summary>
            Reporting currency value of this field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt3BillableUnitPrice">
            <summary>
            Reporting currency value of this field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt1LaborRate">
            <summary>
            Reporting currency value of this field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt2LaborRate">
            <summary>
            Reporting currency value of this field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt3LaborRate">
            <summary>
            Reporting currency value of this field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt1UnitPrice">
            <summary>
            Reporting currency value of this field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt2UnitPrice">
            <summary>
            Reporting currency value of this field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt3UnitPrice">
            <summary>
            Reporting currency value of this field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SNRequiredOpr">
            <summary>
            Indicates whether serial numbers are required form this operation. When true the system will prompt in labor entry processes for the serial numbers that have been completed on this operation.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SNRequiredSubConShip">
            <summary>
            Indicates whether serial numbers are required on subcontract ship for a subcontract operation.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Weight">
            <summary>
            Operation Weight defaulted from Part Master.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.WeightUOM">
            <summary>
            Operation Weight UOM defaulted from Part Master.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SendAheadType">
             <summary>
             Determines the scheduling offset for the secondary start-to-start operation, offset which will be either
            
            calculated (or entered) on the primary operation. The offset time can be calculated by pieces, percentage 
            
            of the operation duration or entered manually by the user on the primary operation. The secondary operation 
            
            will scheduled to start after the offset period.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SendAheadOffset">
             <summary>
             Scheduling offset for the secondary start-to-start operation. The offset time can be calculated by pieces,
            
            percentage of the operation duration or entered manually by the user on the primary operation. The 
            
            secondary operation will scheduled to start after the offset period.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PrjRoleList">
            <summary>
            Delimited list of PrjRoleCd codes that are allowed for this operation.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.TearDwnEndDate">
            <summary>
            Scheduled tear down start date. The start date would be the production end date. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.TearDwnEndHour">
            <summary>
            Scheduled tear down due hour offset from the end of the prodution time.  This field is established by scheduling. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.WITearDwnEndDate">
            <summary>
            Scheduled tear down start date. The start date would be the production end date. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.WITearDwnEndHour">
            <summary>
            Scheduled tear down due hour offset from the end of the prodution time.  This field is established by scheduling. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.UseAllRoles">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.AssetPartNum">
            <summary>
            The PartNum for the asset. This should be disabled for a service call job, in which case the asset information would be transferred from the service call line when an operation is created for the job.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SerialNumber">
            <summary>
            Serial number of the asset.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ActualStartDate">
            <summary>
            ActualStartDate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ActualStartHour">
            <summary>
            ActualStartHour
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ActualEndDate">
            <summary>
            ActualEndDate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ActualEndHour">
            <summary>
            ActualEndHour
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.FSJobStatus">
            <summary>
            FSJobStatus
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Instructions">
            <summary>
            Instructions
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ProdUOM">
            <summary>
            ProdUOM
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.GeneralPlanInfo">
            <summary>
            GeneralPlanInfo
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.EstStdDescription">
            <summary>
            EstStdDescription
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.JDFOpCompleted">
            <summary>
            JDFOpCompleted
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.RemovedfromPlan">
            <summary>
            RemovedfromPlan
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.EstStdType">
            <summary>
            EstStdType
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ExternalMES">
            <summary>
            Indicates the record is used with Machine MES
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PctReg">
            <summary>
            PctReg
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SetupMaterial">
            <summary>
            SetupMaterial
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.MaterialColorRating">
            <summary>
            MaterialColorRating
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.MiscInfo1">
            <summary>
            MiscInfo1
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.MiscInfo2">
            <summary>
            MiscInfo2
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SetupURL">
            <summary>
            SetupURL
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ExpPctUp">
            <summary>
            ExpPctUp
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ExpCycTm">
            <summary>
            ExpCycTm
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ExpGood">
            <summary>
            ExpGood
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.NonProdLimit">
            <summary>
            NonProdLimit
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.AutoSpcEnable">
            <summary>
            AutoSpcEnable
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.AutoSpcPeriod">
            <summary>
            AutoSpcPeriod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PartQualEnable">
            <summary>
            PartQualEnable
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.AutoSpcSubgroup">
            <summary>
            AutoSpcSubgroup
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.MobileOperation">
            <summary>
            MobileOperation
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ReWork">
            <summary>
            ReWork
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.RequestMove">
            <summary>
            RequestMove
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ContractID">
            <summary>
            ContractID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PrinterID">
            <summary>
            PrinterID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.LastPrintedDate">
            <summary>
            LastPrintedDate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.LastPCIDPrinted">
            <summary>
            LastPCIDPrinted
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.CurrentPkgCode">
            <summary>
            CurrentPkgCode
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ExternalMESSyncRequired">
            <summary>
            This field determines if the record needs to be synchronized to the Machine MES. Changes to the record will automatically set the value to true.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ExternalMESLastSync">
            <summary>
            The date and time the record was last synched to Machine MES.  The field is maintained by the Export Mattec process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.QtyPerCycle">
            <summary>
            Number of pieces created per cycle if Cycle/Minute or Cycle/Hour is selected
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ActSubCost">
            <summary>
            For SubContract Operations equals to the ActLaborCost
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.AutoReceive">
            <summary>
            Auto receive flag
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.CurrencyCode">
            <summary>
            Currency Code of the related record
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.CurrencySwitch">
            <summary>
            The currency switch flag.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.CurrSymbol">
            <summary>
            A symbol that identifies the currency. Used on Forms and displays
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.DisplayExtPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.DisplayServAmt">
            <summary>
            The display service amount.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.DisplayServLaborRate">
            <summary>
            The display service labor rate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.DisplayUnitPrice">
            <summary>
            Calculated display unit price
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.DocDisplayExtPrice">
            <summary>
            The document display extended price
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.DocDisplayServAmt">
            <summary>
            The converted display service amount.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.DocDisplayServLaborRate">
            <summary>
            The converted display service labor rate.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.DocDisplayUnitPrice">
            <summary>
            The document display unit price
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.DspIUM">
            <summary>
            Display IUM field (readonly)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.EnableAutoReceive">
            <summary>
            Field to determine to enable or disable autoreceive.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.EnableSndAlrtCmpl">
            <summary>
            Field to determine if the the sndalrtcmpl field should be enabled or disabled.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.EnableSNReqSubConShip">
            <summary>
            This external field is used as a flag to determine when to enable/disable the SNRequiredSubConShip field on UI screen.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.EnableSNRequiredOpr">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.EstBurdenCost">
            <summary>
            For non subconctract operations JobOper.EstSetHours * JobOper.SetupBurRate + JobOper.EstProdHours * JobOper.ProdBurRate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.EstLabHours">
            <summary>
            The calculated estimated labor hours
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.EstLaborCost">
            <summary>
            For non subcontract operations : JobOper.EstSetHours * JobOper.SetupCrewSize * JobOper.SetupLabRate +JobOper.EstProdHours * JobOper.ProdCrewSize * JobOper.ProdLabRate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.EstSubCost">
            <summary>
            For SubContract operations: JobOper.EstUnitCost * JobOper.RunQty
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.FinalOpr">
            <summary>
            Final operation
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.IsBaseCurrency">
            <summary>
            IsBaseCurrency
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.LaborEntryMethodDesc">
            <summary>
            This is the description of the Method for Labor Entry.  Can be "Time and Quantity" for 'T', "Quantity Only" for 'Q', "Backflush" for 'B' or "Time and Backflush Qty" for 'X'
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.LoadHrs">
            <summary>
            The total Load Hours calculated by summing the SetUpLoadHrs + ProdLoadHrs.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.OpStdDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PrimaryProdOpDtlDesc">
            <summary>
            Description is initially created when the JobOpDtl is created.   If the JobOpDtl is created from a Resource it will be the Resource.Description, if it's created from an ResourceGroup it will be the ResourceGroup.Description.  Once set it is not changed by the system.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PrimaryResourceGrpDesc">
            <summary>
            Primary Resource Group Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PrimaryResourceGrpID">
            <summary>
            The Resource Group ID of the primary production operation detail.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PrimarySetupOpDtlDesc">
            <summary>
            Description is initially created when the JobOpDtl is created.   If the JobOpDtl is created from a Resource it will be the Resource.Description, if it's created from an ResourceGroup it will be the ResourceGroup.Description.  Once set it is not changed by the system.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ProductionQty">
            <summary>
            The calculated production quantity
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.RefreshResources">
            <summary>
            Indicates if the scheduling resources should be refreshed when the op code changes.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt1DisplayExtPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt1DisplayServAmt">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt1DisplayServLaborRate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt1DisplayUnitPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt2DisplayExtPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt2DisplayServAmt">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt2DisplayServLaborRate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt2DisplayUnitPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt3DisplayExtPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt3DisplayServAmt">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt3DisplayServLaborRate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.Rpt3DisplayUnitPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ScrapQty">
            <summary>
            The calculated scrap quantity
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ShowStatusIcon">
            <summary>
            Contains the value of which icon to display in tree for joboper
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.StdBasisDescription">
            <summary>
            StdBasis Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.StdFormatDescription">
            <summary>
            StdFormat Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.ActScrapQty">
            <summary>
            The sum of LaborDtl ScrapQty for this operation.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.AllowJobCosts">
            <summary>
            Flag to allow/disallow the user to see the Job Costs.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.AnalysisCdDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.AssemblySeqDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.CallLineLineDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.JobNumPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.OpCodeOpDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PartNumSellingFactor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PartNumPricePerCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PartNumTrackDimension">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PartNumIUM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PartNumSalesUM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PartNumPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PartNumTrackSerialNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.PartNumTrackLots">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.RFQLineLineDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SetupGroupDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorNumTermsCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorNumDefaultFOB">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorNumName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorNumCountry">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorNumAddress2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorNumCurrencyCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorNumZIP">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorNumState">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorNumAddress1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorNumAddress3">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorNumCity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorNumVendorID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorPPZip">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorPPCity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorPPAddress2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorPPPrimPCon">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorPPAddress1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorPPCountry">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorPPState">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorPPName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.VendorPPAddress3">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperAttchRow.Company">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperAttchRow.JobNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperAttchRow.AssemblySeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperAttchRow.OprSeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperAttchRow.DrawingSeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperAttchRow.XFileRefNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperAttchRow.SysRevID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperAttchRow.SysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperAttchRow.ForeignSysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperAttchRow.DrawDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperAttchRow.FileName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperAttchRow.PDMDocID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperAttchRow.DocTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperAttchRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperAttchRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperInspRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperInspRow.JobNum">
            <summary>
            Job Number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperInspRow.AssemblySeq">
            <summary>
            Assembly sequence number that this material is associated with.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperInspRow.OprSeq">
            <summary>
            A sequence number which uniquely identifies the operation record within the Job.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperInspRow.PlanSeq">
            <summary>
            A sequence number that uniquely identifies the JobOperInsp record within the JobNum
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperInspRow.InspPlanPartNum">
            <summary>
            The inspection plan part number (configurator part number).
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperInspRow.InspPlanRevNum">
            <summary>
            The inspection plan revision number (configurator revision number).
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperInspRow.SpecID">
            <summary>
            The specification ID.  Must be valid in the SpecHed table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperInspRow.SpecRevNum">
            <summary>
            The specification revision number.  Must be valid in the SpecRev table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperInspRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperInspRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperInspRow.SpecHedDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperInspRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperInspRow.InspPlanDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperInspRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperInspRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.Company">
            <summary>
            Company
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.JobNum">
            <summary>
            JobNum
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.AssemblySeq">
            <summary>
            AssemblySeq
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.OprSeq">
            <summary>
            OprSeq
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.MachParamSeq">
            <summary>
            MachParamSeq
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.RequestCode">
            <summary>
            RequestCode
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.MachineNum">
            <summary>
            MachineNum
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.ToolNum">
            <summary>
            ToolNum
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.PartNum">
            <summary>
            PartNum
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.ParamNum">
            <summary>
            ParamNum
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.ParamUpperLimit">
            <summary>
            ParamUpperLimit
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.ParamNominalValue">
            <summary>
            ParamNominalValue
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.ParamLowerLimit">
            <summary>
            ParamLowerLimit
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.ParamDelayValue">
            <summary>
            ParamDelayValue
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.SpecEnable">
            <summary>
            SpecEnable
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.SpecControlAlarm">
            <summary>
            SpecControlAlarm
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.SpecRunAlarm">
            <summary>
            SpecRunAlarm
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.ProcSpecAlarm">
            <summary>
            ProcSpecAlarm
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.ProcControlAlarm">
            <summary>
            ProcControlAlarm
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.PartQualSpecEnable">
            <summary>
            PartQualSpecEnable
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.PartQualControlEnable">
            <summary>
            PartQualControlEnable
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.CreatedBy">
            <summary>
            CreatedBy
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.CreatedOn">
            <summary>
            CreatedOn
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.ChangedBy">
            <summary>
            ChangedBy
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.ChangedOn">
            <summary>
            ChangedOn
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.SysRevID">
            <summary>
            SysRevID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.SysRowID">
            <summary>
            SysRowID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperMachParamRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.JobNum">
            <summary>
            Job Number.  Associates the record back to the JobHead.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.AssemblySeq">
            <summary>
            A sequence number that uniquely identifies the JobAsmbl record within the JobNum.  Assigned by the system.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.OprSeq">
            <summary>
            A sequence number which uniquely identifies the JobOper record within the JobAsmbl.   System assigned.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.OpDtlSeq">
            <summary>
            Uniquely identifies an OpDtl.  System assigned.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.SetupOrProd">
            <summary>
            Identifies which part of the production, setup or production, the resource is required for.   Valid values are "S", indicating the resource is RequiredFor the Setup phase of this operation, "P" for Production phase, or "B" meaning Both setup and production phase.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.CapabilityID">
            <summary>
            The user can select the capability the operation is to perform.  The system will select the resource.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ResourceGrpID">
            <summary>
            The user can select a Resource Group for the operation to be performed on.  The system will select the actual resource.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ResourceID">
            <summary>
            Descriptive code assigned by the user to uniquely identify the Resource for this operation to be performed on.  If a resource was not explicitly assigned this field is blank.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ConcurrentCapacity">
            <summary>
            Concurrent Capacity is a constraint that prevents a Resource from being overloaded because it has, at a given time, this much capacity.  For example, a Resource has 4 racks, and they can be reused, but once they've been selected for an operation, they're tied up until the operation is complete.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.DailyProdRate">
             <summary>
             The Daily Prod rate contains the rate required to make 1. This is multiplied with the mfg qty of the job to get the total production qty. This total is then compared to the resource's daily production quantity  and with any usage stored in the Shopload record.   Once the production limit for a resource has been reached, the Resource has been consumed for that day.
            
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.NumResources">
            <summary>
            This is the number of resources the operation can run on.  If multiple resources can perform the required Capability, then up to this many will be employed.  This determines the number of setups the system will allow for the operation.  However, the number of setups cannot exceed the number of operations.  The idea being that once a part is on a machine you will complete the operation on that resource.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.EstSetHours">
            <summary>
            Total estimated set up hours.  Calculated as EstSetHoursPerMch * Machines.  It is set to zero if operation qty is zero.  This is maintained via the JobOper write trigger.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.EstProdHours">
             <summary>
             The estimated Production run hours for internal operations (JobOper.Subcontract = No) . This is not directly maintainable. It exists so that it will be easier to display than always having to  recalculate it  when it is needed.  It is calculated using the ProdStandard, StdFormat, StdBasis, OpsPerPart, QtyPer, EstScrap and EstScrapType.
            FORMULAS:
            If StdFormat = "HR" then EstProdHours = ProdStandard. 
            If StdFormat = "PH" then (JobOper.RunQty / Std).
            If StdFormat = "PM" then (JobOper.RunQty / Std ) / 60.
            If StdFormat = "OH" then (JobOper.RunQty/OpsPerPart) / Std.
            If StdFormat = "OM" then ((JobOper.RunQty/OpsPerPart) / Std) / 60.
            If StdFormat = "HP" then (JobOPer.RunQty/Basis) X Std.
            If StdFormat = "MP" then ((JobOper.RunQty/Basis) X Std) / 60.   
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ProdStandard">
             <summary>
             The production standard for the operation.  It can be expressed as Hours, Minutes per piece, Pieces per Time, Operations per Minute or Operations per hour. This along with the StdFormat, StdBasis, OpsPer and   fields are used to calculate the operations estimated production hours.  A value can be defaulted from the OpStd master.
            NOTE: The ProdStandard can only be zero if the EstSetHours are greater than zero.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.StdFormat">
             <summary>
             Qualifier for the Production Standard field. This is used as a default to the qualifier field in operation details. The valid qualifiers are;
            "HP" - Hours/Piece, "MP" - minutes/piece, "PH" - pieces/hour,
            "PM" - Pieces/Minute, "OH" - Operations/Hour,
            "OM"  - Operations/minute, HR - Fixed Hours.   
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.StdBasis">
             <summary>
             A standard basis is to be used to with standards that are time per piece (HP &amp; MP). The basis is a Divisor. Valid codes are E-Eaches, C=100's, M=1000's, T=10,000.
            This field is used in the formula for calculating the estimated production hours. The operation quantity is divided by the basis value and then multiplied by the standard to result in hours.    
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.OpsPerPart">
            <summary>
            Number of operations per part. This is used in the calculation of the estimated production hours when the StdFormat is "OM" or "OH".  This should not be accessible if StdFormat is not "OM" or "OH".  It MUST BE &gt; 0 if StdFormat is "OM" or "OH".
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ProdLabRate">
            <summary>
            Labor rate used for estimated production labor costs. Default from the OpMasDtl.ProdLabRate. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.SetupLabRate">
            <summary>
            Labor rate for estimated setup labor costs. Default from the OpMaster.SetupLabRate.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ProdBurRate">
            <summary>
            The burden rate to be used for the production time on this operation. (EstProdHrs X ProdBurRate). Default from the WrkCenter.ProdBurRate. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.SetupBurRate">
            <summary>
            The burden rate to be used for the Setup time on this operation. (EstSetHours X ProdBurRate). Default from the WrkCenter.SetupBurRate. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ProdComplete">
            <summary>
            A flag indicating if the production is complete for this operation. It is updated via Labor Entry. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.SetupComplete">
            <summary>
            Flag that indicates if Setup is complete on this operation. This flag is only used when the operation has EstSetupHours &gt; 0.00.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ActProdHours">
             <summary>
             Total Actual Production Hours. A summary of non-setup LaborDtl.BurdenHrs. This includes REWORK hours.  This is maintained via write/delete triggers on the LaborDtl file. Along with JobOper.ActReworkHours it is used to reduce the shop load if the system is configured to remove load by actual hours (JCSyst.RemoveLoad = "H").
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ActProdRwkHours">
             <summary>
             Total Actual Production Rework  Hours. A summary of rework labor transactions (LaborDtl.BurdenHrs) where LaborDtl.LaborType = "P" and Rework = Yes. This number is also included as part of the JobOPer.ActProdHours.  Maintained via write/delete triggers on the LaborDtl file. Along with JobOper.ActProdHours it is used to reduce the shop load if the system is configured to remove load by actual hours (JCSyst.RemoveLoad = "H"). (See the lib/inopload.i code for load remaining logic)
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ActSetupHours">
            <summary>
            Actual setup hours.  A summary of setup (LaborDtl.LaborType = S) labor transactions hours (LaborDtl.Burden). Actual Setup hours reduce the shop load if the system is configured to remove load based on hours (JCSyst.RemoveLoad = "H").
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ActSetupRwkHours">
             <summary>
             Total Actual Setup Rework  Hours. A summary of rework labor transactions (LaborDtl.BurdenHrs) where LaborDtl.LaborType = "S" and Rework = Yes. This number is also included as part of the JobOPer.ActSetupHours.  Maintained via write/delete triggers on the LaborDtl file. Along with JobOper.ActSetHours it is used to reduce the shop load if the system is configured to remove load by actual hours (JCSyst.RemoveLoad = "H"). (See the lib/inopload.i code for load remaining logic)
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.SetupPctComplete">
            <summary>
            Setup function percent complete.  Maintained via labor entry.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ActBurCost">
            <summary>
            Total Burden cost to date. This is update via the LaborDtl\Write.p trigger procedure. It includes ALL burden costs (Setup, Production and Rework)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ActLabCost">
             <summary>
             Total of ALL labor costs to date. This includes Setup, Production and Rework. Updated via the LaborDtl.Write.p trigger.
            The Total Cost, updated via the receipt process.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ReworkBurCost">
            <summary>
            Total Rework Burden cost todate. This value is also included in the ActBurCost total. It includes both setup &amp; production rework. Updated via LaborDtl\Write.P trigger. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ReworkLabCost">
            <summary>
            Total Rework Labor cost to date. This value is also included in the ActLabCost field. This includes both Setup and Production. Updated via the LaborDtl\Write.p trigger.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ResourceLock">
            <summary>
            Resource Lock.  If the user explicitly selected a Resource for the JobOpDtl, when they accept the scheduling changes, the WISchedResource will be stored as the explicit Resource.  Else the WISchedResource will become the SchedResource and the WISchedResourceGrp will become the ResourceGroup.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.SysCreateDate">
            <summary>
            System maintained.  Date the JobOpDtl record was added to the database.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.SysCreateTime">
             <summary>
             Time in seconds since midnight that the system created the record.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.OpDtlDesc">
            <summary>
            Description is initially created when the JobOpDtl is created.   If the JobOpDtl is created from a Resource it will be the Resource.Description, if it's created from an ResourceGroup it will be the ResourceGroup.Description.  Once set it is not changed by the system.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.EstSetHoursPerMch">
             <summary>
             The estimated set up hours per machine.
            Default from OpStd.SetupHours.  Used to calculate JobOper.EstSetupHours.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.OverrideRates">
            <summary>
            If yes then the user has overridden the rates that were on the  record when it was inititally created.  The initial rates came from the master files.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ProdCrewSize">
            <summary>
            Duplicated from JobOper.SetupCrewSize. The # of people it physically takes to perform the production on this operation per machine that it is run on.  CrewSize * JobOper.EstProdHours = Est. Prod. Labor Hours. Note this can be a fraction for operations that do not require full time attention of an employee. See also SetUpCrewSize
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.SetUpCrewSize">
            <summary>
            Duplicated from JobOper.SetupCrewSize. Its the number of people it physically takes to setup this operation. It is used as a  multiplier in the estimated labor hours calculation.  JobOper.EstSetHours * JobOper.SetUpCrewSize = Estimated Labor hours for the operation. This also affects the estimated labor cost. Est Cost = Est Labor Hours * SetUpLaborRate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.RemovedFromPlan">
            <summary>
            RemovedFromPlan
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.IsPrimaryProd">
            <summary>
            IsPrimaryProd
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.IsPrimarySetup">
            <summary>
            IsPrimarySetup
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.AutoSystemAdded">
            <summary>
            AutoSystemAdded
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.MobileAllocatedResource">
            <summary>
            MobileAllocatedResource
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.QtyPerCycle">
            <summary>
            Number of pieces created per cycle if Cycle/Minute or Cycle/Hour is selected
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.CapabilityDesc">
            <summary>
            Capability Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.OperOpStdID">
            <summary>
            The Operation Standard ID stored in JobOper.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.PrimaryProd">
            <summary>
            Indicates if primary production operation.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.PrimarySetup">
            <summary>
            Indicates if primary setup operation.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ResourceGrpDesc">
            <summary>
            Resource Group Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.SchedResourceDesc">
            <summary>
            Scheduled Resource Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.SchedResourceGrpDesc">
            <summary>
            Scheduled Resource Group Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.SubContract">
            <summary>
            flag for subcontract
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.WISchedResourceDesc">
            <summary>
            What-if Scheduled Resource Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.WISchedResourceGrpDesc">
            <summary>
            What-if Scheduled Resource Group Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ResourceDesc">
            <summary>
            Resource Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.AssemblySeqDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.CapabilityIDDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.JobNumPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ResourceGrpIDDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.ResourceIDDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOpDtlRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobResourcesRow.Company">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobResourcesRow.JobNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobResourcesRow.AssemblySeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobResourcesRow.OprSeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobResourcesRow.OpDtlSeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobResourcesRow.WhatIf">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobResourcesRow.AllocNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobResourcesRow.ResourceGrpID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobResourcesRow.ResourceID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobResourcesRow.ResourceDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobResourcesRow.CalendarName">
            <summary>
            Calendar Name
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobResourcesRow.SysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobResourcesRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobResourcesRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictionRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictionRow.JobNum">
            <summary>
            Job Number
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictionRow.AssemblySeq">
            <summary>
            Assembly Sequence # that this Operation is associated with.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictionRow.OprSeq">
            <summary>
            A sequence number which uniquely identifies the operation record within the Job/lot/level. The sequence can be system generated or assigned by user. System generated numbers are determined by reading last JobOper for the job/lot/level and then figures out what the next number that is divisible by 10. If this number is within 3 of the last Number on file it will be bumped up another 10. This keeps a minimum of 2 available sequences between records. For example if last = 18 Next would be 30, If last = 17  next = 20. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictionRow.RestrictionTypeID">
            <summary>
            Restriction Type identification.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictionRow.OpCode">
            <summary>
            Descriptive code assigned by user which uniquely identifies a Operation master record.  Can't be blank. This is used as a foreign key in other files and may be used in displays/reports where space for the full description is limited.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictionRow.Manual">
            <summary>
            When true then no roll-up will be calculated for this Restriction type. Compliance date is set when this flag is set. D/I Roll-Up radio Button will be disabled.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictionRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictionRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictionRow.Weight">
            <summary>
            Read-only. Yes to display when the part has no net weight or when one or more of the selected has no weight.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictionRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictionRow.AssemblySeqDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictionRow.JobNumPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictionRow.RestrictionDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictionRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictionRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.JobNum">
            <summary>
            Job Number
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.AssemblySeq">
            <summary>
            Assembly Sequence # that this Operation is associated with.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.OprSeq">
            <summary>
            A sequence number which uniquely identifies the operation record within the Job/lot/level. The sequence can be system generated or assigned by user. System generated numbers are determined by reading last JobOper for the job/lot/level and then figures out what the next number that is divisible by 10. If this number is within 3 of the last Number on file it will be bumped up another 10. This keeps a minimum of 2 available sequences between records. For example if last = 18 Next would be 30, If last = 17  next = 20. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.RestrictionTypeID">
            <summary>
            Restriction Type identification.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.SubstanceID">
            <summary>
            Substance identification.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.Weight">
            <summary>
            Default weight of the substance per primary part of UOM
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.WeightUOM">
            <summary>
            By default the primary UOM of the part.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.Manual">
            <summary>
            When true then weight is disregarded in compliance roll-up.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.ExemptDate">
            <summary>
            The date when exempt status for this substance expires.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.ExemptCertificate">
            <summary>
            Optional. Exemption certificate.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.Exempt">
            <summary>
            Read-only. True when exempt date &gt;= today.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.OpCode">
            <summary>
            Descriptive code assigned by user which uniquely identifies a Operation master record.  Can't be blank. This is used as a foreign key in other files and may be used in displays/reports where space for the full description is limited.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.AssemblySeqDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.JobNumPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.RestrictionDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.SubstanceDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobOperRestrictSubstRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.JobNum">
            <summary>
            Job Number.  Associates the assembly record back its parent JobHead record.  Not directly maintainable.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.AssemblySeq">
            <summary>
            A sequence number that uniquely identifies the JobAsmbl record within the JobNum.  This can be user assigned or assigned by the system.  The system assigns the next available number during add mode if its left blank.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.RestrictionTypeID">
            <summary>
            Restriction Type identification.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.PartNum">
            <summary>
            Part number for this assembly.  Cannot be blank.  Does not have to be valid in the Part master file.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.Manual">
            <summary>
            When true then no roll-up will be calculated for this Restriction type. Compliance date is set when this flag is set. D/I Roll-Up radio Button will be disabled.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.RollupType">
            <summary>
            Enabled when manual flag is unchecked and company configuration flag for allow direct roll-up is enabled. Default to Indirect Roll-Up.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.Compliance">
            <summary>
            Displays one of the compliance statuses: 1. Not applicable (Yellow) (when no substances are selected) 2. Non compliant (Red) (one or more substances are selected but roll-up has not been executed or roll-up has failed) 3. Compliant (Green) (one or more substances are selected and roll-up was successful) 4. Exempt (Yellow) (when all substances are exempt ? verify exempt date)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.ComplianceDate">
            <summary>
            Set when Manual flag is checked or after compliance roll-up is successful. Cleared Manual flag is unchecked or after compliance roll-up is unsuccessful.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.LastRollUp">
            <summary>
            Set after compliance roll-up
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.BuiltCompliance">
            <summary>
            Displays one of the built compliance statuses: 1. Not applicable (Yellow) (when no substances are selected) 2. Non compliant (Red) (one or more substances are selected but roll-up has not been executed or roll-up has failed) 3. Compliant (Green) (one or more substances are selected and roll-up was successful) 4. Exempt (Yellow) (when all substances are exempt ? verify exempt date)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.BuiltComplianceDate">
            <summary>
            Set when Manual flag is checked or after built compliance roll-up is successful. Cleared Manual flag is unchecked or after compliance roll-up is unsuccessful.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.BuiltLastRollUp">
            <summary>
            Set after built compliance roll-up
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.Weight">
            <summary>
            Read-only. Yes to display when the part has no net weight or when one or more of the selected has no weight.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.EnableRollUpType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.JobNumPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.RestrictionDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictionRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictSubstRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictSubstRow.JobNum">
            <summary>
            Job Number.  Associates the assembly record back its parent JobHead record.  Not directly maintainable.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictSubstRow.AssemblySeq">
            <summary>
            A sequence number that uniquely identifies the JobAsmbl record within the JobNum.  This can be user assigned or assigned by the system.  The system assigns the next available number during add mode if its left blank.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictSubstRow.RestrictionTypeID">
            <summary>
            Restriction Type identification.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictSubstRow.SubstanceID">
            <summary>
            Substance identification.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictSubstRow.Weight">
            <summary>
            Default weight of the substance per primary part of UOM
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictSubstRow.WeightUOM">
            <summary>
            By default the primary UOM of the part.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictSubstRow.Manual">
            <summary>
            Defaulted from Part Master Substances. When true then weight is disregarded in compliance roll-up.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictSubstRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictSubstRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictSubstRow.PartNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictSubstRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictSubstRow.JobNumPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictSubstRow.RestrictionDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictSubstRow.SubstanceDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictSubstRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmblRestrictSubstRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmRefDesRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmRefDesRow.JobNum">
            <summary>
            Job Number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmRefDesRow.AssemblySeq">
            <summary>
            Assembly sequence number that this material is associated with.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmRefDesRow.MtlSeq">
            <summary>
            A sequence number that uniquely defines the Material (JobMtl) record within a specific Job/Assembly.  This is system assigned.  The next available number is determined by reading last JobMtl record on the Job/Assembly and then adding ten to it.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmRefDesRow.RefDes">
            <summary>
            Identifier of Reference Designator
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmRefDesRow.RefDesSeq">
            <summary>
            Unique identifies the reference designator with the material sequence. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmRefDesRow.MtlPartNum">
            <summary>
            The Part Number of the component material record for the related Parent Part.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmRefDesRow.Side">
            <summary>
            Free form side location. (Top, Bottom, Both, Level, etc)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmRefDesRow.XLocation">
            <summary>
            X Coordinate of the reference designator
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmRefDesRow.YLocation">
            <summary>
            Y Coordinate of the reference designator
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmRefDesRow.ZLocation">
            <summary>
            Z Coordinate of the reference designator
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmRefDesRow.Rotation">
            <summary>
            Rotation of the reference designator. Max value = 360.000
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmRefDesRow.Description">
            <summary>
            Designator Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmRefDesRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmRefDesRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmRefDesRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmRefDesRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAsmRefDesRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAuditRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAuditRow.JobNum">
            <summary>
            Job number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAuditRow.ChangeDate">
            <summary>
            System date when this change was made.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAuditRow.ChangeTime">
            <summary>
            System time (seconds since midnight) of when the changes were made.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAuditRow.ChangedBy">
            <summary>
            UserID who made the changes.  Not maintainable by the user.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAuditRow.ChangeDescription">
            <summary>
            Used to enter a description of the changes that were made.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAuditRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAuditRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAuditRow.DspChangeTime">
            <summary>
            Formatted display of ChangeTime
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAuditRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAuditRow.JobNumPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAuditRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobAuditRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.JobNum">
            <summary>
            Job Number. Used in tying record back to its parent JobHead record. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.PartNum">
             <summary>
             Part number of the manufactured item.  Does not have to be valid in the Part master.  Cannot be blank.
            With verion 8.0 and Advanced Production License a job can have multiple end parts. These are defined in the JobPart table.
            This field has not changed. But will now be used to indicate the primary end part that is being produced. That is, the JobPart record where JobPart.PartNum = JobHead.PartNum will be considered as the primary end part. A primary part is only significant on Concurrent mode of production, because it?s quantity drives the material/operation requirements.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.RevisionNum">
            <summary>
            Part Revision number.  Defaults from the most current PartRev.RevisionNum.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.PartsPerOp">
             <summary>
             Part Per Operation. Active only for Concurrent process
            Jobs. Otherwise set to 1.	
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.PartQty">
             <summary>
             The number of individual parts that are being produced
            part. Sum of all related JobProd.ProdQty.
            Not Directly maintable.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.StockQty">
            <summary>
            Part Qty that is being produced for Stock. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.ShippedQty">
             <summary>
             Total Quantity of the end part shipped from this job.
            Updated via the ShipDtl write triggers.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.ReceivedQty">
             <summary>
             Total quantity received to stock for the end part of the Job.
            Updated via the Manufacturing receipts process.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.WIPQty">
             <summary>
             Represents the "outstanding" WIP of production quantity.
            A summary of JobProd.WIPQty, updated via JobProd write trigger.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.QtyCompleted">
             <summary>
             Part Production quantity completed.
            Updated via JobOper write trigger or LaborPart trigger.  If JobOper is the "Final Operation" (see JobAsmbl.FinalOpr) then this is set equal to JobOper.QtyCompleted.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.ReservedQty">
            <summary>
            Quantity of the job completed quantity that is "Reserved" for the linked demands (sales orders/other jobs). Summary of PartAlloc.ReservedQty where PartAlloc.SupplyJobNum = JobHead.JobNum.  Reservations for Orders are made via the Order Allocations program. They are excluded from available quantity calculations for the job. Available Quantity = JobHead.QtyCompleted - (Shipped + Received to stk + ReservedAllocQty + PickingQty + PickedQty).  Maintained via PartAlloc write trigger.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.AllocatedQty900">
            <summary>
            Total Allocated Quantity for this job part
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.PickingQty">
            <summary>
            Quantity of the job completed quantity that is considered as in the "Picking" process for the linked sales orders. Summary of PartAlloc.PickingQty where PartAlloc.SupplyJobNum = JobHead.JobNum. PickingQty is set in the Order Allocation program. Maintained via PartAlloc write trigger.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.PickedQty">
            <summary>
            Quantity of the job completed quantity that is considered as in the shipping "Staging" process for the linked sales orders. Summary of PartAlloc.PickedQty where PartAlloc.SupplyJobNum = JobHead.JobNum. PickedQty is updated when the material move moves the item to the staging area.  Maintained via PartAlloc write trigger.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.LbrCostBase">
             <summary>
             Defines an integer value which is used to calculate a
            ratio for prorating the labor costs to the end part. For example a job produces parts A and B, and you want part B to have cost 2 times that of the cost of Part A.  Part A CostBase would be 1 and B would be 2.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.MtlCostBase">
             <summary>
             Defines an integer value which is used to calculate a
            ratio for prorating the material costs to the end part. For example a job produces parts A and B, and you want part B to have cost 2 times that of the cost of Part A.  Part A CostBase would be 1 and B would be 2.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.JobClosed">
            <summary>
            Indicates if Job is closed.  Mirror image of JobHead.JobClosed. Duplicated for performance reasons 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.JobComplete">
            <summary>
            Indicates if production is complete for the job.   Mirror image of JobHead.JobClosed. Duplicated for performance reasons 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.Plant">
            <summary>
            Site Identifier.  Mirror image of JobHead.Site. Duplicated for performance reasons 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.PartDescription">
            <summary>
            Describes the Part.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.IUM">
            <summary>
            Defines the Unit of Measure used when part is issued, this is also how it is stocked.  Use the value from XaSyst.UM as a default when creating new part records.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.ShipDocReq">
             <summary>
             Shipping Documents Required.
            Indicates if shipping documents are required when shipping this part from the Job. Pertains to Job Shipments only and only if the PartNum does not exist in the PartTable. If it does exist then the Part.ShipDocReq. If checked, then at the time of shipping the system will require that the JobPart.ShipDocsAvail flag is true before allowing the shipment.Requires DocManagement license.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.ShipDocAvail">
             <summary>
             Required Shipping Documents Available.
            A flag manually set by the user to indicate that the required documents for the Job Part  are available. In order to set to Yes, at least one attachment having a DocType with Shipment = yes must exist for the Job Part.  If the Part.ShipDocReq = yes  then JobPart.ShipDocsA vail must = yes before the system will allow shipment of the Part from the job.Requires DocManagement license.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.MtlList">
            <summary>
            List of materials that us this part as cost base
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.PreventSugg">
            <summary>
            Indicates that MRP should not create job suggestions for the specified co-part
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.OrderQty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.ProcessMode">
            <summary>
            The value of the JobHead.ProcessMode
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.EnableShipDocReq">
            <summary>
            Indicates if ShipDocReq is enabled. Only if JobPart.PartNum does not exist in Part Table and if Document Management is installed.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.PartmasterPart">
            <summary>
            Logical field signifying whether JobPart.PartNum is a valid part master part.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.EnableSugg">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobPartRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.JobNum">
            <summary>
            Job Number. Used in tying record back to its parent JobHead record. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.OrderNum">
            <summary>
            Related sales order number. For build to stock demands the OrderNum, OrderLine and OrderRel fields are all zero  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.OrderLine">
            <summary>
            Related Sales order line number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.OrderRelNum">
            <summary>
            Related sales order release number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.ProdQty">
             <summary>
             The planned production quantity for a  Job to fill the demand.
            Note: updates the JobHead.ProdQty via JobProd write trigger.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.WarehouseCode">
             <summary>
             Inventory warehouse that job is producing for.
            Only relevant for build to stock demands (ordernum = 0). In this case a valid Part must be referenced.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.TargetJobNum">
            <summary>
            Production Demands can be from other jobs.  That is, one job can be building parts that are required by another job. The demand is defined by a JobMtl record on some other job.  "TargetJobNum" is the job that this job is making parts for.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.TargetAssemblySeq">
            <summary>
            Assembly Sequence of the JobMtl record that is making the production demand. (See "TargetJobNum")
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.TargetMtlSeq">
            <summary>
            Material Sequence of the JobMtl record that is making the production demand. (See "TargetJobNum")
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.ShippedQty">
             <summary>
             Quantity Shipped against this allocation.
            Updated via the ShipDtl write triggers.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.ReceivedQty">
             <summary>
             Total quantity received to stock for this production allocation.
            Updated via the Manufacturing Receipts process
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.WIPQty">
             <summary>
             Represents the "outstanding" WIP production quantity.
            WIPQty = JobProd.Quantity - (ShippedQty +ReceivedQty) if negative then it is set to zero. If related Order Release is closed then reservation is zero.
            Updated via the JobProd, OrderRel triggers.  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.CallNum">
            <summary>
            The Service Call number that this Job is linked to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.CallLine">
            <summary>
            The Service Call Line that this Job is linked to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.TFLineNum">
            <summary>
            This is the unique key for this table.  It will have a prefix like Job to indicate firm or unfirm orders.  The record can be linked to an Order Header by using the TFOrdNum TFOrdSeq keys.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.PartNum">
             <summary>
             Part number of the manufactured item.  Does not have to be valid in the Part master.  Cannot be blank.
            With verion 8.0 and Advanced Production License a job can have multiple end parts. These are defined in the JobPart table.
            This field has not changed. But will now be used to indicate the primary end part that is being produced. That is, the JobPart record where JobPart.PartNum = JobHead.PartNum will be considered as the primary end part. A primary part is only significant on Concurrent mode of production, because it?s quantity drives the material/operation requirements.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.Plant">
            <summary>
            Site Identifier.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.DemandContractNum">
            <summary>
            The demand contract this demand schedule is for.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.DemandHeadSeq">
            <summary>
            The sequence from the DemandHead record this DemandSchedule is related to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.DemandDtlSeq">
            <summary>
            The sequence from the DemandDetail record this DemandSchedule is related to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.DemandScheduleSeq">
             <summary>
             This field along with Company, DemandContractNum, DemandHeadSeq, and DemandDetailSeq make up the unique key to the table. The system should generate this number during entry of new detail records. The system determines next available number by finding the last DemandSchedulel record for the DemandDetail and the adding 1 to it.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.PlanUserID">
            <summary>
            PlanUserID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.PlanID">
            <summary>
            PlanID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.AsmPartDesc">
            <summary>
            The jobasmbl part description.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.AsmPartNum">
            <summary>
            The jobasmbl part number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.CustID">
            <summary>
            The customer ID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.CustName">
            <summary>
            The customer name.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.DemandLinkSource">
            <summary>
            The demand linke source
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.DemandLinkStatus">
            <summary>
            The demand link status
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.IUM">
            <summary>
            IUM
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.JHPartDesc">
            <summary>
            The jobhead part description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.JHPartNum">
            <summary>
            The jobhead part number
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.MakeToJobQty">
            <summary>
            The make to job quantity
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.MakeToStockQty">
            <summary>
            The make to stock quantity
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.MakeToType">
            <summary>
            The Make to type (i.e. Stock, Job, Order)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.MaxAllowedQty">
            <summary>
            Calculated quantity that could come from allocatedqty or accumulation from parttran.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.MtlPartDesc">
            <summary>
            The jobmtl part description.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.MtlPartNum">
            <summary>
            The jobmtl part number.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.OrdWIPQty">
            <summary>
            The order WIP quantity
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.OurStockQty">
            <summary>
            Calculated field OurStockQty, will update OrderRel.OurStockQty
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.PullFromStockWarehouseCode">
            <summary>
            Pull from Stock warehouse code (orderrel.warehousecode
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.PullFromStockWarehouseDesc">
            <summary>
            The pull from stock warehouse description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.ShipBy">
            <summary>
            The Demand Link Due Date - Ship By
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.SplitQty">
            <summary>
            The split quantity for the demand.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.StkWIPQty">
            <summary>
            The stock WIP quantity
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.TFOrdLine">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.TFOrdNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.TotalSplitQuantity">
            <summary>
            Temp field so UI has a column to bind to for calculation of Total Split Quantity.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.TrackSerialNumbers">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.Valid">
            <summary>
            This is a field used in Split Job to determine if record has been validated.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.CallLineLineDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.JobNumPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.OrderLineLineDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.OrderNumCurrencyCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.OrderNumCardMemberName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.PartSalesUM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.PartTrackSerialNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.PartSellingFactor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.PartTrackLots">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.PartIUM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.PartTrackDimension">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.PartPricePerCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.PartPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.WarehouseCodeDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobProdRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.JobClosed">
            <summary>
            Indicates if Job is closed.  A closed Job cannot be accessed for maintenance. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.ClosedDate">
            <summary>
            Date the Job was closed.  Defaults as the system but can be overridden.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.JobComplete">
            <summary>
            Indicates if production is complete for the job.  A complete job cannot be scheduled.  It can still have cost posted against it.  Maintained via Job Completion processing.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.JobCompletionDate">
            <summary>
            The date that production was completed for this Job.  Maintained via Job Completion Processing.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.JobEngineered">
            <summary>
            Indicates if Engineering is complete for this job.  That is, all departments that need to "check off" on this job before it is actually considered ready to go have done so.  A job must be Engineered before it  can be scheduled.  Non Engineered Jobs are excluded from most reports.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.JobReleased">
            <summary>
            Indicates if job has been "Released" to production.  Only jobs that are released can have labor posted against them.  Once labor is posted to a Job this flag cannot be changed.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.JobHeld">
            <summary>
            Indicates if the Job has been placed on "HOLD".  Currently this field is only used for display purposes.  It may be used later to prevent or provide warnings and messages in appropriate areas such as Shipping, Purchasing, Labor processing, etc.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.JobNum">
            <summary>
            Job number.  Unique key to identify the production job.  When adding "new" records and this is left blank the system will assign a job number.  Assigning numbers will be done by using a "database" sequence number.  Then using that number loop and increment until an available number is found.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.PartNum">
             <summary>
             Part number of the manufactured item.  Does not have to be valid in the Part master.  Cannot be blank.
            With verion 8.0 and Advanced Production License a job can have multiple end parts. These are defined in the JobPart table.
            This field has not changed. But will now be used to indicate the primary end part that is being produced. That is, the JobPart record where JobPart.PartNum = JobHead.PartNum will be considered as the primary end part. A primary part is only significant on Concurrent mode of production, because it?s quantity drives the material/operation requirements.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.RevisionNum">
            <summary>
            Part Revision number.  Defaults from the most current PartRev.RevisionNum.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.DrawNum">
            <summary>
            Engineering Drawing Number.  An optional field.  Defaulted from BomHead.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.PartDescription">
            <summary>
            The description of the part that is to be manufactured.  Use the Part.Description as the default. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.ProdQty">
             <summary>
             This field is not directly maintainable. The value stored here will be different than it was in the pre 8.0- versions. If ProcessMode is  Sequential then this is a total of ALL end parts that are being produced on the job. If Concurrent then it is the production quantity of the primary part /PartsPerOp .  For example 1000 bottle caps are require, 100 caps are produced per machine cycle would result in ProdQty of 10.
             See JobPart table for information on end parts of a job. 
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.IUM">
            <summary>
            The unit of measure for the job.  Defaulted from Part.IUM.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.StartDate">
            <summary>
            The Scheduled job start date (including queue time).  This is not directly user maintainable.  It is calculated/updated via the scheduling functions 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.StartHour">
            <summary>
            This field is established by scheduling.  It represents the "Hour offset from the beginning of the work day" when this job is scheduled to begin (including queue time).
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.DueDate">
            <summary>
            Scheduled finish date for the entire Job (including move time).  This is not user maintainable.  It is updated via the scheduling process.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.DueHour">
            <summary>
            This field is established by scheduling.  It represents the "Hour offset from the beginning of the work day" when this job is scheduled to end (including move time). 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.ReqDueDate">
            <summary>
            Indicates the date at which this job needs to be completed.  This is maintainable by the user.  It can be defaulted as the earliest due date of the linked orders.  This due date is used as the default date for "backward" scheduling of the job.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.JobCode">
            <summary>
            An optional user defined code.  This will be used for report selections and views of job headers. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.QuoteNum">
            <summary>
            Contains the Quote number reference.  This was assigned when the job details were pulled in from the quote.  It will be used to show quote figures compared to estimated and actual.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.QuoteLine">
            <summary>
            Contains the quote line number reference. (see QuoteNum ) 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.ProdCode">
            <summary>
            Product Group Code.  Use the Part.ProdCode as a default.  This can be blank or must be valid in the ProdGrup table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.ExpenseCode">
            <summary>
            The default override expense code that will be used for all labor reported against this job.  When this is entered then it will override all over default logic for developing the default G/L expense account in labor entry.  This can be blank or must be valid in the LabExpCd master file.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.InCopyList">
            <summary>
            Indicates if the final assembly is to be included in the browse of assemblies in the  "get details"  function.  The user can use to option to keep the "Copy from" list from becoming cluttered with too many assemblies.  This does not prevent the user from copying this assembly it just keeps it out of the browse.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.WIName">
             <summary>
             This field is blank or contains the UserID.  When not blank it indicates that some or all the operations of this job are in a "What if" scheduling mode.  In this condition the scheduling board prevents other users from modifying any operations on this job until the changes get committed.
            This field is also used as part of an index which allows the system to quickly find the operations that need to be reset to "Actual Schedule".
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.WIStartDate">
            <summary>
            The Scheduled "What If" job start date (including queue time).  This is not directly user maintainable.  It is calculated/updated via the scheduling functions 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.WIStartHour">
            <summary>
            This field is established by scheduling.  It represents the What-If "Hour offset from the beginning of the work day" when this job is scheduled to begin (including queue time).
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.Candidate">
             <summary>
             Indicates if the system considers this  Job as a candidate for the completion process.  Jobs that are marked as JobClosed = No, JobComplete = No and Candidate = Yes can be viewed in the Job Completion/Closing program by selecting the Candidates option.
            This field is not directly maintainable.  It is set to based on the value of JobOper.OpComplete of the last operation of the final assembly.  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.SchedCode">
            <summary>
            Scheduling Code.  SchedCode references a record in the SchedPri table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.SchedLocked">
            <summary>
            If yes the Jobs' schedule is locked, and not affected by the SchedCode.  Locked jobs are allocated (and over-allocated) machine time before any non-locked jobs are scheduled.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.ProjectID">
            <summary>
            Associates the JobHead with a project in the Project table.  This can be blank.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.WIPCleared">
            <summary>
            For closed jobs (JobHead.JobClosed = yes) this indicates if all of the costs on this job have been removed from WIP.  Costs are moved out of WIP during the "Generate WIP transactions" process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.JobFirm">
            <summary>
            A flag which controls whether or not the MRP process can make changes to this job.  MRP can only make changes when JobFirm = No.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.PersonList">
            <summary>
            A LIST-DELIM delimited list of people.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.PersonID">
             <summary>
             Identifies the Person to be used as the Production Planner.  This person is responsible for handling the manufacturing suggestions to this job.
            Manufacturing suggestions can be filtered by Planner.
            Relates to the Person table.  Defaults from the ProdGrup.PersonID.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.ProdTeamID">
            <summary>
            Production Team for the Job.  Associates the JobHead with a ProdTeam.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.QtyCompleted">
             <summary>
             Production quantity completed.
            Updated via JobOper write trigger.  If JobOper is the "Final Operation" (see JobAsmbl.FinalOpr) then this is set equal to JobOper.QtyCompleted.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.Plant">
            <summary>
            Site Identifier. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.DatePurged">
            <summary>
            The date the detail for the Job was purged.  The detail is the LaborDtl, PartTrans, and JobOpMac records associated with the job.  Once details have been purged the job cannot be reopened.  A job must be closed for it to be purged.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.TravelerReadyToPrint">
            <summary>
            Indicates if the Traveler can be printed. Print functions are not available if this is = No.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.StatusReadyToPrint">
            <summary>
            Indicates if the Status can be printed. Print functions are not available if this is = No.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.CallNum">
            <summary>
            The Service Call number that this Job is linked to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.CallLine">
            <summary>
            The Service Call Line that this Job is linked to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.JobType">
            <summary>
            Describe the type of job this is: MFG = Manufacturing, MNT = Maintenance, PRJ = Project, SRV = Service
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.PhaseID">
            <summary>
            Project Phase ID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.AnalysisCode">
            <summary>
            Analysis Code
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.HDCaseNum">
            <summary>
            The help desk case that created this job.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.EquipID">
             <summary>
             The ID of the Equipment that this "Maintenance Job" is for.
            Foreign key component to Equip table.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.PlanNum">
             <summary>
             Preventive Maintenance Plan Number that this "Maintenance Job" is for. Foreign key component to EquipPlan table.
            Note: A Maintenance Job does not have to be for a Preventive Maintenance plan, in which case this is zero.
            If time based plan, then the closing process will update the EquipPlan.NextDate. Therefore, the Job must know the EquipID and PlanNum in order to do this.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.IssueTopicID1">
            <summary>
            Maintenance Issue Topic 1.  Pertinent to maint jobs only. (JobType = "MNT") Foreign Key to HDTopic table.  Must be a top level topic (HDTopic.TopLevel = Yes) and HDTopic.MaintIssue = Yes 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.ExternalMES">
            <summary>
            Indicates the record is used with Machine MES
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.SOExists">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.PartNumPartDescription">
            <summary>
            Part Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.PartNumTrackDimension">
            <summary>
            Track Dimension
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.PartNumTrackLots">
            <summary>
            Track Lots
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.PartNumTrackSerialNum">
            <summary>
            Track Serial Num
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.EquipOEM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.EquipModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.EquipTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.EquipLocID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.PMJob">
            <summary>
            Relative to Maintenance Jobs (JobType = "MNT") indicates if job is for "Preventive Maintenance".  This is a job that was created for a Equipment Maintenance Plan (JobHead.PlanNum &gt; 0)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.EquipDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.JobTypeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.SmartString">
            <summary>
            Original smart string passed in for configuration
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.SmartStringProcessed">
            <summary>
            If TRUE then this field will mean that the smart string has already been processed
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.JobHeadListRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
    </members>
</doc>
